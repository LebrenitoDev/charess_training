{"version":3,"sources":["./src/app/admin/holidays/add-holiday/add-holiday.component.ts","./src/app/admin/holidays/add-holiday/add-holiday.component.html","./src/app/admin/holidays/all-holidays/all-holidays.component.ts","./src/app/admin/holidays/all-holidays/all-holidays.component.html","./src/app/admin/holidays/all-holidays/dialogs/delete/delete.component.ts","./src/app/admin/holidays/all-holidays/dialogs/delete/delete.component.html","./src/app/admin/holidays/all-holidays/dialogs/form-dialog/form-dialog.component.ts","./src/app/admin/holidays/all-holidays/dialogs/form-dialog/form-dialog.component.html","./src/app/admin/holidays/all-holidays/holiday.model.ts","./src/app/admin/holidays/all-holidays/holiday.service.ts","./src/app/admin/holidays/edit-holiday/edit-holiday.component.ts","./src/app/admin/holidays/edit-holiday/edit-holiday.component.html","./src/app/admin/holidays/holidays-routing.module.ts","./src/app/admin/holidays/holidays.module.ts"],"names":[],"mappings":"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","file":"src_app_admin_holidays_holidays_module_ts-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-holiday',\r\n  templateUrl: './add-holiday.component.html',\r\n  styleUrls: ['./add-holiday.component.sass']\r\n})\r\nexport class AddHolidayComponent {\r\n  holidayForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.holidayForm = this.fb.group({\r\n      no: ['', [Validators.required]],\r\n      title: ['', [Validators.required]],\r\n      sDate: ['', [Validators.required]],\r\n      eDate: ['', [Validators.required]],\r\n      type: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.holidayForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Holiday</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Holiday</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Holiday Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Holiday Details</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"holidayForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Title</mat-label>\r\n                                        <input matInput formControlName=\"title\" required>\r\n                                        <mat-icon matSuffix>event_note</mat-icon>\r\n                                        <mat-error *ngIf=\"holidayForm.get('title').hasError('required')\">\r\n                                            Please enter title\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Start date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"sDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('sDate').hasError('required')\">\r\n                                            Please select start date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>End date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"eDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker2></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('eDate').hasError('required')\">\r\n                                            Please select end date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday type</mat-label>\r\n                                        <mat-select formControlName=\"type\" required>\r\n                                            <mat-option [value]=\"'1'\">\r\n                                                Public Holiday\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'2'\">\r\n                                                Holiday by school\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"holidayForm.get('type').hasError('required')\">\r\n                                            type is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"btn-space\" [disabled]=\"!holidayForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { HolidayService } from './holiday.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Holiday } from './holiday.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-all-holidays',\r\n  templateUrl: './all-holidays.component.html',\r\n  styleUrls: ['./all-holidays.component.sass'],\r\n})\r\nexport class AllHolidaysComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'select',\r\n    'no',\r\n    'title',\r\n    'sDate',\r\n    'eDate',\r\n    'type',\r\n    'details',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: HolidayService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Holiday>(true, []);\r\n  id: number;\r\n  holiday: Holiday | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public holidayService: HolidayService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        holiday: this.holiday,\r\n        action: 'add',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.holidayService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        holiday: row,\r\n        action: 'edit',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.holidayService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Holiday>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new HolidayService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Holiday) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Holiday> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Holiday[] = [];\r\n  renderedData: Holiday[] = [];\r\n  constructor(\r\n    public exampleDatabase: HolidayService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Holiday[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllHolidays();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((holiday: Holiday) => {\r\n            const searchStr = (\r\n              holiday.no +\r\n              holiday.title +\r\n              holiday.sDate +\r\n              holiday.eDate +\r\n              holiday.type +\r\n              holiday.details\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Holiday[]): Holiday[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'no':\r\n          [propertyA, propertyB] = [a.no, b.no];\r\n          break;\r\n        case 'title':\r\n          [propertyA, propertyB] = [a.title, b.title];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'type':\r\n          [propertyA, propertyB] = [a.type, b.type];\r\n          break;\r\n        case 'details':\r\n          [propertyA, propertyB] = [a.details, b.details];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Holidays</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Holidays</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Holidays</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"no\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-6'\">No\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    {{row.no}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"title\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Title</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.title}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">Start Date\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-15'\">\r\n                    {{row.sDate | date: 'MM/dd/yyyy' }}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"eDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">End Date\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-15'\">\r\n                    {{row.eDate | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"type\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-15'\">Type\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-15'\">\r\n                    {{row.type}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"details\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Details\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\" class=\"column-nowrap\">\r\n                    {{row.details}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"psl-3 tbl-col-width-per-10\">Actions\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"psl-3 tbl-col-width-per-10\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HolidayService } from '../../holiday.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public holidayService: HolidayService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.holidayService.deleteHoliday(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\">No: </span>{{ data.no }}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Name: </span>{{ data.title }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Start Date: </span>{{ data.sDate | date: 'MM/dd/yyyy' }}\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">End Date: </span>{{ data.eDate | date: 'MM/dd/yyyy' }}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { HolidayService } from '../../holiday.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Holiday } from '../../holiday.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  holidayForm: FormGroup;\r\n  holiday: Holiday;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public holidayService: HolidayService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.holiday.date);\r\n      this.dialogTitle = data.holiday.title;\r\n      this.holiday = data.holiday;\r\n    } else {\r\n      this.dialogTitle = 'New Holiday';\r\n      this.holiday = new Holiday({});\r\n    }\r\n    this.holidayForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.holiday.id],\r\n      no: [this.holiday.no, [Validators.required]],\r\n      title: [this.holiday.title, [Validators.required]],\r\n      sDate: [\r\n        formatDate(this.holiday.sDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      eDate: [\r\n        formatDate(this.holiday.eDate, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      type: [this.holiday.type, [Validators.required]],\r\n      details: [this.holiday.details]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.holidayService.addHoliday(this.holidayForm.getRawValue());\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"holidayForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Title</mat-label>\r\n                        <input matInput formControlName=\"title\" required>\r\n                        <mat-icon matSuffix>event_note</mat-icon>\r\n                        <mat-error *ngIf=\"holidayForm.get('title').hasError('required')\">\r\n                            Please enter title\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Start date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"sDate\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                        <mat-error *ngIf=\"holidayForm.get('sDate').hasError('required')\">\r\n                            Please select start date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>End date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"eDate\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker2></mat-datepicker>\r\n                        <mat-error *ngIf=\"holidayForm.get('eDate').hasError('required')\">\r\n                            Please select end date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Holiday type</mat-label>\r\n                        <input matInput formControlName=\"type\" required>\r\n                        <mat-icon matSuffix>storefront</mat-icon>\r\n                        <mat-error *ngIf=\"holidayForm.get('type').hasError('required')\">\r\n                            Holiday type is required\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Details</mat-label>\r\n                        <textarea matInput formControlName=\"details\"></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!holidayForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { formatDate } from '@angular/common';\r\nexport class Holiday {\r\n  id: number;\r\n  no: string;\r\n  title: string;\r\n  sDate: string;\r\n  eDate: string;\r\n  type: string;\r\n  details: string;\r\n  constructor(holiday) {\r\n    {\r\n      this.id = holiday.id || this.getRandomID();\r\n      this.no = holiday.no || '';\r\n      this.title = holiday.title || '';\r\n      this.sDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.eDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.type = holiday.type || '';\r\n      this.details = holiday.details || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Holiday } from './holiday.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class HolidayService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/holiday.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Holiday[]> = new BehaviorSubject<Holiday[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Holiday[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllHolidays(): void {\r\n    this.subs.sink = this.httpClient.get<Holiday[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addHoliday(holiday: Holiday): void {\r\n    this.dialogData = holiday;\r\n\r\n    /*  this.httpClient.post(this.API_URL, holiday).subscribe(data => {\r\n      this.dialogData = holiday;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateHoliday(holiday: Holiday): void {\r\n    this.dialogData = holiday;\r\n\r\n    /* this.httpClient.put(this.API_URL + holiday.id, holiday).subscribe(data => {\r\n      this.dialogData = holiday;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteHoliday(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-holiday',\r\n  templateUrl: './edit-holiday.component.html',\r\n  styleUrls: ['./edit-holiday.component.sass']\r\n})\r\nexport class EditHolidayComponent {\r\n  holidayForm: FormGroup;\r\n  formdata = {\r\n    no: '99',\r\n    title: 'christmas Holiday',\r\n    sDate: '2019-12-17T14:22:18Z',\r\n    eDate: '2020-01-04T14:22:18Z',\r\n    type: '1',\r\n    details: 'christmas Holiday'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.holidayForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.holidayForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      no: [this.formdata.no, [Validators.required]],\r\n      title: [this.formdata.title, [Validators.required]],\r\n      sDate: [this.formdata.sDate, [Validators.required]],\r\n      eDate: [this.formdata.eDate, [Validators.required]],\r\n      type: [this.formdata.type, [Validators.required]],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Holiday</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Holiday</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Add Holiday Details</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"header\">\r\n                        <h2>Add Holiday Details</h2>\r\n                        \r\n                    </div>\r\n                    <div class=\"body\">\r\n                        <form class=\"m-4\" [formGroup]=\"holidayForm\" (ngSubmit)=\"onSubmit()\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Title</mat-label>\r\n                                        <input matInput formControlName=\"title\" required>\r\n                                        <mat-icon matSuffix>event_note</mat-icon>\r\n                                        <mat-error *ngIf=\"holidayForm.get('title').hasError('required')\">\r\n                                            Please enter title\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Start date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"sDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker1></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('sDate').hasError('required')\">\r\n                                            Please select start date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>End date</mat-label>\r\n                                        <input matInput [matDatepicker]=\"picker2\" formControlName=\"eDate\" required>\r\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n                                        <mat-datepicker #picker2></mat-datepicker>\r\n                                        <mat-error *ngIf=\"holidayForm.get('eDate').hasError('required')\">\r\n                                            Please select end date\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday type</mat-label>\r\n                                        <mat-select formControlName=\"type\" required>\r\n                                            <mat-option [value]=\"'1'\">\r\n                                                Public Holiday\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"'2'\">\r\n                                                Holiday by school\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                        <mat-error *ngIf=\"holidayForm.get('type').hasError('required')\">\r\n                                            type is required\r\n                                        </mat-error>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\" col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                                        <mat-label>Holiday Details</mat-label>\r\n                                        <textarea matInput formControlName=\"details\"></textarea>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                    <button class=\"btn-space\" [disabled]=\"!holidayForm.valid \" mat-raised-button\r\n                                        color=\"primary\">Submit</button>\r\n                                    <button type=\"button\" mat-button>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllHolidaysComponent } from './all-holidays/all-holidays.component';\r\nimport { AddHolidayComponent } from './add-holiday/add-holiday.component';\r\nimport { EditHolidayComponent } from './edit-holiday/edit-holiday.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-holidays',\r\n    component: AllHolidaysComponent\r\n  },\r\n  {\r\n    path: 'add-holiday',\r\n    component: AddHolidayComponent\r\n  },\r\n  {\r\n    path: 'edit-holiday',\r\n    component: EditHolidayComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HolidaysRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { HolidaysRoutingModule } from './holidays-routing.module';\r\nimport { AddHolidayComponent } from './add-holiday/add-holiday.component';\r\nimport { AllHolidaysComponent } from './all-holidays/all-holidays.component';\r\nimport { EditHolidayComponent } from './edit-holiday/edit-holiday.component';\r\nimport { DeleteDialogComponent } from './all-holidays/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-holidays/dialogs/form-dialog/form-dialog.component';\r\nimport { HolidayService } from './all-holidays/holiday.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddHolidayComponent,\r\n    AllHolidaysComponent,\r\n    EditHolidayComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    HolidaysRoutingModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [HolidayService],\r\n})\r\nexport class HolidaysModule {}\r\n"],"sourceRoot":"webpack:///"}