{"version":3,"sources":["./src/app/core/models/training/partner.training.participants.ts","./src/app/partnership/participants/participants.module.ts","./src/app/partnership/participants/participants.routing.module.ts","./src/app/partnership/participants/submission/submission.participants.component.ts","./src/app/partnership/participants/submission/submission.participants.component.html","./src/app/partnership/participants/training/participants.training.component.ts","./src/app/partnership/participants/training/participants.training.component.html"],"names":[],"mappings":"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","file":"src_app_partnership_participants_participants_module_ts-es2015.js","sourcesContent":["import {Institution} from \"../security/institution\";\nimport {Training} from \"./training\";\n\nexport class PartnerTrainingParticipants {\n    id: number;\n    training: Training;\n    partner: Institution;\n    participants: [{Person}];\n\n    constructor(t) {\n        {\n            this.id = t.id;\n            this.training = t.training;\n            this.partner = t.partner;\n            this.participants = t.participants;\n        }\n    }\n}\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MaterialFileInputModule} from 'ngx-material-file-input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {PerfectScrollbarModule} from \"ngx-perfect-scrollbar\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ParticipantsRoutingModule} from \"./participants.routing.module\";\nimport {ParticipantsTrainingComponent} from \"./training/participants.training.component\";\nimport {TrainingService} from \"../../organisation/training/training.service\";\nimport {SubmissionParticipantsComponent} from \"./submission/submission.participants.component\";\nimport {NgxMaskModule} from \"ngx-mask\";\n\n@NgModule({\n    declarations: [\n        ParticipantsTrainingComponent,\n        SubmissionParticipantsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSnackBarModule,\n        MatButtonModule,\n        MatIconModule,\n        MatDialogModule,\n        MatSortModule,\n        MatToolbarModule,\n        MatSelectModule,\n        MatDatepickerModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        MaterialFileInputModule,\n        MatMenuModule,\n        MatProgressSpinnerModule,\n        TranslateModule,\n        NgxDatatableModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        PerfectScrollbarModule,\n        NgbModule,\n        NgxMaskModule.forRoot(),\n        ParticipantsRoutingModule\n    ],\n    providers: [TrainingService]\n})\n\nexport class ParticipantsModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ParticipantsTrainingComponent} from \"./training/participants.training.component\";\nimport {SubmissionParticipantsComponent} from \"./submission/submission.participants.component\";\n\nconst routes: Routes = [\n    {\n        path: 'submission',\n        component: SubmissionParticipantsComponent,\n    },\n    {\n        path: '',\n        component: ParticipantsTrainingComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\n\nexport class ParticipantsRoutingModule {}\n","import {Component, OnInit} from \"@angular/core\";\nimport {\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup\n} from \"@angular/forms\";\nimport {Observable, map} from \"rxjs\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {TrainingService} from \"../../../organisation/training/training.service\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {Training} from \"../../../core/models/training/training\";\nimport {PartnerTrainingParticipants} from \"../../../core/models/training/partner.training.participants\";\nimport {Person} from \"../../../core/models/security/person\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './submission.participants.component.html',\n    styleUrls: ['./submission.participants.component.scss']\n})\n\nexport class SubmissionParticipantsComponent implements OnInit {\n\n    fg: FormGroup;\n    partner: Institution;\n    training: Training;\n    status: String;\n    startDate: Date;\n    endDate: Date;\n    msg: string;\n    isEmailDuplicated = [];\n    isIdentifierDuplicated = [];\n    unchanged = false;\n\n\n    constructor(private fb: FormBuilder, private router: Router, private service: TrainingService, private snack: MatSnackBar){\n        const state = this.router.getCurrentNavigation().extras.state;\n        const trainingPartner = state?state.trainingPartner:JSON.parse(localStorage.getItem(\"trainingPartner\"));\n\n        this.partner = trainingPartner.partner;\n        this.training = trainingPartner.training;\n        this.status = trainingPartner.status;\n        this.startDate = new Date(this.training?.startDate);\n        this.endDate = new Date(this.training?.endDate);\n\n        this.unchanged = this.status === 'completed' || this.status === 'deprecated';\n\n        console.log(this.unchanged);\n\n        const partnerTrainingParticpants = new PartnerTrainingParticipants(\n            {'partner': this.partner,\n                'training': this.training,\n                'participants': this.fb.array(trainingPartner.participants==null?[this.fb.group(new Person({}))]:trainingPartner.participants.map(p=>this.fb.group(p)))\n            });\n\n        this.fg = this.fb.group(partnerTrainingParticpants);\n    }\n\n    ngOnInit(){\n    }\n\n    get participants(): FormArray {\n        return this.fg.get('participants') as FormArray;\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    private success(){\n        this.toast('bg-green','The usr has been successfully created');\n        this.back();\n    }\n\n    private error(err: HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    submit(ob: any): void {\n        ob.participants = this.participants.getRawValue();\n        this.service.participate(ob).subscribe(\n            (res) => this.success(),\n            (err) => this.error(err)\n        );\n    }\n\n    back(){\n        this.router.navigate(['partnership/participants']);\n    }\n\n    push(){\n        this.participants.controls.unshift(this.fb.group(new Person({})));\n    }\n\n    pull(index: number): void {\n        if (this.participants.length > 1)\n            this.participants.removeAt(index);\n    }\n\n    checkEmail(index){\n        const participants = this.participants.getRawValue();\n        const email = participants[index].email;\n        if(email?.trim().length < 1)\n            return;\n        if(participants.length > 1){\n            for(let i=0; i< participants.length; i++){\n                if(index != i){\n                    if(email === participants[i].email){\n                        this.isEmailDuplicated[index] = true;\n                        this.msg = ' (existed in present pool)';\n                        return;\n                    }\n                }\n            }\n        }\n        this.service.getPersonByEmail(email).subscribe(res => {\n            if(res != null){\n                this.participants.controls.unshift(this.fb.group(res));\n                this.pull(index+1);\n            }\n        });\n    }\n\n    checkIdentifier(index){\n        const participants = this.participants.getRawValue();\n        const identifier = participants[index].identifier;\n        if(identifier?.trim().length < 1)\n            return;\n        if(participants.length > 1){\n            for(let i=0; i< participants.length; i++){\n                if(index != i){\n                    if(identifier === participants[i].email){\n                        this.isIdentifierDuplicated[index] = true;\n                        this.msg = ' (existed in present pool)';\n                        return;\n                    }\n                }\n            }\n        }\n        this.service.getPersonByIdentifier(identifier).subscribe(res => {\n            if(res != null){\n                this.participants.controls.unshift(this.fb.group(res));\n                this.pull(index+1);\n            }\n        });\n    }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{partner?partner.name:''}}: {{'Participants Submission' | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div>\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-1\">\n                                    <i [ngClass]=\"['material-icons-two-tone', 'icon', status]\">subject</i>\n                                </div>\n                                <div class=\"col-11\">\n                                    <div class=\"row title\">{{training?.topic?.fullname}}</div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">Nombre maximum de participants: <span class=\"corps\">{{training?.capacity}}</span></div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            Date de début: <span class=\"corps\">{{startDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            Date de fin: <span class=\"corps\">{{endDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">Catégorie de professionels attendue:\n                                            <span class=\"corps\" *ngFor=\"let category of training?.categories; index as i\">\n                                            {{i===0?category.name: (i===training.categories.length-1?' et ' + category.name: ' , ' + category.name)}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            Lieu de formation: <span class=\"corps\">{{training?.location.fullname}}</span> se trouvant (au/à/aux) <span class=\"corps\">{{training?.location.address}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <br/>\n                            <fieldset>\n                                <div class=\"row\">\n                                    <legend>{{\"Participants\" | translate}}</legend>\n                                    <ng-container formArrayName=\"participants\" *ngFor=\"let person of participants.controls; index as i\">\n                                        <ng-container [formGroupName]=\"i\">\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-2\">\n                                                    <mat-label>{{\"Numéro d'Identifiant Fiscal\" | translate}}</mat-label>\n                                                    <input matInput mask=\"000-000-000-0\" placeholder=\"000-000-000-0\" formControlName=\"identifier\" required (blur)=\"checkIdentifier(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width mb-2\">\n                                                    <mat-label>{{\"Phone\"| translate}}</mat-label>\n                                                    <input matInput matInput mask=\"0000-0000\" placeholder=\"0000-0000\" formControlName=\"phone\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"Email\"| translate}}</mat-label>\n                                                    <input matInput formControlName=\"email\" [showMaskTyped]=\"true\" required (blur)=\"checkEmail(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"FirstName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-2\">\n                                                    <mat-label>{{\"LastName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"!unchanged && (participants['controls'][i].status == 'VALID' && i===0 && participants['controls'].length < training.capacity)\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\"><mat-icon class=\"col-white\">add</mat-icon></button>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"!unchanged && (participants['controls'].length > 1 && (i>0 || participants['controls'][i].status != 'VALID') || participants['controls'].length >= training.capacity)\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"pull(i)\"><mat-icon class=\"col-white\">delete </mat-icon></button>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </fieldset>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <!--<button mat-raised-button color=\"primary\" [type]=\"submit\">{{\"Save\" | translate}}</button>-->\n                                            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"unchanged\">{{\"Save\" | translate}}</button>\n                                            <button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import {Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {TrainingService} from \"../../../organisation/training/training.service\";\nimport {Router} from \"@angular/router\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {MatMenuTrigger} from \"@angular/material/menu\";\nimport {DataSource, SelectionModel} from \"@angular/cdk/collections\";\nimport {BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport {AuthService} from \"../../../core/service/auth.service\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {map} from \"rxjs/operators\";\nimport {TrainingPartner} from \"../../../core/models/training/training.partner\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './participants.training.component.html',\n    styleUrls: ['./participants.training.component.scss']\n})\n\nexport class ParticipantsTrainingComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    displayedColumns = [\n        'status',\n        'topic',\n        'startDate',\n        'endDate',\n        'categories',\n        'capacity'\n    ];\n\n    database: TrainingService | null;\n    datasource: Source | null;\n    profiles=[];\n    dim = {\n        width: '1200px',\n        height: '420px'\n    };\n\n    partner: Institution;\n\n    constructor(public http: HttpClient, public dialog: MatDialog, private snack: MatSnackBar, private factory: TrainingService, private router: Router, private auth: AuthService){\n        super();\n        this.partner = auth.currentUserValue?.institution;\n    }\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild('filter', { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = { x: '0px', y: '0px' };\n\n    public load() {\n        this.database = new TrainingService(this.http);\n        this.datasource = new Source(this.database, this.paginator, this.sort, this.partner);\n        this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\n            () => {\n                if (!this.datasource) {\n                    return;\n                }\n                this.datasource.filter = this.filter.nativeElement.value;\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.load();\n    }\n\n    submitParticipants(row){\n        localStorage.setItem(\"trainingPartner\", JSON.stringify(row));\n        this.router.navigate(['partnership/participants/submission'],{state:{trainingPartner: row}});\n    }\n}\n\n\nexport class Source extends DataSource<TrainingPartner> {\n\n    filterChange = new BehaviorSubject('');\n\n    get filter(): string {\n        return this.filterChange.value;\n    }\n\n    set filter(filter: string) {\n        this.filterChange.next(filter);\n    }\n\n    filteredData: TrainingPartner[] = [];\n    renderedData: TrainingPartner[] = [];\n\n    constructor(public service: TrainingService, public paginator: MatPaginator, public ms: MatSort, public partner: Institution){\n        super();\n        this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n\n    connect(): Observable<TrainingPartner[]>{\n        const displayDataChanges = [\n            this.service.dataPartnerChange,\n            this.ms.sortChange,\n            this.filterChange,\n            this.paginator.page,\n        ];\n\n        this.service.getTrainingsForAPartner(this.partner?.id);\n        return merge(...displayDataChanges).pipe(\n            map(() => {\n                this.filteredData = this.service.partnerData\n                    .slice()\n                    .filter((tp: TrainingPartner) => {\n                        const search = (\n                            tp.training.topic.title\n                        ).toLowerCase();\n                        return search.indexOf(this.filter.toLowerCase()) !== -1;\n                    });\n                const sortedData = this.sortData(this.filteredData.slice());\n                const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n                this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n                return this.renderedData;\n            })\n        );\n    }\n\n    disconnect() {}\n\n    sortData(data: TrainingPartner[]): TrainingPartner[] {\n        if (!this.ms.active || this.ms.direction === '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n            switch (this.ms.active) {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'title':\n                    [propertyA, propertyB] = [a.training.topic.title, b.training.topic.title];\n                    break;\n\n            }\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (\n                (valueA < valueB ? -1 : 1) * (this.ms.direction === 'asc' ? 1 : -1)\n            );\n        });\n    }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive\">\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ml-0\">\n                                                <li class=\"dropdown\"><h2><strong>{{partner?partner.name:''}}: {{'training.page' | translate}}</strong></h2></li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label><i class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\" aria-label=\"Search box\">\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>&nbsp;</div>\n                                <div>\n                                    <div style=\"font-weight: bold\">{{'Legend' | translate}}:</div>\n                                    <div>\n                                        {{'New' | translate}}: <button mat-icon-button class=\"btn-tbl-edit new\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Pending' | translate}}: <button mat-icon-button class=\"btn-tbl-edit pending\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Filled' | translate}}: <button mat-icon-button class=\"btn-tbl-edit set\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'In Progress' | translate}}: <button mat-icon-button class=\"btn-tbl-edit ongoing\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Completed' | translate}}: <button mat-icon-button class=\"btn-tbl-edit completed\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Uncompleted' | translate}}: <button mat-icon-button class=\"btn-tbl-edit deprecated\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                    </div>\n                                </div>\n\n                                <mat-table #table [dataSource]=\"datasource\" matSort class=\"mat-cell\">\n                                    <ng-container matColumnDef=\"status\">\n                                        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">\n                                            <span>\n                                                <button mat-icon-button class=\"btn-tbl-edit {{row.status}}\">\n                                                    <mat-icon></mat-icon>\n                                                </button>\n                                            </span>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"topic\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Theme'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.training.topic.fullname}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"startDate\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Start Date'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.training.startDate}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"endDate\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'End Date'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.training.endDate}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"capacity\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'# Participants'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.participantsQuantity}}/<span style=\"font-weight: bold\">{{row.training.capacity}}</span></mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"categories\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Professionals Category'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">\n                                            <span *ngFor=\"let c of row.training.categories; index as i\">{{i===0?c.name: (i===row.training.categories.length-1? ', et ' + c.name: ', ' + c.name)}}</span>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"submitParticipants(row)\" [style.cursor]=\"'pointer'\" matRipple> </mat-row>\n                                </mat-table>\n                                <mat-paginator #paginator [length]=\"datasource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n"],"sourceRoot":"webpack:///"}