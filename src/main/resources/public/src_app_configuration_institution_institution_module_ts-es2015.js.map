{"version":3,"sources":["./src/app/configuration/institution/form/institution.form.component.ts","./src/app/configuration/institution/form/institution.form.component.html","./src/app/configuration/institution/institution-routing.module.ts","./src/app/configuration/institution/institution.model.ts","./src/app/configuration/institution/institution.module.ts","./src/app/configuration/institution/institution.service.ts","./src/app/configuration/institution/page/institution.page.component.ts","./src/app/configuration/institution/page/institution.page.component.html"],"names":[],"mappings":"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","file":"src_app_configuration_institution_institution_module_ts-es2015.js","sourcesContent":["import {Component, Inject, OnDestroy, OnInit} from \"@angular/core\";\nimport {\n    AbstractControl,\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup,\n    ValidationErrors,\n    Validators\n} from \"@angular/forms\";\nimport {Institution} from \"../institution.model\";\nimport {Observable, map} from \"rxjs\";\nimport {InstitutionService} from \"../institution.service\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {User} from \"../../../core/models/security/user\";\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\nimport {TopicService} from \"../../topic/topic.service\";\nimport {Topic} from \"../../topic/topic.model\";\nimport {sync} from \"glob\";\nimport {Person} from \"../../../core/models/security/person\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './institution.form.component.html'\n})\n\nexport class InstitutionFormComponent implements OnInit {\n\n    fg: FormGroup;\n    title: string;\n    place: Institution;\n    parent = new FormControl();\n    locationAddress = new FormControl();\n    places: Observable<Institution[]>;\n    locations: Observable<Location[]>;\n    placeArray = [];\n    locationArray = [];\n    isIdentifierDuplicated = [];\n    isEmailDuplicated = [];\n    msg: string;\n\n    constructor(private fb: FormBuilder, private router: Router, private service: InstitutionService, private snack: MatSnackBar){\n        const st = this.router.getCurrentNavigation().extras.state;\n        this.title = st?'Edit the current institution':'Create new institution';\n        let pl = (st && st.place)?st.place: new Institution({});\n        pl.managers = this.fb.array(pl.managers==null?[this.fb.group(new Person({}))]: pl.managers.map(m=>this.fb.group(m)));\n        if(pl && pl.parent)\n            this.parent.setValue(pl.parent);\n        if(pl && pl.locationAddress)\n            this.locationAddress.setValue(pl.locationAddress)\n        this.fg = this.fb.group(pl);\n    }\n\n    ngOnInit(){\n        this.places = this.parent.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getPlaces(typeof value==='string'?value.toLowerCase():value.name).subscribe((res)=>{\n                    this.placeArray = res;\n                });\n                return this.placeArray;\n            })\n        );\n        this.locations = this.locationAddress.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getLocations(typeof value==='string'?value.toLowerCase(): value.fullname).subscribe((res)=>{\n                    this.locationArray = res;\n                });\n                return this.locationArray;\n            })\n        );\n    }\n\n    display(ob): string {\n        if(!ob)\n            return;\n        return ob.fullname?ob.fullname:ob.name;\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    private success(){\n        this.toast('bg-green','The usr has been successfully created');\n        this.back();\n    }\n\n    private error(err: HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    submit(ob: any): void {\n        ob.parent = this.parent.value?.toString().trim().length <1?ob.parent:this.parent.value;\n        ob.locationAddress = this.locationAddress.value;\n        ob.managers = this.managers.getRawValue();\n        this.service.save(ob).subscribe(\n            (res) => this.success(),\n            (err) => this.error(err)\n        );\n    }\n\n    back(){\n        this.router.navigate(['configuration/institution/page']);\n    }\n\n    get managers(): FormArray {\n        return this.fg.get('managers') as FormArray;\n    }\n\n    private chkIdent(arr, index){\n        const ident = arr[index].identifier;\n        this.isIdentifierDuplicated = arr.map(e => false);\n        for(let i=0; i< arr.length; i++){\n            if(i != index && arr[i].identifier===ident){\n                this.isIdentifierDuplicated[index] = true;\n                this.msg = ' (existed in present pool)';\n                return;\n            }\n        }\n        this.service.getPerson(ident).subscribe(res => {\n            if(res != null){\n                this.pull(index);\n                this.managers.controls.unshift(this.fb.group(res));\n            }\n        });\n\n    }\n\n    private chkEmail(arr, index){\n        const mail = arr[index].email;\n        this.isEmailDuplicated = arr.map(e => false);\n        for(let i=0; i< arr.length; i++){\n            if(i != index && arr[i].email===mail){\n                this.isEmailDuplicated[index] = true;\n                this.msg = ' (existed in present pool)';\n                return;\n            }\n        }\n        this.service.getPerson(mail).subscribe(res => {\n            if(res != null){\n                this.managers.controls[index].setValue(this.fb.group(res));\n            }\n        });\n    }\n\n    check(index, field){\n        let arr = this.managers.getRawValue();\n        return field==='identifier'?this.chkIdent(arr, index):this.chkEmail(arr, index);\n\n    }\n\n    push(){\n        this.managers.controls.unshift(this.fb.group(new Person({})));\n    }\n\n    pull(index: number): void {\n        if (this.managers.length > 1)\n            this.managers.removeAt(index);\n    }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{title | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div>\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Name' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-error *ngIf=\"fg.get('name').hasError('')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Parent' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"parent\" [matAutocomplete]=\"autoParent\">\n                                        <mat-autocomplete autoActiveFirstOption #autoParent=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let p of places | async\" [value]=\"p\">{{p.name}}</mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Text Address' | translate}}</mat-label>\n                                        <input matInput formControlName=\"textAddress\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Location Address' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"locationAddress\" [matAutocomplete]=\"autoLoation\">\n                                        <mat-autocomplete autoActiveFirstOption #autoLoation=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let l of locations | async\" [value]=\"l\">{{l.fullname}}</mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <fieldset>\n                                <div class=\"row\">\n                                    <legend>{{\"Manager\" | translate}}</legend>\n                                    <ng-container formArrayName=\"managers\" *ngFor=\"let manager of managers.controls; index as i\">\n                                        <ng-container [formGroupName]=\"i\">\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>\n                                                        {{\"Identifier\" | translate}}\n                                                        <span *ngIf=\"isIdentifierDuplicated[i]\" class=\"error\">{{msg | translate}}</span>\n                                                    </mat-label>\n                                                    <input matInput mask=\"000-000-000-0\" formControlName=\"identifier\" required (blur)=\"check(i, 'identifier')\"/>\n                                                </mat-form-field>\n\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"FirstName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"LastName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"Email\"| translate}}<span *ngIf=\"isEmailDuplicated[i]\" class=\"error\">{{msg | translate}}</span></mat-label>\n                                                    <input matInput formControlName=\"email\" [showMaskTyped]=\"true\" required (blur)=\"check(i, 'email')\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"managers['controls'][i].status == 'VALID' && i===0 && !msg\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n\n                                                </div>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"managers['controls'][i].status == 'VALID' && i>0\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"pull(i)\">\n                                                        <mat-icon class=\"col-white\">delete</mat-icon>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </fieldset>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid || msg\">{{\"Save\" | translate}}</button>\n                                            <button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {InstitutionPageComponent} from \"./page/institution.page.component\";\r\nimport {InstitutionFormComponent} from \"./form/institution.form.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'page',\r\n        component: InstitutionPageComponent,\r\n    },\r\n    {\r\n        path: 'form',\r\n        component: InstitutionFormComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InstitutionRoutingModule {}\r\n","export class Institution {\n    id: number;\n    name: string;\n    managers?: [{Person}];\n    locationAddress?: Location;\n    textAddress?: string;\n    address?: string;\n    parent?: Institution;\n\n    constructor(institution){\n        {\n            this.id = institution.id;\n            this.name = institution.name;\n            this.parent = institution.parent || null;\n            this.textAddress = institution.textAddress || '';\n            this.locationAddress = institution.locationAddress || null;\n            this.managers = institution.managers || null;\n        }\n    }\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {InstitutionRoutingModule} from \"./institution-routing.module\";\r\nimport {InstitutionService} from \"./institution.service\";\r\nimport {InstitutionPageComponent} from \"./page/institution.page.component\";\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {InstitutionFormComponent} from \"./form/institution.form.component\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {NgxMaskModule} from \"ngx-mask\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        InstitutionPageComponent,\r\n        InstitutionFormComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        InstitutionRoutingModule,\r\n        NgxDatatableModule,\r\n        NgxMaskModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    providers: [InstitutionService]\r\n})\r\n\r\nexport class InstitutionModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport {Institution} from \"./institution.model\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Location} from \"../../core/models/security/location\";\r\nimport {Person} from \"../../core/models/security/person\";\r\n\r\n\r\n@Injectable()\r\nexport class InstitutionService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/place`;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getInstitutions(){\r\n        return this.http.get<Institution[]>(this.api);\r\n    }\r\n\r\n    getPlaces(criteria: string){\r\n        return this.http.get<Institution[]>(`${this.api}/search/${criteria}`);\r\n    }\r\n\r\n    save(place){\r\n        return this.http.post(this.api, place);\r\n    }\r\n\r\n    getLocations(criteria: string){\r\n        return this.http.get<Location[]>(`${environment.api}/location/search/${criteria}`);\r\n    }\r\n\r\n    deleteInstitution(id: number){\r\n        return this.http.delete(`${environment.api}/place/${id}`);\r\n    }\r\n\r\n    getPerson(key){\r\n        return this.http.get<Person>(`${environment.api}/user/person?key=${key}`);\r\n    }\r\n\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {InstitutionService} from \"../institution.service\";\nimport {Institution} from \"../institution.model\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {DeleteComponent} from \"../../delete/delete.confirm\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './institution.page.component.html'\n})\n\nexport class InstitutionPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n    rows = [];\n    data = [];\n    institution: Institution | null;\n    filteredData = [];\n    columns = [\n        { name: 'name' },\n        { name: 'address' }\n    ];\n\n    constructor(private service: InstitutionService, private snack: MatSnackBar, public dialog: MatDialog, private router: Router) {\n        super();\n    }\n\n    ngOnInit() {\n        this.set();\n    }\n\n    set(){\n        this.service.getInstitutions().subscribe(res => {\n            this.data = res;\n            this.filteredData = res;\n        });\n    }\n\n    filterDatatable(event){\n        const val = event.target.value.toLowerCase();\n        const cols = this.columns;\n        const keys = Object.keys(this.filteredData[0]);\n        this.data = this.filteredData.filter(function (item) {\n            for (let i = 0; i < cols.length; i++) {\n                if((item[cols[i].name] && item[cols[i].name].toString().toLowerCase().indexOf(val) !==-1) || !val)\n                    return true;\n            }\n        });\n        this.table.offset = 0;\n    }\n\n    delete(row): void {\n        const dialogRef = this.dialog.open(DeleteComponent, {});\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.service.deleteInstitution(row.id).subscribe(\n                    (res) => this.success(),\n                    (err: HttpErrorResponse)=>this.error(err)\n                );\n                this.set();\n            }\n        });\n\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    success(){\n        this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n            this.router.navigate(['/configuration/institution/page']);\n        });\n        this.toast('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.toast('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    add(){\n        this.router.navigate(['configuration/institution/form']);\n    }\n\n    edit(row){\n        this.router.navigate(['configuration/institution/form'],{state:{place: row}});\n    }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <div class=\"ngxTableHeader\">\n                                    <ul class=\"header-buttons-left ms-0 mb-0\">\n                                        <li class=\"dropdown\"><h2><strong>{{'training.configuration.list.facility' | translate}}</strong></h2></li>\n                                        <li class=\"dropdown m-l-20\">\n                                            <label><i class=\"material-icons search-icon\">search</i></label>\n                                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\" (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                        </li>\n                                    </ul>\n                                    <ul class=\"header-buttons\">\n                                        <li>\n                                            <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                            </button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <ngx-datatable #table class=\"material\" [rows]=\"data\" [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n\n                                    <ngx-datatable-column name=\"{{'Name' | translate}}\" sortable=\"true\" prop=\"name\" [width]=\"170\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-t-emplate>{{value}}</ng-template>\n                                    </ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Address' | translate}}\" sortable=\"true\" prop=\"address\" [width]=\"120\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value}}</ng-template>\n                                    </ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Manager' | translate}}\" sortable=\"true\" prop=\"managers\" [width]=\"100\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                                            {{value[0].fullname+' ('+value.length+')'}}\n                                        </ng-template>\n                                    </ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Parent' | translate}}\" sortable=\"true\" prop=\"parent\" [width]=\"170\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value?.name}}</ng-template>\n                                    </ngx-datatable-column>\n\n                                    <ngx-datatable-column name=\"Actions\" sortable=\"false\" [maxWidth]=\"105\">\n                                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                                            <span>\n                                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"edit(row)\">\n                                                    <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                                </button>\n                                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"delete(row)\">\n                                                    <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                                </button>\n                                            </span>\n                                        </ng-template>\n                                    </ngx-datatable-column>\n\n                                </ngx-datatable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n"],"sourceRoot":"webpack:///"}