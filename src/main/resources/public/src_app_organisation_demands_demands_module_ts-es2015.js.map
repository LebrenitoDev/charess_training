{"version":3,"sources":["./src/app/organisation/demands/demands-routing.module.ts","./src/app/organisation/demands/demands.module.ts","./src/app/organisation/demands/page/demands.page.component.ts","./src/app/organisation/demands/page/demands.page.component.html"],"names":[],"mappings":"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","file":"src_app_organisation_demands_demands_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {DemandsPageComponent} from \"./page/demands.page.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DemandsPageComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\n\r\nexport class DemandsRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MaterialFileInputModule} from 'ngx-material-file-input';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {DemandsRoutingModule} from \"./demands-routing.module\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {PerfectScrollbarModule} from \"ngx-perfect-scrollbar\";\r\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {DemandsPageComponent} from \"./page/demands.page.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DemandsPageComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        NgxDatatableModule,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        PerfectScrollbarModule,\r\n        NgbModule,\r\n        DemandsRoutingModule\r\n    ],\r\n    providers: []\r\n})\r\n\r\nexport class DemandsModule {}\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {Training} from \"../../../core/models/training/training\";\nimport {TrainingService} from \"../../../core/service/training.service\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './demands.page.component.html',\n    styleUrls: ['./demands.page.component.css'],\n})\n\nexport class DemandsPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    displayedColumns = [\n        'select',\n        'title',\n        'attendee',\n        'startDate',\n        'endDate',\n        'place',\n        'status',\n        'creator',\n        'created'\n    ];\n\n    database: TrainingService | null;\n    datasource: Source | null;\n    selection = new SelectionModel<Training>(true, []);\n    training: Training | null;\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild('filter', { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = {x:'0px', y:'0px'};\n\n    constructor(private http: HttpClient){\n        super();\n    }\n\n    private load(){\n        this.database = new TrainingService(this.http);\n        this.datasource = new Source(this.database, this.paginator, this.sort);\n        this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n            if(!this.datasource)\n                return;\n            this.datasource.filter = this.filter.nativeElement.value;\n        });\n    }\n\n    ngOnInit(){\n        this.load();\n    }\n\n    format(o){\n        switch (o) {\n            case 'TRAINING_REQUESTED': return 'Demandée';\n            case 'TRAINING_VALIDATED': return 'Validée';\n            case 'TRAINING_REJECTED': return 'Rejetée';\n            case 'TRAINING_PENDING': return 'En cours';\n            case 'TRAINING_COMPLETED': return 'Complétée';\n            case 'TRAINING_UNCOMPLETED': return 'Inachevée';\n        }\n    }\n\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.datasource.renderedData.length;\n        return numSelected === numRows;\n    }\n\n    masterToggle() {\n        this.isAllSelected()? this.selection.clear(): this.datasource.renderedData.forEach((row) => this.selection.select(row));\n    }\n\n}\n\nexport class Source extends DataSource<Training> {\n\n    filterChange = new BehaviorSubject('');\n\n    get filter(): string {\n        return this.filterChange.value;\n    }\n\n    set filter(filter: string) {\n        this.filterChange.next(filter);\n    }\n\n    filteredData: Training[] = [];\n    renderedData: Training[] = [];\n\n    constructor(public service: TrainingService, public paginator: MatPaginator, public ms: MatSort){\n        super();\n        this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n\n    connect(): Observable<Training[]>{\n        const displayDataChanges = [\n            this.service.dataChange,\n            this.ms.sortChange,\n            this.filterChange,\n            this.paginator.page,\n        ];\n        this.service.getTrainings();\n        return merge(...displayDataChanges).pipe(\n            map(() => {\n                this.filteredData = this.service.data\n                    .slice()\n                    .filter((t: Training) => {\n                        const search = (\n                            t?.topic.title\n                        ).toLowerCase();\n                        return search.indexOf(this.filter.toLowerCase()) !== -1;\n                    });\n                const sortedData = this.sortData(this.filteredData.slice());\n                const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n                this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n                return this.renderedData;\n            })\n        );\n    }\n\n    disconnect() {}\n\n    sortData(data: Training[]): Training[] {\n        if (!this.ms.active || this.ms.direction === '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n            switch (this.ms.active) {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n            }\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (\n                (valueA < valueB ? -1 : 1) * (this.ms.direction === 'asc' ? 1 : -1)\n            );\n        });\n    }\n\n}\n","\n<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive\">\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ml-0\">\n                                                <li class=\"dropdown\"><h2><strong>{{'training.partnership.demands' | translate}}</strong></h2></li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label><i class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Search\" size=\"100\" type=\"text\" #filter class=\"browser-default search-field\" aria-label=\"Search box\">\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        <!--<div class=\"col-4\">-->\n                                            <!--<ul class=\"header-buttons\">-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=!selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab (click)=\"update('password', 'password')\" matTooltip=\"Réinitialiser mot de passe\">-->\n                                                            <!--<mat-icon class=\"col-white\">restart_alt</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li ngbDropdown [hidden]=!selection.hasValue()>-->\n                                                    <!--<div class=\"icon-button-demo nav-notification-icons pt-0\" ngbDropdownToggle>-->\n                                                        <!--<button mat-mini-fab color=\"white\" matTooltip=\"Profile d'utilisateur\">-->\n                                                            <!--<mat-icon>format_list_bulleted</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                    <!--<div ngbDropdownMenu class=\"downlist\">-->\n                                                        <!--<ul class=\"menu\">-->\n                                                            <!--<li class=\"body\"><a href=\"#\" *ngFor=\"let p of profiles\" (click)=\"update(p, 'profile')\">{{p.name}}</a></li>-->\n                                                        <!--</ul>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=!selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab color=\"primary\" (click)=\"update('USER_ACTIVE', 'status')\" matTooltip=\"Activer\">-->\n                                                            <!--<mat-icon class=\"col-white\">notifications</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=!selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab color=\"warn\" (click)=\"update('USER_INACTIVE', 'status')\" matTooltip=\"Désactiver\">-->\n                                                            <!--<mat-icon class=\"col-white\">notifications_off</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=\"selection.selected.length !== 1\">-->\n                                                        <!--<button mat-mini-fab color=\"primary\" (click)=\"edit()\" matTooltip=\"Editer\">-->\n                                                            <!--<mat-icon class=\"col-white\">edit</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab color=\"primary\" (click)=\"add()\" matTooltip=\"Ajouter\">-->\n                                                            <!--<mat-icon class=\"col-white\">add</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                            <!--</ul>-->\n                                        <!--</div>-->\n                                    </div>\n                                </div>\n                                <mat-table #table [dataSource]=\"datasource\" matSort class=\"mat-cell\">\n                                    <ng-container matColumnDef=\"select\">\n                                        <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                                                          [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"topic\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Topic'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.topic?.title}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"attendee\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Number of attendees'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.numberOfAttendees}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"startDate\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Start Date'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.startDate | date:'mediumDate'}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"endDate\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'End Date'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.endDate | date:'mediumDate'}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"place\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Institution'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.requester.name }}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"creator\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Creator'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.creator.person.fullname }}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"created\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Created'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.created | date:'medium'}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"status\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Status'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{format(row.status)}}</mat-cell>\n                                    </ng-container>\n\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple> </mat-row>\n                                </mat-table>\n                                <mat-paginator #paginator [length]=\"datasource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n"],"sourceRoot":"webpack:///"}