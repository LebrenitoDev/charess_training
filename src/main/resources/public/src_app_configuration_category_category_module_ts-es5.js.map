{"version":3,"sources":["webpack:///src/app/configuration/category/category.module.ts","webpack:///src/app/configuration/category/category.routing.module.ts","webpack:///src/app/configuration/category/category.service.ts","webpack:///src/app/configuration/category/form/category.form.component.html","webpack:///src/app/configuration/category/form/category.form.component.ts","webpack:///src/app/configuration/category/page/category.page.component.html","webpack:///src/app/configuration/category/page/category.page.component.ts","webpack:///src/app/core/models/security/category.ts"],"names":["CategoryModule","CategoryService","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MaterialFileInputModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","NgxDatatableModule","MatAutocompleteModule","CategoryRoutingModule","CategoryPageComponent","CategoryFormComponent","routes","path","component","RouterModule","http","api","environment","get","id","category","post","UnsubscribeOnDestroyAdapter","fm","data","service","fb","snack","router","title","edit","fg","group","Category","create","getRawValue","subscribe","success","err","error","close","toast","back","navigate","console","color","text","open","duration","verticalPosition","horizontalPosition","panelClass","MAT_DIALOG_DATA","submit","cancel","dialog","rows","filteredData","columns","name","dim","width","height","set","getCategories","res","event","val","target","value","toLowerCase","cols","keys","Object","filter","item","i","length","toString","indexOf","table","offset","array","element","arrayRemove","dialogRef","action","subs","sink","afterClosed","result","row","DeleteComponent","DatatableComponent","filterDatatable","add","c"],"mappings":"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","file":"src_app_configuration_category_category_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {CategoryService} from \"./category.service\";\r\nimport {CategoryRoutingModule} from \"./category.routing.module\";\r\nimport {CategoryPageComponent} from \"./page/category.page.component\";\r\nimport {CategoryFormComponent} from \"./form/category.form.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CategoryPageComponent,\r\n        CategoryFormComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        NgxDatatableModule,\r\n        MatAutocompleteModule,\r\n        CategoryRoutingModule\r\n    ],\r\n    providers: [CategoryService]\r\n})\r\n\r\nexport class CategoryModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {CategoryPageComponent} from \"./page/category.page.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'page',\r\n        component: CategoryPageComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CategoryRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {UnsubscribeOnDestroyAdapter} from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Category} from \"../../core/models/security/category\";\r\n\r\n@Injectable()\r\nexport class CategoryService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/category`;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getCategories(){\r\n        return this.http.get<Category[]>(this.api);\r\n    }\r\n\r\n    delete(id:number){\r\n        return this.http.delete(`${this.api}/${id}`);\r\n    }\r\n\r\n    create(category: Category){\r\n        return this.http.post(this.api, category);\r\n    }\r\n}\r\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div><h4><strong>{{title | translate}}</strong></h4></div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"fm.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"fg\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Name' | translate}}</mat-label>\n                        <input matInput formControlName=\"name\" required>\n                        <mat-error *ngIf=\"fg.get('name').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid\" [mat-dialog-close]=\"1\" (click)=\"submit()\">{{'Save' | translate}}</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"cancel()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject, OnInit} from '@angular/core';\nimport {\n    FormGroup,\n    FormBuilder,\n} from '@angular/forms';\n\nimport { Observable, map } from 'rxjs';\nimport {CategoryService} from \"../category.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Category} from \"../../../core/models/security/category\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './category.form.component.html'\n})\n\nexport class CategoryFormComponent implements OnInit {\n\n    title: string;\n    fg: FormGroup;\n    category: Category;\n\n    constructor(public fm: MatDialogRef<CategoryFormComponent>, @Inject(MAT_DIALOG_DATA) public data: any, public service: CategoryService,\n                private fb: FormBuilder, private snack: MatSnackBar, private router: Router){\n        this.title = data.edit?'Edit the Current Category':'New Category';\n        this.fg = this.fb.group(data.category?data.category:new Category({}));\n    }\n\n    ngOnInit() {\n    }\n\n    display(category):string {\n        if(category)\n            return category.title;\n    }\n\n    submit() {\n        this.service.create(this.fg.getRawValue()).subscribe(\n            data => this.success(),\n            (err: HttpErrorResponse)=>this.error(err)\n        );\n    }\n\n    cancel(): void {\n        this.fm.close();\n    }\n\n    private success(){\n        this.toast('bg-green','The category has been successfully created');\n        this.back();\n    }\n\n    back(){\n        this.router.navigate(['configuration/category/page']);\n    }\n\n    private error(err:HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the category has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {duration: 2000, verticalPosition: \"top\", horizontalPosition: \"right\", panelClass: color});\n    }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <div class=\"ngxTableHeader\">\n                                    <ul class=\"header-buttons-left ms-0 mb-0\">\n                                        <li class=\"dropdown\"><h2><strong>{{'training.configuration.list.category' | translate}}</strong></h2></li>\n                                        <li class=\"dropdown m-l-20\">\n                                            <label><i class=\"material-icons search-icon\">search</i></label>\n                                            <input placeholder=\"{{'Search' | translate}}\" type=\"text\" class=\"browser-default search-field\" (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                        </li>\n                                    </ul>\n                                    <ul class=\"header-buttons\">\n                                        <li>\n                                            <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                            </button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <ngx-datatable #table class=\"material\" [rows]=\"data\" [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'auto'\" [limit]=\"10\">\n                                    <ngx-datatable-column name=\"{{'Name' | translate}}\" sortable=\"true\" prop=\"name\" [width]=\"560\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value}}</ng-template></ngx-datatable-column>\n\n                                    <ngx-datatable-column name=\"Actions\" sortable=\"false\" [maxWidth]=\"105\">\n                                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                                         <span>\n                                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"edit(row)\">\n                                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                            </button>\n                                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"delete(row)\">\n                                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                            </button>\n                                        </span>\n                                        </ng-template>\n                                    </ngx-datatable-column>\n                                </ngx-datatable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import {Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport {DatatableComponent } from '@swimlane/ngx-datatable';\nimport {MatSnackBar } from '@angular/material/snack-bar';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {DeleteComponent} from \"../../delete/delete.confirm\";\nimport {CategoryFormComponent} from \"../form/category.form.component\";\nimport {CategoryService} from \"../category.service\";\nimport {Category} from \"../../../core/models/security/category\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './category.page.component.html'\n})\n\nexport class CategoryPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n    rows = [];\n    data = [];\n    category: Category | null;\n\n    filteredData = [];\n    columns = [{name: 'name'}];\n\n    dim = {\n        width: '800px',\n        height: '260px'\n    };\n\n    constructor(private service: CategoryService, private snack: MatSnackBar, public dialog: MatDialog) {\n        super();\n    }\n\n    ngOnInit() {\n        this.set();\n    }\n\n    set(){\n        this.service.getCategories().subscribe(res => {\n            this.data = res;\n            this.filteredData = res;\n        });\n    }\n\n    filterDatatable(event){\n        const val = event.target.value.toLowerCase();\n        const cols = this.columns;\n        const keys = Object.keys(this.filteredData[0]);\n        this.data = this.filteredData.filter(function (item) {\n            for (let i = 0; i < cols.length; i++) {\n                if((item[cols[i].name] && item[cols[i].name].toString().toLowerCase().indexOf(val) !==-1) || !val)\n                   return true;\n            }\n        });\n        this.table.offset = 0;\n    }\n\n    arrayRemove(array, id) {\n        return array.filter(function (element) {\n            return element.id != id;\n        });\n    }\n\n    toast(color, text) {\n        this.snack.open(text, '', {duration: 2000, verticalPosition: \"top\", horizontalPosition: \"right\", panelClass: color});\n    }\n\n    success(id){\n        this.data = this.arrayRemove(this.data, id);\n        this.toast('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.toast('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    add(){\n        const dialogRef = this.dialog.open(CategoryFormComponent, {\n            ...this.dim,\n            data: {\n                category: this.category,\n                action: 'add',\n            }\n        });\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.set();\n            }\n        });\n    }\n\n    edit(row) {\n        const dialogRef = this.dialog.open(CategoryFormComponent, {\n            ...this.dim,\n            data: {\n                category: row,\n                action: 'edit',\n            }\n        });\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.set();\n            }\n        });\n    }\n\n    delete(row): void {\n        const dialogRef = this.dialog.open(DeleteComponent, {});\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.service.delete(row.id).subscribe(\n                    res => this.success(row.id),\n                    (err: HttpErrorResponse)=>this.error(err)\n                );\n                this.set();\n            }\n        });\n    }\n}\n","export class Category {\n    id: number;\n    name: string;\n\n    constructor(c){\n        {\n            this.id = c.id;\n            this.name = c.name;\n        }\n    }\n}"]}