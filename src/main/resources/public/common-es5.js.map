{"version":3,"sources":["webpack:///src/app/configuration/account/account.service.ts","webpack:///src/app/core/models/security/person.ts"],"names":["AccountService","http","api","environment","isTblLoading","dataChange","BehaviorSubject","get","value","usr","dialogData","subs","sink","subscribe","data","next","error","console","log","name","message","post","users","UnsubscribeOnDestroyAdapter","Person","person","id","identifier","firstName","lastName","email","gender"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAUaA,e;;;;;AAQT,iCAAoBC,IAApB,EAAsC;AAAA;;AAAA;;AAClC;AADgB,gBAAAA,IAAA,GAAAA,IAAA;AANpB,gBAAAC,GAAA,aAAS,uDAAAC,WAAA,IAAT;AAEA,gBAAAC,YAAA,GAAe,IAAf;AACA,gBAAAC,UAAA,GAAsC,IAAI,kCAAAC,eAAJ,CAA4B,EAA5B,CAAtC;AAGsC;AAErC;;;;iBAED,2BAAe;AACX,mBAAO,KAAKL,IAAL,CAAUM,GAAV,WAAgC,uDAAAJ,WAAA,IAAhC,YAAP;AACH;;;iBAED,uBAAW;AACP,mBAAO,KAAKF,IAAL,CAAUM,GAAV,WAA4B,KAAKL,GAAjC,cAAP;AACH;;;eAED,eAAQ;AACJ,mBAAO,KAAKG,UAAL,CAAgBG,KAAvB;AACH;;;iBAED,uBAAcC,GAAd,EAAmB;AACf,iBAAKC,UAAL,GAAkBD,GAAlB;AACH;;;iBAGD,yBAAgB;AACZ,mBAAO,KAAKC,UAAZ;AACH;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAKC,IAAL,CAAUC,IAAV,GAAiB,KAAKX,IAAL,CAAUM,GAAV,CAAsB,KAAKL,GAA3B,EAAgCW,SAAhC,CACb,UAACC,IAAD,EAAU;AACN,oBAAI,CAACV,YAAL,GAAoB,KAApB;;AACA,oBAAI,CAACC,UAAL,CAAgBU,IAAhB,CAAqBD,IAArB;AACH,aAJY,EAKb,UAACE,KAAD,EAA8B;AAC1B,oBAAI,CAACZ,YAAL,GAAoB,KAApB;AACAa,qBAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,GAAa,GAAb,GAAmBH,KAAK,CAACI,OAArC;AACH,aARY,CAAjB;AAUH;;;iBAED,gBAAOX,GAAP,EAAgB;AACZ,mBAAO,KAAKR,IAAL,CAAUoB,IAAV,CAAe,KAAKnB,GAApB,EAAyBO,GAAzB,CAAP;AACH;;;iBAED,gBAAOa,KAAP,EAAoB;AAChB,mBAAO,KAAKrB,IAAL,CAAUoB,IAAV,WAAkB,KAAKnB,GAAvB,cAAqCoB,KAArC,CAAP;AACH;;;;QApD+B,wEAAAC,2B;;;yBAAvBvB,e,EAAc,oH;AAAA,O;;;eAAdA,e;AAAc,iBAAdA,eAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRdwB,O,GAcT,iBAAYC,MAAZ,EAAoB;AAAA;;AAChB;AACI,eAAKC,EAAL,GAAUD,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEC,EAAlB;AACA,eAAKC,UAAL,GAAmBF,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEE,UAA3B;AACA,eAAKC,SAAL,GAAiBH,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEG,SAAzB;AACA,eAAKC,QAAL,GAAgBJ,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEI,QAAxB;AACA,eAAKC,KAAL,GAAaL,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEK,KAArB;AACA,eAAKC,MAAL,GAAcN,MAAM,SAAN,IAAAA,MAAM,WAAN,GAAM,MAAN,GAAAA,MAAM,CAAEM,MAAtB;AACH;AACJ,O","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {environment} from \"../../../environments/environment\";\nimport {User} from \"../../core/models/security/user\";\nimport {Profile} from \"../../core/models/security/profile\";\nimport {Institution} from \"../institution/institution.model\";\n\n@Injectable()\nexport class AccountService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}/user`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n    dialogData: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    getInstitutions(){\n        return this.http.get<Institution[]>(`${environment.api}/place`);\n    }\n\n    getProfiles(){\n        return this.http.get<Profile[]>(`${this.api}/profile`);\n    }\n\n    get data(): User[] {\n        return this.dataChange.value;\n    }\n\n    setDialogData(usr) {\n        this.dialogData = usr;\n    }\n\n\n    getDialogData() {\n        return this.dialogData;\n    }\n\n    getUsers(): void {\n        this.subs.sink = this.http.get<User[]>(this.api).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    create(usr: User){\n        return this.http.post(this.api, usr);\n    }\n\n    update(users: User[]){\n        return this.http.post(`${this.api}/update`, users);\n    }\n\n\n    \n    // addTeachers(teachers: User): void {\n    //     alert(1);\n    //     this.dialogData = teachers;\n    //\n    //     /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\n    //       this.dialogData = teachers;\n    //       },\n    //       (err: HttpErrorResponse) => {\n    //      // error code here\n    //     });*/\n    // }\n    // updateTeachers(teachers: User): void {\n    //     this.dialogData = teachers;\n    //\n    //     /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\n    //       this.dialogData = teachers;\n    //     },\n    //     (err: HttpErrorResponse) => {\n    //       // error code here\n    //     }\n    //   );*/\n    // }\n    // deleteTeachers(id: number): void {\n    //     console.log(id);\n    //\n    //     /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n    //       console.log(id);\n    //       },\n    //       (err: HttpErrorResponse) => {\n    //          // error code here\n    //       }\n    //     );*/\n    // }\n}\n","import * as moment from 'moment';\n\nexport class Person {\n    id: number;\n    identifier: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    phone: string;\n    email: string;\n    birthDate: moment.Moment;\n    locationAddress: Location;\n    textAddress: string;\n    fullname: string;\n    alias: string;\n\n    constructor(person) {\n        {\n            this.id = person?.id;\n            this.identifier =  person?.identifier;\n            this.firstName = person?.firstName;\n            this.lastName = person?.lastName;\n            this.email = person?.email;\n            this.gender = person?.gender;\n        }\n    }\n}"]}