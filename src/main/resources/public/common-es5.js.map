{"version":3,"sources":["webpack:///src/app/configuration/account/account.service.ts","webpack:///src/app/configuration/institution/institution.service.ts","webpack:///src/app/core/models/security/person.ts","webpack:///src/app/core/models/training/training.ts","webpack:///src/app/core/service/training.service.ts","webpack:///src/app/organisation/training/training.service.ts"],"names":["AccountService","http","api","environment","isTblLoading","dataChange","BehaviorSubject","get","value","usr","dialogData","subs","sink","subscribe","data","next","error","console","log","name","message","post","users","email","id","password","UnsubscribeOnDestroyAdapter","InstitutionService","institution","criteria","place","key","Person","person","identifier","firstName","lastName","phone","gender","Training","t","topic","startDate","endDate","location","capacity","categories","partners","cyclic","mode","testType","requester","requested","sponsor","facilitator","status","statusDate","TrainingService","inputs","training","apiTraining","dataPartnerChange","partnerId","url","partnerTrainingParticipants"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {environment} from \"../../../environments/environment\";\nimport {User} from \"../../core/models/security/user\";\nimport {Profile} from \"../../core/models/security/profile\";\nimport {Institution} from \"../../core/models/security/institution\";\n\n@Injectable()\nexport class AccountService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}/user`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n    dialogData: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    getInstitutions(){\n        return this.http.get<Institution[]>(`${environment.api}/place`);\n    }\n\n    getProfiles(){\n        return this.http.get<Profile[]>(`${this.api}/profile`);\n    }\n\n    get data(): User[] {\n        return this.dataChange.value;\n    }\n\n    setDialogData(usr) {\n        this.dialogData = usr;\n    }\n\n\n    getDialogData() {\n        return this.dialogData;\n    }\n\n    getUsers(): void {\n        this.subs.sink = this.http.get<User[]>(this.api).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    create(usr: User){\n        return this.http.post(this.api, usr);\n    }\n\n    update(users: User[]){\n        return this.http.post(`${this.api}/update`, users);\n    }\n\n    forgotPassword(email: String){\n        return this.http.post(`${this.api}/password/forgot`, email);\n    }\n\n    resetPassword(id: number, password: string){\n        return this.http.post(`${this.api}/password/reset`, {id, password});\n    }\n}\n","import {Institution} from \"../../core/models/security/institution\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UnsubscribeOnDestroyAdapter} from \"../../shared/UnsubscribeOnDestroyAdapter\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {Person} from \"../../core/models/security/person\";\r\nimport {Location} from \"../../core/models/security/location\";\r\n\r\n@Injectable()\r\nexport class InstitutionService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/place`;\r\n\r\n    isTblLoading = true;\r\n    dataChange: BehaviorSubject<Institution[]> = new BehaviorSubject<Institution[]>([]);\r\n    dialogData: any;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    get data(): Institution[] {\r\n        return this.dataChange.value;\r\n    }\r\n\r\n    setDialogData(institution) {\r\n        this.dialogData = institution;\r\n    }\r\n\r\n    getDialogData() {\r\n        return this.dialogData;\r\n    }\r\n\r\n    getInstitutions(): void {\r\n        this.subs.sink = this.http.get<Institution[]>(this.api).subscribe(\r\n            (data) => {\r\n                this.isTblLoading = false;\r\n                this.dataChange.next(data);\r\n            },\r\n            (error: HttpErrorResponse) => {\r\n                this.isTblLoading = false;\r\n                console.log(error.name + ' ' + error.message);\r\n            }\r\n        );\r\n    }\r\n\r\n    getPlaces(criteria:string){\r\n        return this.http.get<Institution[]>(`${environment.api}/place/${criteria}`);\r\n    }\r\n\r\n    save(place){\r\n        return this.http.post(this.api, place);\r\n    }\r\n\r\n    getLocations(criteria: string){\r\n        return this.http.get<Location[]>(`${environment.api}/location/search/${criteria}`);\r\n    }\r\n\r\n    deleteInstitution(id: number){\r\n        return this.http.delete(`${environment.api}/place/${id}`);\r\n    }\r\n\r\n    getPerson(key){\r\n        return this.http.get<Person>(`${environment.api}/user/person?key=${key}`);\r\n    }\r\n\r\n    getPersonByEmail(email){\r\n        return this.http.get<Person>(`${environment.api}/user/email?email=${email}`);\r\n    }\r\n}\r\n","import * as moment from 'moment';\n\nexport class Person {\n    id: number;\n    identifier: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    phone: string;\n    email: string;\n    birthDate: Date;\n    locationAddress: Location;\n    textAddress: string;\n    fullname: string;\n    alias: string;\n\n    constructor(person) {\n        {\n            this.id = person?.id;\n\n            this.identifier =  person?.identifier;\n            this.firstName = person?.firstName;\n            this.lastName = person?.lastName;\n            this.email = person?.email;\n            this.phone = person?.phone;\n            this.gender = person?.gender;\n        }\n    }\n}","import {Topic} from \"./topic\";\nimport {Institution} from \"../security/institution\";\n\nexport class Training {\n\n    id: number;\n    topic: Topic;\n    startDate: Date;\n    endDate: Date;\n    location: Institution;\n    capacity: number;\n    categories: [{Category}];\n    partners?: [{PartnerCategory}];\n    cyclic?: string;\n    mode?: string;\n    testType?: string;\n    requester?: Institution;\n    requested: Date;\n    sponsor?: Institution;\n    facilitator?: Institution;\n    status?: string;\n    statusDate: Date;\n\n    constructor(t) {\n        {\n            this.id = t.id;\n            this.topic = t.topic;\n            this.startDate = t.startDate;\n            this.endDate = t.endDate;\n            this.location = t.location;\n            this.capacity = t.capacity;\n            this.categories = t.categories || null;\n            this.partners = t.partners || null;\n            this.cyclic = t.cyclic;\n            this.mode = t.mode;\n            this.testType = t.testType;\n            this.requester = t.requester;\n            this.requested = t.requested;\n            this.sponsor = t.sponsor;\n            this.facilitator = t.facilitator;\n            this.status = t.status;\n            this.statusDate = t.statusDate || null;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {Training} from \"../models/training/training\";\nimport {environment} from \"../../../environments/environment\";\nimport {Topic} from \"../models/training/topic\";\nimport {Category} from \"../models/security/category\";\nimport {Person} from \"../models/security/person\";\nimport {TrainingLog} from \"../models/training/training.log\";\nimport {Calendar} from \"../models/training/calendar\";\nimport { EventInput } from \"@fullcalendar/angular\";\n\n@Injectable()\nexport class TrainingService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}/training`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<Training[]> = new BehaviorSubject<Training[]>([]);\n    dialogData: any;\n    inputs:EventInput[] = [];\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    topics(criteria:string){\n        return this.http.get<Topic[]>(`${environment.api}/topic/${criteria}`);\n    }\n\n    categories(){\n        return this.http.get<Category[]>(`${environment.api}/category`);\n    }\n\n    get data(): Training[] {\n        return this.dataChange.value;\n    }\n\n    getTrainings(): void {\n        this.subs.sink = this.http.get<Training[]>(this.api).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    getEvents(){\n        return this.http.get<Training[]>(this.api);\n    }\n\n\n    // getEvents(): EventInput[] {\n    //     this.http.get<Training[]>(this.api).subscribe(\n    //         (res) => {\n    //             console.log('----------------', res)\n    //             for (let i = 0; i < res.length; i++) {\n    //                 this.inputs.push({id: res[i].id.toString(), title: res[i].topic.title, start: new Date(res[i].startDate)});\n    //             }\n    //         });\n    //     return this.inputs;\n    // }\n\n    save(training){\n        return this.http.post(`${this.api}/request`, training);\n    }\n\n    log(training){\n        console.log(training, '=======================');\n        return this.http.get<TrainingLog[]>(`${this.api}/log?training=${training}`);\n    }\n\n}","import {Training} from \"../../core/models/training/training\";\nimport {Injectable} from \"@angular/core\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {environment} from \"../../../environments/environment\";\nimport {BehaviorSubject} from 'rxjs';\nimport {Topic} from \"../../core/models/training/topic\";\nimport {Institution} from \"../../core/models/security/institution\";\nimport {Category} from \"../../core/models/security/category\";\nimport {TrainingPartner} from \"../../core/models/training/training.partner\";\n\n@Injectable()\nexport class TrainingService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}`;\n    apiTraining = `${this.api}/training`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<Training[]> = new BehaviorSubject<Training[]>([]);\n    dataPartnerChange: BehaviorSubject<TrainingPartner[]> = new BehaviorSubject<TrainingPartner[]>([]);\n    dialogData: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    get data(): Training[] {\n        return this.dataChange.value;\n    }\n\n    get partnerData(): TrainingPartner[] {\n        return this.dataPartnerChange.value;\n    }\n\n    setDialogData(training) {\n        this.dialogData = training;\n    }\n\n    getDialogData() {\n        return this.dialogData;\n    }\n\n    getTrainings(): void {\n        this.subs.sink = this.http.get<Training[]>(this.apiTraining).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    getTopics(criteria:string){\n        return this.http.get<Topic[]>(`${this.api}/topic/${criteria}`);\n    }\n\n    getLocations(criteria:string){\n        return this.http.get<Institution[]>(`${this.api}/place/${criteria}`);\n    }\n\n    getCategories(criteria:string){\n        return this.http.get<Category[]>(`${this.api}/category`);\n    }\n\n    broadcast(training){\n        return this.http.post(`${this.api}/training/broadcast`, training);\n    }\n\n    getTrainingsForAPartner(partnerId: number){\n        const url = partnerId?`${this.apiTraining}/partner/${partnerId}`:`${this.apiTraining}`;\n        this.subs.sink = this.http.get<TrainingPartner[]>(url).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataPartnerChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    participate(partnerTrainingParticipants){\n        return this.http.post(`${this.api}/participant`, partnerTrainingParticipants);\n    }\n\n}"]}