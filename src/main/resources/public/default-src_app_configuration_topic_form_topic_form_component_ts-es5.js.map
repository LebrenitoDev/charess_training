{"version":3,"sources":["webpack:///src/app/configuration/topic/form/topic.form.component.html","webpack:///src/app/configuration/topic/form/topic.form.component.ts","webpack:///src/app/configuration/topic/topic.service.ts","webpack:///src/app/core/models/training/topic.ts"],"names":["TopicFormComponent","fm","data","service","fb","_snackBar","themeControl","FormControl","themes","action","topic","title","setValue","theme","Topic","fg","createContactForm","ob","getRawValue","filteredThemes","valueChanges","pipe","startWith","map","value","getTopics","toLowerCase","subscribe","res","filter","r","id","group","close","obj","addTopic","success","err","error","showNotification","console","colorName","text","open","duration","verticalPosition","horizontalPosition","panelClass","MAT_DIALOG_DATA","save","cancel","TopicService","http","api","environment","get","criteria","post","UnsubscribeOnDestroyAdapter","parent"],"mappings":"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","file":"default-src_app_configuration_topic_form_topic_form_component_ts-es5.js","sourcesContent":["<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div><h4><strong>{{title | translate}}</strong></h4></div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"fm.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"fg\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Title' | translate}}</mat-label>\n                        <input matInput formControlName=\"title\" required>\n                        <mat-error *ngIf=\"fg.get('title').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Thematic' | translate}}</mat-label>\n                        <input type=\"text\" placeholder=\"\"  matInput [formControl]=\"themeControl\" [matAutocomplete]=\"auto\">\n                        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"display\">\n                            <mat-option *ngFor=\"let topic of filteredThemes | async\" [value]=\"topic\">\n                                {{topic.title}}\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid\" [mat-dialog-close]=\"1\" (click)=\"save()\">{{'Save' | translate}}</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"cancel()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {\n    FormControl,\n    FormGroup,\n    FormBuilder,\n} from '@angular/forms';\n\nimport {startWith} from 'rxjs/operators';\nimport { Observable, map } from 'rxjs';\nimport {TopicService} from \"../topic.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Topic} from \"../../../core/models/training/topic\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './topic.form.component.html'\n})\n\nexport class TopicFormComponent implements OnInit {\n\n    action: string;\n    title: string;\n    fg: FormGroup;\n    topic: Topic;\n    themeControl = new FormControl();\n    themes=[];\n    filteredThemes: Observable<Topic[]>;\n\n    constructor(public fm: MatDialogRef<TopicFormComponent>, @Inject(MAT_DIALOG_DATA) public data: any,\n                public service: TopicService, private fb: FormBuilder, private _snackBar: MatSnackBar){\n        this.action = data.action;\n        if (this.action === 'edit') {\n            this.topic = data.topic;\n            this.title = 'Edit the current topic';\n            this.themeControl.setValue(data.topic.theme);\n        } else{\n            this.title = 'New topic';\n            this.topic = new Topic({});\n        }\n        this.fg = this.createContactForm();\n    }\n\n    ngOnInit() {\n        const ob = this.fg.getRawValue();\n        this.filteredThemes = this.themeControl.valueChanges.pipe(startWith(''),\n            map(value => {\n                this.service.getTopics(typeof value === 'string'?value.toLowerCase():value.title).subscribe((res)=>{\n                    this.themes = res.filter(r=>r.id !== ob.id);\n                });\n                return this.themes;\n            })\n        );\n    }\n\n    display(topic):string {\n        if(topic)\n            return topic.title;\n    }\n\n    createContactForm(): FormGroup {\n        return this.fb.group(this.topic);\n    }\n\n    submit() {\n    }\n\n    cancel(): void {\n        this.fm.close();\n    }\n\n    public save(): void {\n        let obj = this.fg.getRawValue();\n        obj.theme = this.themeControl.value;\n        this.service.addTopic(obj).subscribe(\n            data => this.success(),\n            (err: HttpErrorResponse)=>this.error(err)\n        );\n    }\n\n    private success(){\n        this.showNotification('bg-green','The topic has been successfully created');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.showNotification('bg-red','Something went wrong the topic has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    private showNotification(colorName, text) {\n        this._snackBar.open(text, '', {\n            duration: 2000,\n            verticalPosition: 'top',\n            horizontalPosition: 'right',\n            panelClass: colorName,\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {UnsubscribeOnDestroyAdapter} from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Topic} from \"../../core/models/training/topic\";\r\n\r\n@Injectable()\r\nexport class TopicService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/topic`;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getAllTopics(){\r\n        return this.http.get<Topic[]>(this.api);\r\n    }\r\n\r\n    getTopics(criteria:string){\r\n        return this.http.get<Topic[]>(`${this.api}/${criteria}`);\r\n    }\r\n\r\n    deleteTopic(id:number){\r\n        return this.http.delete(`${this.api}/${id}`);\r\n    }\r\n\r\n    addTopic(topic: Topic){\r\n        return this.http.post(this.api, topic);\r\n    }\r\n}\r\n","export class Topic {\n    id: number;\n    title: string;\n    theme?: Topic;\n\n\n    constructor(topic) {\n        {\n            this.id = topic.id;\n            this.title = topic.title;\n            this.theme = topic.parent || null;\n        }\n    }\n}\n"]}