{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/locked/locked.component.ts","./src/app/authentication/locked/locked.component.html","./src/app/authentication/page500/page500.component.ts","./src/app/authentication/page500/page500.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"names":[],"mappings":"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","file":"src_app_authentication_authentication_module_ts-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent,\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent,\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent,\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent,\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component,\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component,\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {AccountService} from \"../configuration/account/account.service\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        Page500Component,\r\n        Page404Component,\r\n        SigninComponent,\r\n        SignupComponent,\r\n        LockedComponent,\r\n        ForgotPasswordComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        AuthenticationRoutingModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatSelectModule,\r\n    ],\r\n    providers: [\r\n        AccountService\r\n    ]\r\n\r\n})\r\n\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n    });\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-03.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <h2 class=\"welcome-msg\"> Reset Password </h2>\r\n          <p class=\"auth-signup-text text-muted\">Let Us Help You</p>\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your registered email address.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Email</mat-label>\r\n                  <input matInput formControlName=\"email\" required>\r\n                  <mat-icon matSuffix>mail</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('email').hasError('required') || authForm.get('email').touched\">\r\n                    Please enter a valid email address\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-25 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Login?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/service/auth.service';\r\nimport { Role } from 'src/app/core/models/security/role';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss'],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  authForm: FormGroup;\r\n  submitted = false;\r\n  userImg: string;\r\n  userFullName: string;\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.authForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n    });\r\n    this.userImg = this.authService.currentUserValue.img;\r\n    this.userFullName =\r\n      this.authService.currentUserValue.person.firstName +\r\n      ' ' +\r\n      this.authService.currentUserValue.person.lastName;\r\n  }\r\n  get f() {\r\n    return this.authForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.authForm.invalid) {\r\n      return;\r\n    } else {\r\n      const role = this.authService.currentUserValue.profile.role;\r\n      if (role === Role.SUPER || role === Role.ADMIN) {\r\n        this.router.navigate(['/admin/dashboard/main']);\r\n      } else if (role === Role.TRAINER) {\r\n        this.router.navigate(['/teacher/dashboard']);\r\n      } else if (role === Role.ATTENDEE) {\r\n        this.router.navigate(['/student/dashboard']);\r\n      } else {\r\n        this.router.navigate(['/authentication/signin']);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-01.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"auth-locked\">\r\n              <div class=\"image\">\r\n                <img src={{userImg}} alt=\"User\">\r\n              </div>\r\n            </div>\r\n            <span class=\"auth-locked-title p-b-34 p-t-27\">\r\n              {{userFullName}}\r\n            </span>\r\n            <div class=\"text-center\">\r\n              <p class=\"txt1 p-b-20\">\r\n                Locked\r\n              </p>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n                  Enter your password here.\r\n                </span>\r\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                  <mat-label>Password</mat-label>\r\n                  <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\r\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\r\n                    Password is required\r\n                  </mat-error>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \"\r\n                type=\"submit\">\r\n                Reset My Password\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss'],\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"auth-container\">\r\n  <div class=\"row auth-main\">\r\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/bg-05.png);\">\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6 auth-form-section\">\r\n      <div class=\"form-section\">\r\n        <div class=\"auth-wrapper\">\r\n          <form>\r\n            <span class=\"error-header p-b-45\">\r\n              500\r\n            </span>\r\n            <span class=\"error-subheader2 p-b-5\">\r\n              Oops, Something went wrong. Please try after some times.\r\n            </span>\r\n            <div class=\"container-auth-form-btn mt-5\">\r\n              <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" type=\"submit\">\r\n                Go To Home Page\r\n              </button>\r\n            </div>\r\n            <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n              <div>\r\n                <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n                  Need Help?\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/service/auth.service';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n    selector: 'app-signin',\r\n    templateUrl: './signin.component.html',\r\n    styleUrls: ['./signin.component.scss'],\r\n})\r\n\r\nexport class SigninComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\r\n    fm: FormGroup;\r\n    submitted = false;\r\n    loading = false;\r\n    error = '';\r\n    hide = true;\r\n\r\n    constructor(private formBuilder: FormBuilder, private route: ActivatedRoute,  private router: Router,  private authService: AuthService) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.fm = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n        });\r\n    }\r\n\r\n    get f() {\r\n        return this.fm.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        this.loading = true;\r\n        this.error = '';\r\n\r\n        if (this.fm.invalid) {\r\n            this.error = 'Invalid username and/or password!!';\r\n            return;\r\n        }\r\n\r\n        this.subs.sink = this.authService.login(this.f.username.value, this.f.password.value).subscribe(\r\n            (res) => {\r\n                this.loading = false;\r\n                const page = this.authService.currentUserValue?.profile?.page;\r\n                this.router.navigate([page]);\r\n            },\r\n            (err) => {\r\n                this.loading = false;\r\n                this.error = 'Invalid username and/or password!!';\r\n                console.error(err, 'from signin component')\r\n            }\r\n        );\r\n    }\r\n}\r\n","<div class=\"auth-container\">\r\n    <div class=\"row auth-main\">\r\n        <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n            <div class=\"left-img bg\" style=\"background-image: url(assets/images/pages/bg-01.png);\"></div>\r\n        </div>\r\n        <div class=\"col-sm-6 auth-form-section\">\r\n            <div class=\"form-section\">\r\n                <div class=\"auth-wrapper\" align=\"center\">\r\n                    <div>\r\n                        <img src=\"assets/images/favicon.png\" width=\"100\" height=\"100\"/>\r\n                    </div>\r\n                    <br/>\r\n                    <h2 class=\"welcome-msg\"> Welcome to CHARESS</h2>\r\n                    <p class=\"auth-signup-text text-muted\">Need an account?<a routerLink=\"/authentication/signup\" class=\"sign-up-link\">Sign Up</a></p>\r\n\r\n                    <h2 class=\"login-title\">Sign in</h2>\r\n                    <form class=\"validate-form\" [formGroup]=\"fm\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Username</mat-label>\r\n                                    <input matInput formControlName=\"username\" /> <mat-icon matSuffix>face</mat-icon>\r\n                                    <mat-error *ngIf=\"fm.get('username').hasError('required')\">Username is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Password</mat-label>\r\n                                    <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\r\n                                    <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"  [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                    </a>\r\n                                    <mat-error *ngIf=\"fm.get('password').hasError('required')\">Password is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-flex justify-content-between align-items-center mb-5\">\r\n                            <div class=\"form-check\">\r\n                                <label class=\"form-check-label\">\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n                                    <span class=\"form-check-sign\"><span class=\"check\"></span></span>\r\n                                </label>\r\n                            </div>\r\n                            <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n                        </div>\r\n                        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">Invalid username and/or password</div>\r\n                        <div class=\"container-auth-form-btn\">\r\n                            <div style=\"text-align:center\">\r\n                                <button mat-raised-button color=\"primary\" [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\r\n                                        class=\"auth-form-btn\" [disabled]=\"!fm.valid \" type=\"submit\">Sign In</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {AccountService} from \"../../configuration/account/account.service\";\r\nimport {HttpErrorResponse} from \"@angular/common/http\";\r\n\r\n@Component({\r\n    selector: 'app-signup',\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.scss'],\r\n})\r\n\r\nexport class SignupComponent implements OnInit {\r\n    fg: FormGroup;\r\n    submitted = false;\r\n    returnUrl: string;\r\n    hide = true;\r\n    chide = true;\r\n    institutions=[];\r\n\r\n    constructor(private fb: FormBuilder, private route: ActivatedRoute, private router: Router, public service: AccountService) {\r\n        this.fg = this.fb.group({\r\n            username: ['', Validators.required],\r\n            locale: ['', [Validators.required]],\r\n            institution: ['', [Validators.required]],\r\n            password: ['', Validators.required],\r\n            cpassword: ['', Validators.required],\r\n            person: this.fb.group({\r\n                firstName: ['', [Validators.required]],\r\n                lastName: ['', [Validators.required]],\r\n                email: ['', [Validators.required, Validators.email, Validators.minLength(5)]]\r\n            })\r\n        });\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n    }\r\n\r\n    ngOnInit(){\r\n        this.service.getInstitutions().subscribe((res)=>{\r\n            this.institutions = res;\r\n        });\r\n    }\r\n\r\n    get f() {\r\n        return this.fg.controls;\r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        this.service.create(this.fg.getRawValue()).subscribe(\r\n            data => {\r\n                this.router.navigate(['/authentication/signin']);\r\n            },\r\n            (err: HttpErrorResponse) => console.log(err)\r\n        );\r\n    }\r\n}\r\n","<div class=\"auth-container\">\r\n    <div class=\"row auth-main\">\r\n        <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n            <div class=\"left-img bg\" style=\"background-image: url(assets/images/pages/bg-01.png);\"></div>\r\n        </div>\r\n        <div class=\"col-sm-6 auth-form-section\">\r\n            <div class=\"form-section\">\r\n                <div class=\"auth-wrapper\" align=\"center\">\r\n                    <div><img src=\"assets/images/favicon.png\" width=\"100\" height=\"100\"/></div><br/>\r\n                    <h2 class=\"welcome-msg\"> Sign Up </h2>\r\n                    <form class=\"validate-form\" [formGroup]=\"fg\" (ngSubmit)=\"onSubmit()\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\" formGroupName=\"person\">\r\n                                    <mat-label>First name</mat-label>\r\n                                    <input matInput formControlName=\"firstName\" required>\r\n                                    <mat-error *ngIf=\"fg.get('person.firstName').hasError('required')\">First name is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\" formGroupName=\"person\">\r\n                                    <mat-label>Last name</mat-label>\r\n                                    <input matInput formControlName=\"lastName\" required>\r\n                                    <mat-error *ngIf=\"fg.get('person.lastName').hasError('required')\">Last name is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Username</mat-label>\r\n                                    <input matInput formControlName=\"username\" required>\r\n                                    <mat-error *ngIf=\"fg.get('username').hasError('required')\">Username is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Password</mat-label>\r\n                                    <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n                                    <mat-error *ngIf=\"fg.get('password').hasError('required')\">Password is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Confirm Password</mat-label>\r\n                                    <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n                                    <mat-error *ngIf=\"fg.get('cpassword').hasError('required')\">Confirm Password is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Favorite language</mat-label>\r\n                                    <mat-select formControlName=\"locale\" required>\r\n                                        <mat-option [value]=\"'en'\">Anglais</mat-option>\r\n                                        <mat-option [value]=\"'fr'\">Français</mat-option>\r\n                                        <mat-option [value]=\"'kr'\">Créole Haïtien</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"fg.get('locale').hasError('required')\">Language is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\" formGroupName=\"person\">\r\n                                    <mat-label>Email</mat-label>\r\n                                    <input matInput formControlName=\"email\" required>\r\n                                    <mat-error *ngIf=\"fg.get('person.email').hasError('required') || fg.get('person.email').touched\">Please enter a valid email address</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                                    <mat-label>Place of work</mat-label>\r\n                                    <mat-select formControlName=\"institution\" required>\r\n                                        <mat-option *ngFor=\"let institution of institutions\" [value]=\"institution\">{{institution.name}}</mat-option>\r\n                                    </mat-select>\r\n                                    <mat-error *ngIf=\"fg.get('institution').hasError('required')\">Place of work is required</mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex-sb-m w-full  p-b-20\">\r\n                            <div>\r\n                              <span>Already Registered? <a routerLink=\"/authentication/signin\">Login</a></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"container-auth-form-btn\">\r\n                            <button mat-flat-button color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!fg.valid \" type=\"submit\">\r\n                              Register\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}