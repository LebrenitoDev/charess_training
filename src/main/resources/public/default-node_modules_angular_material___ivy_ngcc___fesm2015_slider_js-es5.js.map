{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js"],"names":["_c0","activeEventOptions","normalizePassiveListenerOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatSlider","multi","MatSliderChange","_MatSliderBase","mixinTabIndex","mixinColor","mixinDisabled","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","_dir","tabIndex","_ngZone","_document","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","change","EventEmitter","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","Subscription","_pointerDown","event","disabled","isTouchEvent","button","run","_touchId","getTouchIdForSlider","nativeElement","undefined","pointerPosition","getPointerPositionOnPage","oldValue","value","_lastPointerEvent","preventDefault","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","runOutsideAngular","element","addEventListener","coerceBooleanProperty","v","coerceNumberProperty","_calculatePercentage","markForCheck","_roundToDecimal","toString","split","pop","length","min","max","parseFloat","toFixed","displayWith","options","_blurHostElement","_clamp","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_getThumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","styles","shouldInvertAxis","_shouldInvertAxis","side","invertOffset","monitor","subscribe","origin","detectChanges","removeEventListener","stopMonitoring","unsubscribe","_getSliderDimensions","_updateTickIntervalPercent","hasModifierKey","keyCode","PAGE_UP","_increment","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","defaultView","window","triggerEvent","document","isTouch","moveEventName","endEventName","_getWindow","numSteps","step","pos","top","left","size","height","width","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","emit","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","source","percentage","_sliderWrapper","getBoundingClientRect","focus","blur","fn","isDisabled","ɵfac","MatSlider_Factory","t","DOCUMENT","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","MatSlider_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","$event","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","valueText","displayValue","inputs","color","outputs","exportAs","features","decls","vars","consts","template","MatSlider_Template","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","directives","encapsulation","changeDetection","ctorParameters","ElementRef","FocusMonitor","ChangeDetectorRef","Directionality","decorators","Optional","String","Attribute","args","NgZone","Inject","propDecorators","Input","Output","ViewChild","ngDevMode","Component","selector","providers","host","ViewEncapsulation","ChangeDetectionStrategy","id","point","touches","clientX","clientY","i","identifier","sliderHost","target","contains","MatSliderModule","MatSliderModule_Factory","ɵmod","ɵinj","imports","CommonModule","MatCommonModule","NgModule","exports","declarations","ngJitMode"],"mappings":"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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_slider_js-es5.js","sourcesContent":["import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event) ?\n                    getTouchIdForSlider(event, this._elementRef.nativeElement) : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    event.preventDefault();\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) || typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 29, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-valuetext\", ctx.valueText == null ? ctx.displayValue : ctx.valueText)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", vertical: \"vertical\", displayWith: \"displayWith\", valueText: \"valueText\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    valueText: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                    // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                    // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                    // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                    // to the same value that we set on the slider's thumb which will be truncated.\n                    '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], valueText: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); };\nMatSliderModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map"]}