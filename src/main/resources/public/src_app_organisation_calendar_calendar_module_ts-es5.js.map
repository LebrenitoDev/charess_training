{"version":3,"sources":["webpack:///src/app/organisation/calendar/calendar-routing.module.ts","webpack:///src/app/organisation/calendar/calendar.component.ts","webpack:///src/app/organisation/calendar/calendar.component.html","webpack:///src/app/organisation/calendar/calendar.model.ts","webpack:///src/app/organisation/calendar/calendar.module.ts","webpack:///src/app/organisation/calendar/calendar.service.ts","webpack:///src/app/organisation/calendar/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/organisation/calendar/dialogs/form-dialog/form-dialog.component.ts"],"names":["routes","path","component","CalendarComponent","CalendarRoutingModule","RouterModule","fb","dialog","calendarService","snack","service","calendarEvents","calendarOptions","headerToolbar","left","center","right","height","initialView","weekends","editable","selectable","selectMirror","dayMaxEvents","select","handleDateSelect","bind","eventClick","handleEventClick","eventsSet","handleEvents","alert","getEvents","subscribe","res","i","length","push","id","toString","title","topic","start","Date","startDate","end","endDate","initialEvents","console","log","selectInfo","addNewEvent","dialogRef","open","FormDialogComponent","data","calendar","action","subs","sink","afterClosed","result","calendarData","getDialogData","concat","details","events","addCusForm","reset","toast","clickInfo","row","event","extendedProps","forEach","element","index","editEvent","remove","eventIndex","slice","singleEvent","Object","assign","className","group","Validators","category","color","text","duration","verticalPosition","horizontalPosition","panelClass","UnsubscribeOnDestroyAdapter","Calendar","getRandomID","formatDate","S4","Math","random","substring","FullCalendarModule","CalendarModule","CalendarService","TrainingService","CommonModule","FormsModule","MatButtonModule","MatIconModule","MatSelectModule","MatCheckboxModule","MatInputModule","MatDialogModule","MatTooltipModule","MatDatepickerModule","MatSnackBarModule","ReactiveFormsModule","MatFormFieldModule","MatRadioModule","MatMenuModule","OwlDateTimeModule","OwlNativeDateTimeModule","TranslateModule","httpClient","API_URL","httpOptions","headers","HttpHeaders","dataChange","BehaviorSubject","value","dialogData","get","pipe","catchError","errorHandler","error","errorMessage","ErrorEvent","message","status","throwError","showDeleteBtn","formControl","FormControl","dialogTitle","calendarForm","createContactForm","hasError","deleteCalendar","getRawValue","close","addUpdateCalendar","MAT_DIALOG_DATA","confirmAdd"],"mappings":"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","file":"src_app_organisation_calendar_calendar_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CalendarComponent } from './calendar.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CalendarComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CalendarRoutingModule {}\r\n","import {Component, ViewChild, OnInit} from '@angular/core';\r\nimport {CalendarOptions,\r\n  DateSelectArg,\r\n  EventClickArg,\r\n  EventApi,\r\n} from '@fullcalendar/angular';\r\nimport { EventInput } from '@fullcalendar/angular';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Calendar } from './calendar.model';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { CalendarService } from './calendar.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { INITIAL_EVENTS } from './events-util';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport {UnsubscribeOnDestroyAdapter} from \"../../shared/UnsubscribeOnDestroyAdapter\";\r\nimport {TrainingService} from \"../../core/service/training.service\";\r\n\r\n@Component({\r\n    selector: 'app-calendar',\r\n    templateUrl: './calendar.component.html',\r\n    styleUrls: ['./calendar.component.scss'],\r\n})\r\n\r\nexport class CalendarComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\r\n    @ViewChild('calendar', { static: false })\r\n    calendar: Calendar | null;\r\n    public addCusForm: FormGroup;\r\n    dialogTitle: string;\r\n    calendarData: any;\r\n\r\n    calendarEvents:EventInput[] = [];\r\n    //tempEvents: EventInput[];\r\n\r\n    constructor(private fb: FormBuilder, private dialog: MatDialog, public calendarService: CalendarService, private snack: MatSnackBar, public service: TrainingService){\r\n        super();\r\n        // this.dialogTitle = 'Add New Event';\r\n        // this.calendar = new Calendar({});\r\n        // this.addCusForm = this.createCalendarForm(this.calendar);\r\n        alert();\r\n\r\n        this.service.getEvents().subscribe((res)=>{\r\n            for (let i = 0; i < res.length; i++) {\r\n                this.calendarEvents.push({\r\n                    id: res[i].id.toString(),\r\n                    title: res[i].topic.title,\r\n                    start: new Date(res[i].startDate),\r\n                    end: new Date(res[i].endDate)\r\n                });\r\n            }\r\n            this.calendarOptions.initialEvents = this.calendarEvents;\r\n            console.log('------2932----------', this.calendarEvents)\r\n        })\r\n        alert();\r\n\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n\r\n\r\n\r\n\r\n        // this.calendarEvents = INITIAL_EVENTS;\r\n        //  this.calendarEvents = this.service.getEvents().subscribe();\r\n        console.log('------292----------', this.calendarEvents)\r\n\r\n\r\n        //this.tempEvents = this.calendarEvents;\r\n    }\r\n\r\n    calendarOptions: CalendarOptions = {\r\n        headerToolbar: {\r\n            left: 'prev, next today',\r\n            center: 'title',\r\n            right: 'dayGridMonth, timeGridWeek, timeGridDay, listWeek',\r\n        },\r\n        height: 970,\r\n        initialView: 'dayGridMonth',\r\n        weekends: true,\r\n        editable: true,\r\n        selectable: true,\r\n        selectMirror: true,\r\n        dayMaxEvents: true,\r\n        select: this.handleDateSelect.bind(this),\r\n        eventClick: this.handleEventClick.bind(this),\r\n        eventsSet: this.handleEvents.bind(this),\r\n    };\r\n\r\n    handleDateSelect(selectInfo: DateSelectArg) {\r\n        this.addNewEvent();\r\n    }\r\n\r\n    addNewEvent() {\r\n        const dialogRef = this.dialog.open(FormDialogComponent, {\r\n        data: {\r\n        calendar: this.calendar,\r\n        action: 'add',\r\n        }\r\n        });\r\n\r\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n        if (result === 'submit') {\r\n        this.calendarData = this.calendarService.getDialogData();\r\n\r\n        this.calendarEvents = this.calendarEvents.concat({\r\n        // add new event data. must create new array\r\n        id: this.calendarData.id,\r\n        title: this.calendarData.title,\r\n        start: this.calendarData.startDate,\r\n        end: this.calendarData.endDate,\r\n        details: this.calendarData.details,\r\n        });\r\n        this.calendarOptions.events = this.calendarEvents;\r\n        this.addCusForm.reset();\r\n        this.toast(\r\n        'snackbar-success',\r\n        'Add Record Successfully...!!!'\r\n        );\r\n        }\r\n        });\r\n    }\r\n\r\n    handleEventClick(clickInfo: EventClickArg) {\r\n        this.eventClick(clickInfo);\r\n    }\r\n\r\n    eventClick(row) {\r\n        const calendarData: any = {\r\n        id: row.event.id,\r\n        title: row.event.title,\r\n        startDate: row.event.start,\r\n        endDate: row.event.end,\r\n        details: row.event.extendedProps.details,\r\n        };\r\n\r\n        const dialogRef = this.dialog.open(FormDialogComponent, {\r\n        data: {\r\n        calendar: calendarData,\r\n        action: 'edit',\r\n        }\r\n        });\r\n\r\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n        if (result === 'submit') {\r\n        this.calendarData = this.calendarService.getDialogData();\r\n        this.calendarEvents.forEach(function (element, index) {\r\n        if (this.calendarData.id === element.id) {\r\n        this.editEvent(index, this.calendarData);\r\n        }\r\n        }, this);\r\n        this.toast(\r\n        'black',\r\n        'Edit Record Successfully...!!!'\r\n        );\r\n        this.addCusForm.reset();\r\n        } else if (result === 'delete') {\r\n        this.calendarData = this.calendarService.getDialogData();\r\n        this.calendarEvents.forEach(function (element, index) {\r\n        if (this.calendarData.id === element.id) {\r\n        row.event.remove();\r\n        }\r\n        }, this);\r\n\r\n        this.toast('snackbar-danger','Delete Record Successfully...!!!');\r\n        }\r\n        });\r\n    }\r\n\r\n    editEvent(eventIndex, calendarData) {\r\n    const calendarEvents = this.calendarEvents.slice();\r\n    const singleEvent = Object.assign({}, calendarEvents[eventIndex]);\r\n    singleEvent.id = calendarData.id;\r\n    singleEvent.title = calendarData.title;\r\n    singleEvent.start = calendarData.startDate;\r\n    singleEvent.end = calendarData.endDate;\r\n    singleEvent.className = 'fc-event-success';\r\n    singleEvent.details = calendarData.details;\r\n    calendarEvents[eventIndex] = singleEvent;\r\n    this.calendarEvents = calendarEvents; // reassign the array\r\n\r\n    this.calendarOptions.events = calendarEvents;\r\n    }\r\n\r\n    handleEvents(events: EventApi[]) {\r\n    // this.currentEvents = events;\r\n    }\r\n\r\n    createCalendarForm(calendar): FormGroup {\r\n        return this.fb.group({\r\n            id: [calendar.id],\r\n            title: [calendar.title, [Validators.required, Validators.pattern('[a-zA-Z]+([a-zA-Z ]+)*')]],\r\n            category: [calendar.category],\r\n            startDate: [calendar.startDate, [Validators.required]],\r\n            endDate: [calendar.endDate, [Validators.required]],\r\n            details: [calendar.details, [Validators.required, Validators.pattern('[a-zA-Z]+([a-zA-Z ]+)*')],\r\n            ],\r\n        });\r\n    }\r\n\r\n    private toast(color, text) {\r\n        this.snack.open(text, '', {\r\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\r\n        });\r\n    }\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <h4 class=\"page-title\">{{'training.organisation.calendar' | translate}}</h4>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-12 col-sm-12\">\r\n                            <div><full-calendar [options]='calendarOptions'></full-calendar></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n","import { formatDate } from '@angular/common';\r\nexport class Calendar {\r\n    id: number;\r\n    title: string;\r\n    category: string;\r\n    startDate: string;\r\n    endDate: string;\r\n    details: string;\r\n\r\n    constructor(calendar) {\r\n        {\r\n            this.id = calendar.id || this.getRandomID();\r\n            this.title = calendar.title || '';\r\n            this.category = calendar.category || '';\r\n            this.startDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n            this.endDate = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n            this.details = calendar.details || '';\r\n        }\r\n    }\r\n\r\n    public getRandomID(): string {\r\n        const S4 = () => {\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        };\r\n        return S4() + S4();\r\n    }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { CalendarRoutingModule } from \"./calendar-routing.module\";\r\nimport { FullCalendarModule } from \"@fullcalendar/angular\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatMenuModule } from \"@angular/material/menu\";\r\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatRadioModule } from \"@angular/material/radio\";\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from \"ng-pick-datetime\";\r\nimport { CalendarComponent } from \"./calendar.component\";\r\nimport { FormDialogComponent as calFormComponent } from \"./dialogs/form-dialog/form-dialog.component\";\r\nimport { CalendarService } from \"./calendar.service\";\r\n\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport listPlugin from \"@fullcalendar/list\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {TrainingService} from \"../../core/service/training.service\";\r\n\r\nFullCalendarModule.registerPlugins([\r\n  dayGridPlugin,\r\n  timeGridPlugin,\r\n  listPlugin,\r\n  interactionPlugin,\r\n]);\r\n\r\n@NgModule({\r\n    declarations: [CalendarComponent, calFormComponent],\r\n\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        CalendarRoutingModule,\r\n        FullCalendarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSelectModule,\r\n        MatCheckboxModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatTooltipModule,\r\n        MatDatepickerModule,\r\n        MatSnackBarModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatFormFieldModule,\r\n        MatRadioModule,\r\n        MatMenuModule,\r\n        OwlDateTimeModule,\r\n        OwlNativeDateTimeModule,\r\n        TranslateModule\r\n    ],\r\n    providers: [\r\n        CalendarService,\r\n        TrainingService\r\n    ],\r\n})\r\n\r\nexport class CalendarModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Calendar } from \"./calendar.model\";\r\nimport { Observable } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class CalendarService {\r\n  private readonly API_URL = \"assets/data/calendar.json\";\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n  dataChange: BehaviorSubject<Calendar[]> = new BehaviorSubject<Calendar[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Calendar[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  getAllCalendars(): Observable<Calendar[]> {\r\n    return this.httpClient\r\n      .get<Calendar[]>(this.API_URL)\r\n      .pipe(catchError(this.errorHandler));\r\n  }\r\n\r\n  addUpdateCalendar(calendar: Calendar): void {\r\n    this.dialogData = calendar;\r\n  }\r\n  deleteCalendar(calendar: Calendar): void {\r\n    this.dialogData = calendar;\r\n  }\r\n  errorHandler(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 p-l-10 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"calendarForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Title</mat-label>\r\n            <input matInput formControlName=\"title\" required>\r\n            <mat-icon matSuffix>turned_in_not</mat-icon>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Category</mat-label>\r\n            <mat-select formControlName=\"category\" required>\r\n              <mat-option [value]=\"'work'\">\r\n                Work\r\n              </mat-option>\r\n              <mat-option [value]=\"'personal'\">\r\n                Personal\r\n              </mat-option>\r\n              <mat-option [value]=\"'important'\">\r\n                Important\r\n              </mat-option>\r\n              <mat-option [value]=\"'travel'\">\r\n                Travel\r\n              </mat-option>\r\n              <mat-option [value]=\"'friends'\">\r\n                Friends\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Start date</mat-label>\r\n            <input matInput formControlName=\"startDate\" [owlDateTimeTrigger]=\"startDate\" [owlDateTime]=\"startDate\"\r\n              placeholder=\"Choose a date\" required>\r\n            <mat-icon matSuffix [owlDateTimeTrigger]=\"startDate\" class=\"date-icon\">today</mat-icon>\r\n            <owl-date-time #startDate></owl-date-time>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 \">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>End date</mat-label>\r\n            <input matInput formControlName=\"endDate\" [owlDateTimeTrigger]=\"endDate\" [owlDateTime]=\"endDate\"\r\n              placeholder=\"Choose a date\" required>\r\n            <mat-icon matSuffix [owlDateTimeTrigger]=\"endDate\" class=\"date-icon\">today</mat-icon>\r\n            <owl-date-time #endDate></owl-date-time>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Event Details</mat-label>\r\n            <textarea matInput formControlName=\"details\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-10 col-lg-10 col-md-12 col-sm-12\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!calendarForm.valid\"\r\n              (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"dialogRef.close()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-xl-2 col-lg-2 col-md-12 col-sm-12\">\r\n          <div class=\"example-button-row\" *ngIf=\"showDeleteBtn\">\r\n            <button mat-mini-fab aria-label color=\"warn\" (click)=\"deleteEvent()\">\r\n              <mat-icon class=\"font-20\">delete</mat-icon>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { CalendarService } from '../../calendar.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Calendar } from '../../calendar.model';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass']\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  calendarForm: FormGroup;\r\n  calendar: Calendar;\r\n  showDeleteBtn = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public calendarService: CalendarService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.calendar.title;\r\n      this.calendar = data.calendar;\r\n      this.showDeleteBtn = true;\r\n    } else {\r\n      this.dialogTitle = 'New Event';\r\n      this.calendar = new Calendar({});\r\n      this.showDeleteBtn = false;\r\n    }\r\n\r\n    this.calendarForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.calendar.id],\r\n      title: [\r\n        this.calendar.title,\r\n        [Validators.required]\r\n      ],\r\n      category: [this.calendar.category],\r\n      startDate: [this.calendar.startDate,\r\n      [Validators.required]\r\n      ],\r\n      endDate: [this.calendar.endDate,\r\n      [Validators.required]\r\n      ],\r\n      details: [\r\n        this.calendar.details],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  deleteEvent() {\r\n    this.calendarService.deleteCalendar(this.calendarForm.getRawValue());\r\n    this.dialogRef.close('delete');\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.calendarService.addUpdateCalendar(this.calendarForm.getRawValue());\r\n    this.dialogRef.close('submit');\r\n  }\r\n}\r\n"]}