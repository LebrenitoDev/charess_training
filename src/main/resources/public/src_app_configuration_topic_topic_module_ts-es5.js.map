{"version":3,"sources":["webpack:///src/app/configuration/topic/form/topic.form.component.html","webpack:///src/app/configuration/topic/form/topic.form.component.ts","webpack:///src/app/configuration/topic/page/topic.page.component.html","webpack:///src/app/configuration/topic/page/topic.page.component.ts","webpack:///src/app/configuration/topic/topic-routing.module.ts","webpack:///src/app/configuration/topic/topic.module.ts","webpack:///src/app/configuration/topic/topic.service.ts","webpack:///src/app/core/models/training/topic.ts"],"names":["TopicFormComponent","fm","data","service","fb","_snackBar","themeControl","FormControl","themes","action","topic","title","setValue","theme","Topic","fg","createContactForm","filteredThemes","valueChanges","pipe","startWith","map","value","getTopics","toLowerCase","subscribe","res","group","close","obj","getRawValue","addTopic","success","err","error","showNotification","console","colorName","text","open","duration","verticalPosition","horizontalPosition","panelClass","MAT_DIALOG_DATA","save","cancel","TopicPageComponent","dialog","rows","filteredData","columns","dim","width","height","set","getAllTopics","event","val","target","cols","keys","Object","filter","item","i","length","toString","indexOf","table","offset","array","id","element","arrayRemove","dialogRef","subs","sink","afterClosed","result","row","DeleteComponent","deleteTopic","UnsubscribeOnDestroyAdapter","DatatableComponent","filterDatatable","add","routes","path","component","TopicRoutingModule","RouterModule","TopicModule","TopicService","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MaterialFileInputModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","NgxDatatableModule","MatAutocompleteModule","http","api","environment","get","criteria","post","parent"],"mappings":"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","file":"src_app_configuration_topic_topic_module_ts-es5.js","sourcesContent":["<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div><h4><strong>{{title | translate}}</strong></h4></div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"fm.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"fg\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Title' | translate}}</mat-label>\n                        <input matInput formControlName=\"title\" required>\n                        <mat-error *ngIf=\"fg.get('title').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Thematic' | translate}}</mat-label>\n                        <input type=\"text\" placeholder=\"\"  matInput [formControl]=\"themeControl\" [matAutocomplete]=\"auto\">\n                        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"display\">\n                            <mat-option *ngFor=\"let topic of filteredThemes | async\" [value]=\"topic\">\n                                {{topic.title}}\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid\" [mat-dialog-close]=\"1\" (click)=\"save()\">{{'Save' | translate}}</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"cancel()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {\n    FormControl,\n    FormGroup,\n    FormBuilder,\n} from '@angular/forms';\n\nimport {startWith} from 'rxjs/operators';\nimport { Observable, map } from 'rxjs';\nimport {TopicService} from \"../topic.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Topic} from \"../../../core/models/training/topic\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './topic.form.component.html'\n})\n\nexport class TopicFormComponent implements OnInit {\n\n    action: string;\n    title: string;\n    fg: FormGroup;\n    topic: Topic;\n    themeControl = new FormControl();\n    themes=[];\n    filteredThemes: Observable<Topic[]>;\n\n    constructor(public fm: MatDialogRef<TopicFormComponent>, @Inject(MAT_DIALOG_DATA) public data: any,\n                public service: TopicService, private fb: FormBuilder, private _snackBar: MatSnackBar){\n        this.action = data.action;\n        if (this.action === 'edit') {\n            this.topic = data.topic;\n            this.title = 'Edit the current topic';\n            this.themeControl.setValue(data.topic.theme);\n        } else{\n            this.title = 'New topic';\n            this.topic = new Topic({});\n        }\n        this.fg = this.createContactForm();\n    }\n\n    ngOnInit() {\n        this.filteredThemes = this.themeControl.valueChanges.pipe(startWith(''),\n            map(value => {\n                this.service.getTopics(typeof value === 'string'?value.toLowerCase():value.title).subscribe((res)=>{\n                    this.themes = res;\n                });\n                return this.themes;\n            })\n        );\n    }\n\n    display(topic):string {\n        if(topic)\n            return topic.title;\n    }\n\n    createContactForm(): FormGroup {\n        return this.fb.group(this.topic);\n    }\n\n    submit() {\n    }\n\n    cancel(): void {\n        this.fm.close();\n    }\n\n    public save(): void {\n        let obj = this.fg.getRawValue();\n        obj.theme = this.themeControl.value;\n        this.service.addTopic(obj).subscribe(\n            data => this.success(),\n            (err: HttpErrorResponse)=>this.error(err)\n        );\n    }\n\n    private success(){\n        this.showNotification('bg-green','The topic has been successfully created');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.showNotification('bg-red','Something went wrong the topic has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    private showNotification(colorName, text) {\n        this._snackBar.open(text, '', {\n            duration: 2000,\n            verticalPosition: 'top',\n            horizontalPosition: 'right',\n            panelClass: colorName,\n        });\n    }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <div class=\"ngxTableHeader\">\n                                    <ul class=\"header-buttons-left ms-0 mb-0\">\n                                        <li class=\"dropdown\"><h2><strong>{{'training.configuration.list.topic' | translate}}</strong></h2></li>\n                                        <li class=\"dropdown m-l-20\">\n                                            <label><i class=\"material-icons search-icon\">search</i></label>\n                                            <input placeholder=\"{{'Search' | translate}}\" type=\"text\" class=\"browser-default search-field\" (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                        </li>\n                                    </ul>\n                                    <ul class=\"header-buttons\">\n                                        <li>\n                                            <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                            </button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <ngx-datatable #table class=\"material\" [rows]=\"data\" [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'auto'\" [limit]=\"10\">\n                                    <ngx-datatable-column name=\"{{'Title' | translate}}\" sortable=\"true\" prop=\"title\" [width]=\"280\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value}}</ng-template></ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Theme' | translate}}\" sortable=\"true\" prop=\"theme\" [width]=\"280\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value?.title}}</ng-template></ngx-datatable-column>\n\n                                    <ngx-datatable-column name=\"Actions\" sortable=\"false\" [maxWidth]=\"105\">\n                                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                                         <span>\n                                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"edit(row)\">\n                                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                            </button>\n                                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"delete(row)\">\n                                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                            </button>\n                                        </span>\n                                        </ng-template>\n                                    </ngx-datatable-column>\n                                </ngx-datatable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TopicService} from \"../topic.service\";\nimport {TopicFormComponent} from \"../form/topic.form.component\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {DeleteComponent} from \"../../delete/delete.confirm\";\nimport {Topic} from \"../../../core/models/training/topic\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './topic.page.component.html'\n})\n\nexport class TopicPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n    rows = [];\n    data = [];\n    topic: Topic | null;\n\n    filteredData = [];\n\n    columns = [\n        { title: 'title' },\n        { theme: 'theme' }\n    ];\n\n    dim = {\n        width: '1000px',\n        height: '380px'\n    };\n\n    constructor(private service: TopicService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\n        super();\n    }\n\n    ngOnInit() {\n        this.set();\n    }\n\n    set(){\n        this.service.getAllTopics().subscribe(res => {\n            this.data = res;\n            this.filteredData = res;\n        });\n    }\n\n    filterDatatable(event){\n        const val = event.target.value.toLowerCase();\n        const cols = this.columns;\n        const keys = Object.keys(this.filteredData[0]);\n        this.data = this.filteredData.filter(function (item) {\n            for (let i = 0; i < cols.length; i++) {\n                if((item[cols[i].title] && item[cols[i].title].toString().toLowerCase().indexOf(val) !==-1) || !val)\n                   return true;\n            }\n        });\n        this.table.offset = 0;\n    }\n\n    arrayRemove(array, id) {\n        return array.filter(function (element) {\n            return element.id != id;\n        });\n    }\n\n    showNotification(colorName, text) {\n        this._snackBar.open(text, '', {\n            duration: 2000,\n            verticalPosition: \"top\",\n            horizontalPosition: \"right\",\n            panelClass: colorName,\n        });\n    }\n\n    success(id){\n        this.data = this.arrayRemove(this.data, id);\n        this.showNotification('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.showNotification('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    add(){\n        const dialogRef = this.dialog.open(TopicFormComponent, {\n            ...this.dim,\n            data: {\n                topic: this.topic,\n                action: 'add',\n            }\n        });\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.set();\n            }\n        });\n    }\n\n    edit(row) {\n        const dialogRef = this.dialog.open(TopicFormComponent, {\n            ...this.dim,\n            data: {\n                topic: row,\n                action: 'edit',\n            }\n        });\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.set();\n            }\n        });\n    }\n\n    delete(row): void {\n        const dialogRef = this.dialog.open(DeleteComponent, {});\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.service.deleteTopic(row.id).subscribe(\n                    res => this.success(row.id),\n                    (err: HttpErrorResponse)=>this.error(err)\n                );\n                this.set();\n            }\n        });\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {TopicPageComponent} from \"./page/topic.page.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'page',\r\n        component: TopicPageComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TopicRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {TopicService} from \"./topic.service\";\r\nimport {TopicRoutingModule} from \"./topic-routing.module\";\r\nimport {TopicPageComponent} from \"./page/topic.page.component\";\r\nimport {TopicFormComponent} from \"./form/topic.form.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TopicPageComponent,\r\n        TopicFormComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        NgxDatatableModule,\r\n        MatAutocompleteModule,\r\n        TopicRoutingModule,\r\n    ],\r\n    providers: [TopicService]\r\n})\r\n\r\nexport class TopicModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {UnsubscribeOnDestroyAdapter} from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Topic} from \"../../core/models/training/topic\";\r\n\r\n@Injectable()\r\nexport class TopicService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/topic`;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getAllTopics(){\r\n        return this.http.get<Topic[]>(this.api);\r\n    }\r\n\r\n    getTopics(criteria:string){\r\n        return this.http.get<Topic[]>(`${this.api}/${criteria}`);\r\n    }\r\n\r\n    deleteTopic(id:number){\r\n        return this.http.delete(`${this.api}/${id}`);\r\n    }\r\n\r\n    addTopic(topic: Topic){\r\n        return this.http.post(this.api, topic);\r\n    }\r\n}\r\n","export class Topic {\n    id: number;\n    title: string;\n    theme?: Topic;\n\n\n    constructor(topic) {\n        {\n            this.id = topic.id;\n            this.title = topic.title;\n            this.theme = topic.parent || null;\n        }\n    }\n}\n"]}