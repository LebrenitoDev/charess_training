{"version":3,"sources":["webpack:///src/app/configuration/institution/form/institution.form.component.html","webpack:///src/app/configuration/institution/form/institution.form.component.ts","webpack:///src/app/configuration/institution/institution-routing.module.ts","webpack:///src/app/configuration/institution/institution.module.ts","webpack:///src/app/configuration/institution/institution.service.ts","webpack:///src/app/configuration/institution/page/institution.page.component.html","webpack:///src/app/configuration/institution/page/institution.page.component.ts","webpack:///src/app/core/models/security/institution.ts"],"names":["InstitutionFormComponent","fb","router","service","snack","parent","FormControl","locationAddress","placeArray","locationArray","isIdentifierDuplicated","isEmailDuplicated","st","getCurrentNavigation","extras","state","title","pl","place","Institution","managers","array","group","Person","map","m","setValue","fg","places","valueChanges","pipe","startWith","value","trim","length","getPlaces","toLowerCase","name","subscribe","res","locations","getLocations","fullname","ob","color","text","open","duration","verticalPosition","horizontalPosition","panelClass","toast","back","err","console","error","toString","getRawValue","save","success","navigate","get","arr","index","ident","identifier","e","i","msg","undefined","getPerson","pull","controls","unshift","mail","email","field","chkIdent","chkEmail","removeAt","submit","routes","path","component","InstitutionPageComponent","InstitutionRoutingModule","RouterModule","InstitutionModule","InstitutionService","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MaterialFileInputModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","NgxDatatableModule","NgxMaskModule","MatAutocompleteModule","http","api","environment","criteria","post","id","key","UnsubscribeOnDestroyAdapter","dialog","rows","data","filteredData","columns","set","getInstitutions","event","val","target","cols","keys","Object","filter","item","indexOf","table","offset","row","dialogRef","DeleteComponent","subs","sink","afterClosed","result","deleteInstitution","navigateByUrl","skipLocationChange","then","DatatableComponent","filterDatatable","add","institution","textAddress"],"mappings":"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","file":"src_app_configuration_institution_institution_module_ts-es5.js","sourcesContent":["<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{title | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div>\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Name' | translate}}</mat-label>\n                                        <input matInput formControlName=\"name\" required>\n                                        <mat-error *ngIf=\"fg.get('name').hasError('')\">{{'This field is required' | translate}}</mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Parent' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"parent\" [matAutocomplete]=\"autoParent\">\n                                        <mat-autocomplete autoActiveFirstOption #autoParent=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let p of places | async\" [value]=\"p\">{{p.name}}</mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Text Address' | translate}}</mat-label>\n                                        <input matInput formControlName=\"textAddress\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-6\">\n                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                        <mat-label>{{'Location Address' | translate}}</mat-label>\n                                        <input type=\"text\" matInput [formControl]=\"locationAddress\" [matAutocomplete]=\"autoLoation\">\n                                        <mat-autocomplete autoActiveFirstOption #autoLoation=\"matAutocomplete\" [displayWith]=\"display\">\n                                            <mat-option *ngFor=\"let l of locations | async\" [value]=\"l\">{{l.fullname}}</mat-option>\n                                        </mat-autocomplete>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <fieldset>\n                                <div class=\"row\">\n                                    <legend>{{\"Manager\" | translate}}</legend>\n                                    <ng-container formArrayName=\"managers\" *ngFor=\"let manager of managers.controls; index as i\">\n                                        <ng-container [formGroupName]=\"i\">\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>\n                                                        {{\"Identifier\" | translate}}\n                                                        <span *ngIf=\"isIdentifierDuplicated[i]\" class=\"error\">{{msg | translate}}</span>\n                                                    </mat-label>\n                                                    <input matInput mask=\"000-000-000-0\" formControlName=\"identifier\" required (blur)=\"check(i, 'identifier')\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"Email\"| translate}}<span *ngIf=\"isEmailDuplicated[i]\" class=\"error\">{{msg | translate}}</span></mat-label>\n                                                    <input matInput formControlName=\"email\" [showMaskTyped]=\"true\" required (blur)=\"check(i, 'email')\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"FirstName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"LastName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"managers['controls'][i].status == 'VALID' && i===0 && !msg\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\">\n                                                        <mat-icon class=\"col-white\">add</mat-icon>\n                                                    </button>\n\n                                                </div>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"managers['controls'].length > 1 && (i>0 || managers['controls'][i].status != 'VALID')\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"pull(i)\">\n                                                        <mat-icon class=\"col-white\">delete </mat-icon>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </fieldset>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid || msg\">{{\"Save\" | translate}} {{msg}}</button>\n                                            <button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import {Component, OnInit} from \"@angular/core\";\nimport {\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup\n} from \"@angular/forms\";\nimport {Observable, map} from \"rxjs\";\nimport {InstitutionService} from \"../institution.service\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {Person} from \"../../../core/models/security/person\";\nimport {Institution} from \"../../../core/models/security/institution\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './institution.form.component.html'\n})\n\nexport class InstitutionFormComponent implements OnInit {\n\n    fg: FormGroup;\n    title: string;\n    place: Institution;\n    parent = new FormControl();\n    locationAddress = new FormControl();\n    places: Observable<Institution[]>;\n    locations: Observable<Location[]>;\n    placeArray = [];\n    locationArray = [];\n    isIdentifierDuplicated = [];\n    isEmailDuplicated = [];\n    msg: string;\n\n    constructor(private fb: FormBuilder, private router: Router, private service: InstitutionService, private snack: MatSnackBar){\n        const st = this.router.getCurrentNavigation().extras.state;\n        this.title = st?'Edit the current institution':'Create new institution';\n        let pl = (st && st.place)?st.place: new Institution({});\n        pl.managers = this.fb.array(pl.managers==null?[this.fb.group(new Person({}))]: pl.managers.map(m=>this.fb.group(m)));\n        if(pl && pl.parent)\n            this.parent.setValue(pl.parent);\n        if(pl && pl.locationAddress)\n            this.locationAddress.setValue(pl.locationAddress)\n        this.fg = this.fb.group(pl);\n    }\n\n    ngOnInit(){\n        this.places = this.parent.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getPlaces(typeof value==='string'?value.toLowerCase():value.name).subscribe((res)=>{\n                    this.placeArray = res;\n                });\n                return this.placeArray;\n            })\n        );\n        this.locations = this.locationAddress.valueChanges.pipe(startWith(''),\n            map(value => {\n                if(typeof value==='string' && value.trim().length < 1)\n                    return [];\n                this.service.getLocations(typeof value==='string'?value.toLowerCase(): value.fullname).subscribe((res)=>{\n                    this.locationArray = res;\n                });\n                return this.locationArray;\n            })\n        );\n    }\n\n    display(ob): string {\n        if(!ob)\n            return;\n        return ob.fullname?ob.fullname:ob.name;\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    private success(){\n        this.toast('bg-green','The usr has been successfully created');\n        this.back();\n    }\n\n    private error(err: HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    submit(ob: any): void {\n        ob.parent = this.parent.value?.toString().trim().length <1?ob.parent:this.parent.value;\n        ob.locationAddress = this.locationAddress.value;\n        ob.managers = this.managers.getRawValue();\n        this.service.save(ob).subscribe(\n            (res) => this.success(),\n            (err) => this.error(err)\n        );\n    }\n\n    back(){\n        this.router.navigate(['configuration/institution/page']);\n    }\n\n    get managers(): FormArray {\n        return this.fg.get('managers') as FormArray;\n    }\n\n    private chkIdent(arr, index){\n        const ident = arr[index].identifier;\n        this.isIdentifierDuplicated = arr.map(e => false);\n        for(let i=0; i< arr.length; i++){\n            if(i != index && arr[i].identifier===ident){\n                this.isIdentifierDuplicated[index] = true;\n                this.msg = ' (existed in present pool)';\n                return;\n            } else {\n                this.msg = undefined;\n            }\n        }\n        this.service.getPerson(ident).subscribe(res => {\n            if(res != null){\n                this.pull(index);\n                this.managers.controls.unshift(this.fb.group(res));\n            }\n        });\n\n    }\n\n    private chkEmail(arr, index){\n        const mail = arr[index].email;\n        this.isEmailDuplicated = arr.map(e => false);\n        for(let i=0; i< arr.length; i++){\n            if(i != index && arr[i].email===mail){\n                this.isEmailDuplicated[index] = true;\n                this.msg = ' (existed in present pool)';\n                return;\n            } else {\n                this.msg = undefined;\n            }\n        }\n        this.service.getPerson(mail).subscribe(res => {\n            if(res != null){\n                this.pull(index);\n                this.managers.controls.unshift(this.fb.group(res));\n            }\n        });\n    }\n\n    check(index, field){\n        let arr = this.managers.getRawValue();\n        return field==='identifier'?this.chkIdent(arr, index):this.chkEmail(arr, index);\n\n    }\n\n    push(){\n        this.managers.controls.unshift(this.fb.group(new Person({})));\n    }\n\n    pull(index: number): void {\n        if (this.managers.length > 1)\n            this.managers.removeAt(index);\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {InstitutionPageComponent} from \"./page/institution.page.component\";\r\nimport {InstitutionFormComponent} from \"./form/institution.form.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'page',\r\n        component: InstitutionPageComponent,\r\n    },\r\n    {\r\n        path: 'form',\r\n        component: InstitutionFormComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InstitutionRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {InstitutionRoutingModule} from \"./institution-routing.module\";\r\nimport {InstitutionService} from \"./institution.service\";\r\nimport {InstitutionPageComponent} from \"./page/institution.page.component\";\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {InstitutionFormComponent} from \"./form/institution.form.component\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {NgxMaskModule} from \"ngx-mask\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        InstitutionPageComponent,\r\n        InstitutionFormComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        InstitutionRoutingModule,\r\n        NgxDatatableModule,\r\n        NgxMaskModule,\r\n        MatAutocompleteModule\r\n    ],\r\n    providers: [InstitutionService]\r\n})\r\n\r\nexport class InstitutionModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Location} from \"../../core/models/security/location\";\r\nimport {Person} from \"../../core/models/security/person\";\r\nimport {Institution} from \"../../core/models/security/institution\";\r\n\r\n\r\n@Injectable()\r\nexport class InstitutionService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/place`;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getInstitutions(){\r\n        return this.http.get<Institution[]>(this.api);\r\n    }\r\n\r\n    getPlaces(criteria: string){\r\n        return this.http.get<Institution[]>(`${this.api}/search/${criteria}`);\r\n    }\r\n\r\n    save(place){\r\n        return this.http.post(this.api, place);\r\n    }\r\n\r\n    getLocations(criteria: string){\r\n        return this.http.get<Location[]>(`${environment.api}/location/search/${criteria}`);\r\n    }\r\n\r\n    deleteInstitution(id: number){\r\n        return this.http.delete(`${environment.api}/place/${id}`);\r\n    }\r\n\r\n    getPerson(key){\r\n        return this.http.get<Person>(`${environment.api}/user/person?key=${key}`);\r\n    }\r\n\r\n\r\n}\r\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <div class=\"ngxTableHeader\">\n                                    <ul class=\"header-buttons-left ms-0 mb-0\">\n                                        <li class=\"dropdown\"><h2><strong>{{'training.configuration.list.facility' | translate}}</strong></h2></li>\n                                        <li class=\"dropdown m-l-20\">\n                                            <label><i class=\"material-icons search-icon\">search</i></label>\n                                            <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\" (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                        </li>\n                                    </ul>\n                                    <ul class=\"header-buttons\">\n                                        <li>\n                                            <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                            </button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <ngx-datatable #table class=\"material\" [rows]=\"data\" [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'60'\" [limit]=\"10\">\n\n                                    <ngx-datatable-column name=\"{{'Name' | translate}}\" sortable=\"true\" prop=\"name\" [width]=\"170\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-t-emplate>{{value}}</ng-template>\n                                    </ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Address' | translate}}\" sortable=\"true\" prop=\"address\" [width]=\"120\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value}}</ng-template>\n                                    </ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Manager' | translate}}\" sortable=\"true\" prop=\"managers\" [width]=\"100\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>\n                                            {{value.length > 0?(value[0].fullname+' ('+value.length+')'):''}}\n                                        </ng-template>\n                                    </ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Parent' | translate}}\" sortable=\"true\" prop=\"parent\" [width]=\"170\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value?.name}}</ng-template>\n                                    </ngx-datatable-column>\n\n                                    <ngx-datatable-column name=\"Actions\" sortable=\"false\" [maxWidth]=\"105\">\n                                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                                            <span>\n                                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"edit(row)\">\n                                                    <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                                </button>\n                                                <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"delete(row)\">\n                                                    <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                                </button>\n                                            </span>\n                                        </ng-template>\n                                    </ngx-datatable-column>\n\n                                </ngx-datatable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {InstitutionService} from \"../institution.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {DeleteComponent} from \"../../delete/delete.confirm\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {Institution} from \"../../../core/models/security/institution\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './institution.page.component.html'\n})\n\nexport class InstitutionPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n    rows = [];\n    data = [];\n    institution: Institution | null;\n    filteredData = [];\n    columns = [\n        { name: 'name' },\n        { name: 'address' }\n    ];\n\n    constructor(private service: InstitutionService, private snack: MatSnackBar, public dialog: MatDialog, private router: Router) {\n        super();\n    }\n\n    ngOnInit() {\n        this.set();\n    }\n\n    set(){\n        this.service.getInstitutions().subscribe(res => {\n            this.data = res;\n            this.filteredData = res;\n        });\n    }\n\n    filterDatatable(event){\n        const val = event.target.value.toLowerCase();\n        const cols = this.columns;\n        const keys = Object.keys(this.filteredData[0]);\n        this.data = this.filteredData.filter(function (item) {\n            for (let i = 0; i < cols.length; i++) {\n                if((item[cols[i].name] && item[cols[i].name].toString().toLowerCase().indexOf(val) !==-1) || !val)\n                    return true;\n            }\n        });\n        this.table.offset = 0;\n    }\n\n    delete(row): void {\n        const dialogRef = this.dialog.open(DeleteComponent, {});\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.service.deleteInstitution(row.id).subscribe(\n                    (res) => this.success(),\n                    (err: HttpErrorResponse)=>this.error(err)\n                );\n                this.set();\n            }\n        });\n\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    success(){\n        this.router.navigateByUrl('/RefreshComponent', { skipLocationChange: true }).then(() => {\n            this.router.navigate(['/configuration/institution/page']);\n        });\n        this.toast('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.toast('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    add(){\n        this.router.navigate(['configuration/institution/form']);\n    }\n\n    edit(row){\n        this.router.navigate(['configuration/institution/form'],{state:{place: row}});\n    }\n}\n","export class Institution {\n    id: number;\n    name: string;\n    managers?: [{Person}];\n    locationAddress?: Location;\n    textAddress?: string;\n    address?: string;\n    parent?: Institution;\n\n    constructor(institution){\n        {\n            this.id = institution.id;\n            this.name = institution.name;\n            this.parent = institution.parent || null;\n            this.textAddress = institution.textAddress || '';\n            this.locationAddress = institution.locationAddress || null;\n            this.managers = institution.managers || null;\n        }\n    }\n}"]}