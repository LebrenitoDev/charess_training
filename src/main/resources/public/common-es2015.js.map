{"version":3,"sources":["./src/app/configuration/account/account.service.ts","./src/app/core/models/security/person.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AACuC;AAEkD;AAC3B;;;AAMvD,MAAM,cAAe,SAAQ,mGAA2B;IAQ3D,YAAoB,IAAgB;QAChC,KAAK,EAAE,CAAC;QADQ,SAAI,GAAJ,IAAI,CAAY;QANpC,QAAG,GAAG,GAAG,sEAAe,OAAO,CAAC;QAEhC,iBAAY,GAAG,IAAI,CAAC;QACpB,eAAU,GAA4B,IAAI,iDAAe,CAAS,EAAE,CAAC,CAAC;IAKtE,CAAC;IAED,eAAe;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,GAAG,sEAAe,QAAQ,CAAC,CAAC;IACpE,CAAC;IAED,WAAW;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;IAC3D,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,GAAG;QACb,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;IAC1B,CAAC;IAGD,aAAa;QACT,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CACtD,CAAC,IAAI,EAAE,EAAE;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,EACD,CAAC,KAAwB,EAAE,EAAE;YACzB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC,CACJ,CAAC;IACN,CAAC;IAED,MAAM,CAAC,GAAS;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,MAAM,CAAC,KAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC;IACvD,CAAC;;4EApDQ,cAAc;+GAAd,cAAc,WAAd,cAAc;;;;;;;;;;;;;;;;ACRpB,MAAM,MAAM;IAcf,YAAY,MAAM;QACd;YACI,IAAI,CAAC,EAAE,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,EAAE,CAAC;YACrB,IAAI,CAAC,UAAU,GAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,UAAU,CAAC;YACtC,IAAI,CAAC,SAAS,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAC;YAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,CAAC;SAChC;IACL,CAAC;CACJ","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {environment} from \"../../../environments/environment\";\nimport {User} from \"../../core/models/security/user\";\nimport {Profile} from \"../../core/models/security/profile\";\nimport {Institution} from \"../institution/institution.model\";\n\n@Injectable()\nexport class AccountService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}/user`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n    dialogData: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    getInstitutions(){\n        return this.http.get<Institution[]>(`${environment.api}/place`);\n    }\n\n    getProfiles(){\n        return this.http.get<Profile[]>(`${this.api}/profile`);\n    }\n\n    get data(): User[] {\n        return this.dataChange.value;\n    }\n\n    setDialogData(usr) {\n        this.dialogData = usr;\n    }\n\n\n    getDialogData() {\n        return this.dialogData;\n    }\n\n    getUsers(): void {\n        this.subs.sink = this.http.get<User[]>(this.api).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    create(usr: User){\n        return this.http.post(this.api, usr);\n    }\n\n    update(users: User[]){\n        return this.http.post(`${this.api}/update`, users);\n    }\n\n\n    \n    // addTeachers(teachers: User): void {\n    //     alert(1);\n    //     this.dialogData = teachers;\n    //\n    //     /*  this.httpClient.post(this.API_URL, teachers).subscribe(data => {\n    //       this.dialogData = teachers;\n    //       },\n    //       (err: HttpErrorResponse) => {\n    //      // error code here\n    //     });*/\n    // }\n    // updateTeachers(teachers: User): void {\n    //     this.dialogData = teachers;\n    //\n    //     /* this.httpClient.put(this.API_URL + teachers.id, teachers).subscribe(data => {\n    //       this.dialogData = teachers;\n    //     },\n    //     (err: HttpErrorResponse) => {\n    //       // error code here\n    //     }\n    //   );*/\n    // }\n    // deleteTeachers(id: number): void {\n    //     console.log(id);\n    //\n    //     /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\n    //       console.log(id);\n    //       },\n    //       (err: HttpErrorResponse) => {\n    //          // error code here\n    //       }\n    //     );*/\n    // }\n}\n","import * as moment from 'moment';\n\nexport class Person {\n    id: number;\n    identifier: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    phone: string;\n    email: string;\n    birthDate: moment.Moment;\n    locationAddress: Location;\n    textAddress: string;\n    fullname: string;\n    alias: string;\n\n    constructor(person) {\n        {\n            this.id = person?.id;\n            this.identifier =  person?.identifier;\n            this.firstName = person?.firstName;\n            this.lastName = person?.lastName;\n            this.email = person?.email;\n            this.gender = person?.gender;\n        }\n    }\n}"],"sourceRoot":"webpack:///"}