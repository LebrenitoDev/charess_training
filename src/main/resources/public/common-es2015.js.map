{"version":3,"sources":["./src/app/configuration/account/account.service.ts","./src/app/configuration/institution/institution.service.ts","./src/app/core/models/security/person.ts","./src/app/core/models/training/training.ts","./src/app/core/service/training.service.ts","./src/app/organisation/training/training.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {environment} from \"../../../environments/environment\";\nimport {User} from \"../../core/models/security/user\";\nimport {Profile} from \"../../core/models/security/profile\";\nimport {Institution} from \"../../core/models/security/institution\";\n\n@Injectable()\nexport class AccountService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}/user`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\n    dialogData: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    getInstitutions(){\n        return this.http.get<Institution[]>(`${environment.api}/place`);\n    }\n\n    getProfiles(){\n        return this.http.get<Profile[]>(`${this.api}/profile`);\n    }\n\n    get data(): User[] {\n        return this.dataChange.value;\n    }\n\n    setDialogData(usr) {\n        this.dialogData = usr;\n    }\n\n\n    getDialogData() {\n        return this.dialogData;\n    }\n\n    getUsers(): void {\n        this.subs.sink = this.http.get<User[]>(this.api).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    create(usr: User){\n        return this.http.post(this.api, usr);\n    }\n\n    update(users: User[]){\n        return this.http.post(`${this.api}/update`, users);\n    }\n\n    forgotPassword(email: String){\n        return this.http.post(`${this.api}/password/forgot`, email);\n    }\n\n    resetPassword(id: number, password: string){\n        return this.http.post(`${this.api}/password/reset`, {id, password});\n    }\n}\n","import {Institution} from \"../../core/models/security/institution\";\r\nimport {Injectable} from \"@angular/core\";\r\nimport {UnsubscribeOnDestroyAdapter} from \"../../shared/UnsubscribeOnDestroyAdapter\";\r\nimport {environment} from \"../../../environments/environment\";\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport {Person} from \"../../core/models/security/person\";\r\nimport {Location} from \"../../core/models/security/location\";\r\n\r\n@Injectable()\r\nexport class InstitutionService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/place`;\r\n\r\n    isTblLoading = true;\r\n    dataChange: BehaviorSubject<Institution[]> = new BehaviorSubject<Institution[]>([]);\r\n    dialogData: any;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    get data(): Institution[] {\r\n        return this.dataChange.value;\r\n    }\r\n\r\n    setDialogData(institution) {\r\n        this.dialogData = institution;\r\n    }\r\n\r\n    getDialogData() {\r\n        return this.dialogData;\r\n    }\r\n\r\n    getInstitutions(): void {\r\n        this.subs.sink = this.http.get<Institution[]>(this.api).subscribe(\r\n            (data) => {\r\n                this.isTblLoading = false;\r\n                this.dataChange.next(data);\r\n            },\r\n            (error: HttpErrorResponse) => {\r\n                this.isTblLoading = false;\r\n                console.log(error.name + ' ' + error.message);\r\n            }\r\n        );\r\n    }\r\n\r\n    getPlaces(criteria:string){\r\n        return this.http.get<Institution[]>(`${environment.api}/place/${criteria}`);\r\n    }\r\n\r\n    save(place){\r\n        return this.http.post(this.api, place);\r\n    }\r\n\r\n    getLocations(criteria: string){\r\n        return this.http.get<Location[]>(`${environment.api}/location/search/${criteria}`);\r\n    }\r\n\r\n    deleteInstitution(id: number){\r\n        return this.http.delete(`${environment.api}/place/${id}`);\r\n    }\r\n\r\n    getPerson(key){\r\n        return this.http.get<Person>(`${environment.api}/user/person?key=${key}`);\r\n    }\r\n\r\n    getPersonByEmail(email){\r\n        return this.http.get<Person>(`${environment.api}/user/email?email=${email}`);\r\n    }\r\n}\r\n","import * as moment from 'moment';\n\nexport class Person {\n    id: number;\n    identifier: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    phone: string;\n    email: string;\n    birthDate: Date;\n    locationAddress: Location;\n    textAddress: string;\n    fullname: string;\n    alias: string;\n\n    constructor(person) {\n        {\n            this.id = person?.id;\n\n            this.identifier =  person?.identifier;\n            this.firstName = person?.firstName;\n            this.lastName = person?.lastName;\n            this.email = person?.email;\n            this.phone = person?.phone;\n            this.gender = person?.gender;\n        }\n    }\n}","import {Topic} from \"./topic\";\nimport {Institution} from \"../security/institution\";\n\nexport class Training {\n\n    id: number;\n    topic: Topic;\n    startDate: Date;\n    endDate: Date;\n    location: Institution;\n    capacity: number;\n    categories: [{Category}];\n    partners?: [{PartnerCategory}];\n    cyclic?: string;\n    mode?: string;\n    testType?: string;\n    requester?: Institution;\n    requested: Date;\n    sponsor?: Institution;\n    facilitator?: Institution;\n    status?: string;\n    statusDate: Date;\n\n    constructor(t) {\n        {\n            this.id = t.id;\n            this.topic = t.topic;\n            this.startDate = t.startDate;\n            this.endDate = t.endDate;\n            this.location = t.location;\n            this.capacity = t.capacity;\n            this.categories = t.categories || null;\n            this.partners = t.partners || null;\n            this.cyclic = t.cyclic;\n            this.mode = t.mode;\n            this.testType = t.testType;\n            this.requester = t.requester;\n            this.requested = t.requested;\n            this.sponsor = t.sponsor;\n            this.facilitator = t.facilitator;\n            this.status = t.status;\n            this.statusDate = t.statusDate || null;\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {Training} from \"../models/training/training\";\nimport {environment} from \"../../../environments/environment\";\nimport {Topic} from \"../models/training/topic\";\nimport {Category} from \"../models/security/category\";\nimport {Person} from \"../models/security/person\";\nimport {TrainingLog} from \"../models/training/training.log\";\nimport {Calendar} from \"../models/training/calendar\";\nimport { EventInput } from \"@fullcalendar/angular\";\n\n@Injectable()\nexport class TrainingService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}/training`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<Training[]> = new BehaviorSubject<Training[]>([]);\n    dialogData: any;\n    inputs:EventInput[] = [];\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    topics(criteria:string){\n        return this.http.get<Topic[]>(`${environment.api}/topic/${criteria}`);\n    }\n\n    categories(){\n        return this.http.get<Category[]>(`${environment.api}/category`);\n    }\n\n    get data(): Training[] {\n        return this.dataChange.value;\n    }\n\n    getTrainings(): void {\n        this.subs.sink = this.http.get<Training[]>(this.api).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    getEvents(){\n        return this.http.get<Training[]>(this.api);\n    }\n\n\n    // getEvents(): EventInput[] {\n    //     this.http.get<Training[]>(this.api).subscribe(\n    //         (res) => {\n    //             console.log('----------------', res)\n    //             for (let i = 0; i < res.length; i++) {\n    //                 this.inputs.push({id: res[i].id.toString(), title: res[i].topic.title, start: new Date(res[i].startDate)});\n    //             }\n    //         });\n    //     return this.inputs;\n    // }\n\n    save(training){\n        return this.http.post(`${this.api}/request`, training);\n    }\n\n    log(training){\n        console.log(training, '=======================');\n        return this.http.get<TrainingLog[]>(`${this.api}/log?training=${training}`);\n    }\n\n}","import {Training} from \"../../core/models/training/training\";\nimport {Injectable} from \"@angular/core\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\nimport {environment} from \"../../../environments/environment\";\nimport {BehaviorSubject} from 'rxjs';\nimport {Topic} from \"../../core/models/training/topic\";\nimport {Institution} from \"../../core/models/security/institution\";\nimport {Category} from \"../../core/models/security/category\";\nimport {TrainingPartner} from \"../../core/models/training/training.partner\";\n\n@Injectable()\nexport class TrainingService extends UnsubscribeOnDestroyAdapter {\n\n    api = `${environment.api}`;\n    apiTraining = `${this.api}/training`;\n\n    isTblLoading = true;\n    dataChange: BehaviorSubject<Training[]> = new BehaviorSubject<Training[]>([]);\n    dataPartnerChange: BehaviorSubject<TrainingPartner[]> = new BehaviorSubject<TrainingPartner[]>([]);\n    dialogData: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    get data(): Training[] {\n        return this.dataChange.value;\n    }\n\n    get partnerData(): TrainingPartner[] {\n        return this.dataPartnerChange.value;\n    }\n\n    setDialogData(training) {\n        this.dialogData = training;\n    }\n\n    getDialogData() {\n        return this.dialogData;\n    }\n\n    getTrainings(): void {\n        this.subs.sink = this.http.get<Training[]>(this.apiTraining).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    getTopics(criteria:string){\n        return this.http.get<Topic[]>(`${this.api}/topic/${criteria}`);\n    }\n\n    getLocations(criteria:string){\n        return this.http.get<Institution[]>(`${this.api}/place/${criteria}`);\n    }\n\n    getCategories(criteria:string){\n        return this.http.get<Category[]>(`${this.api}/category`);\n    }\n\n    broadcast(training){\n        return this.http.post(`${this.api}/training/broadcast`, training);\n    }\n\n    getTrainingsForAPartner(partnerId: number){\n        const url = partnerId?`${this.apiTraining}/partner/${partnerId}`:`${this.apiTraining}`;\n        this.subs.sink = this.http.get<TrainingPartner[]>(url).subscribe(\n            (data) => {\n                this.isTblLoading = false;\n                this.dataPartnerChange.next(data);\n            },\n            (error: HttpErrorResponse) => {\n                this.isTblLoading = false;\n                console.log(error.name + ' ' + error.message);\n            }\n        );\n    }\n\n    participate(partnerTrainingParticipants){\n        return this.http.post(`${this.api}/participant`, partnerTrainingParticipants);\n    }\n\n}"],"sourceRoot":"webpack:///"}