{"version":3,"sources":["./src/app/configuration/topic/form/topic.form.component.ts","./src/app/configuration/topic/form/topic.form.component.html","./src/app/configuration/topic/page/topic.page.component.ts","./src/app/configuration/topic/page/topic.page.component.html","./src/app/configuration/topic/topic-routing.module.ts","./src/app/configuration/topic/topic.model.ts","./src/app/configuration/topic/topic.module.ts","./src/app/configuration/topic/topic.service.ts"],"names":[],"mappings":"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","file":"src_app_configuration_topic_topic_module_ts-es2015.js","sourcesContent":["import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {\n    FormControl,\n    FormGroup,\n    FormBuilder,\n} from '@angular/forms';\n\nimport {startWith} from 'rxjs/operators';\nimport { Observable, map } from 'rxjs';\nimport {Topic} from \"../topic.model\";\nimport {TopicService} from \"../topic.service\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './topic.form.component.html'\n})\n\nexport class TopicFormComponent implements OnInit {\n\n    action: string;\n    title: string;\n    fg: FormGroup;\n    topic: Topic;\n    themeControl = new FormControl();\n    themes=[];\n    filteredThemes: Observable<Topic[]>;\n\n    constructor(public fm: MatDialogRef<TopicFormComponent>, @Inject(MAT_DIALOG_DATA) public data: any,\n                public service: TopicService, private fb: FormBuilder, private _snackBar: MatSnackBar){\n        this.action = data.action;\n        if (this.action === 'edit') {\n            this.topic = data.topic;\n            this.title = 'Edit the current topic';\n            this.themeControl.setValue(data.topic.theme);\n        } else{\n            this.title = 'New topic';\n            this.topic = new Topic({});\n        }\n        this.fg = this.createContactForm();\n    }\n\n    ngOnInit() {\n        this.filteredThemes = this.themeControl.valueChanges.pipe(startWith(''),\n            map(value => {\n                this.service.getTopics(typeof value === 'string'?value.toLowerCase():value.title).subscribe((res)=>{\n                    this.themes = res;\n                });\n                return this.themes;\n            })\n        );\n    }\n\n    display(topic):string {\n        if(topic)\n            return topic.title;\n    }\n\n    createContactForm(): FormGroup {\n        return this.fb.group(this.topic);\n    }\n\n    submit() {\n    }\n\n    cancel(): void {\n        this.fm.close();\n    }\n\n    public save(): void {\n        let obj = this.fg.getRawValue();\n        obj.theme = this.themeControl.value;\n        this.service.addTopic(obj).subscribe(\n            data => this.success(),\n            (err: HttpErrorResponse)=>this.error(err)\n        );\n    }\n\n    private success(){\n        this.showNotification('bg-green','The topic has been successfully created');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.showNotification('bg-red','Something went wrong the topic has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    private showNotification(colorName, text) {\n        this._snackBar.open(text, '', {\n            duration: 2000,\n            verticalPosition: 'top',\n            horizontalPosition: 'right',\n            panelClass: colorName,\n        });\n    }\n}\n","<div class=\"addContainer\">\n    <div class=\"modalHeader\">\n        <div class=\"editRowModal\">\n            <div class=\"modalHeader clearfix\">\n                <div class=\"modal-about\">\n                    <div><h4><strong>{{title | translate}}</strong></h4></div>\n                </div>\n            </div>\n        </div>\n        <button mat-icon-button (click)=\"fm.close()\" aria-label=\"Close dialog\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </div>\n    <div mat-dialog-content>\n        <form class=\"register-form m-4\" [formGroup]=\"fg\" (ngSubmit)=\"submit\">\n            <div class=\"row\">\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Title' | translate}}</mat-label>\n                        <input matInput formControlName=\"title\" required>\n                        <mat-error *ngIf=\"fg.get('title').hasError('required')\">{{'This field is required' | translate}}</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div>\n                <div>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>{{'Thematic' | translate}}</mat-label>\n                        <input type=\"text\" placeholder=\"\"  matInput [formControl]=\"themeControl\" [matAutocomplete]=\"auto\">\n                        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" [displayWith]=\"display\">\n                            <mat-option *ngFor=\"let topic of filteredThemes | async\" [value]=\"topic\">\n                                {{topic.title}}\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <div class=\"example-button-row\">\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!fg.valid\" [mat-dialog-close]=\"1\" (click)=\"save()\">{{'Save' | translate}}</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"cancel()\" tabindex=\"-1\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TopicService} from \"../topic.service\";\nimport {Topic} from \"../topic.model\";\nimport {TopicFormComponent} from \"../form/topic.form.component\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {DeleteComponent} from \"../../delete/delete.confirm\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './topic.page.component.html'\n})\n\nexport class TopicPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n    @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n    rows = [];\n    data = [];\n    topic: Topic | null;\n\n    filteredData = [];\n\n    columns = [\n        { title: 'title' },\n        { theme: 'theme' }\n    ];\n\n    dim = {\n        width: '1000px',\n        height: '380px'\n    };\n\n    constructor(private service: TopicService, private _snackBar: MatSnackBar, public dialog: MatDialog) {\n        super();\n    }\n\n    ngOnInit() {\n        this.set();\n    }\n\n    set(){\n        this.service.getAllTopics().subscribe(res => {\n            this.data = res;\n            this.filteredData = res;\n        });\n    }\n\n    filterDatatable(event){\n        const val = event.target.value.toLowerCase();\n        const cols = this.columns;\n        const keys = Object.keys(this.filteredData[0]);\n        this.data = this.filteredData.filter(function (item) {\n            for (let i = 0; i < cols.length; i++) {\n                if((item[cols[i].title] && item[cols[i].title].toString().toLowerCase().indexOf(val) !==-1) || !val)\n                   return true;\n            }\n        });\n        this.table.offset = 0;\n    }\n\n    arrayRemove(array, id) {\n        return array.filter(function (element) {\n            return element.id != id;\n        });\n    }\n\n    showNotification(colorName, text) {\n        this._snackBar.open(text, '', {\n            duration: 2000,\n            verticalPosition: \"top\",\n            horizontalPosition: \"right\",\n            panelClass: colorName,\n        });\n    }\n\n    success(id){\n        this.data = this.arrayRemove(this.data, id);\n        this.showNotification('bg-green','That record has been successfully deleted');\n    }\n\n    private error(err:HttpErrorResponse){\n        this.showNotification('bg-red','That record is in use somewhere, you have to delete its dependance first!');\n        console.error(err);\n    }\n\n    add(){\n        const dialogRef = this.dialog.open(TopicFormComponent, {\n            ...this.dim,\n            data: {\n                topic: this.topic,\n                action: 'add',\n            }\n        });\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.set();\n            }\n        });\n    }\n\n    edit(row) {\n        const dialogRef = this.dialog.open(TopicFormComponent, {\n            ...this.dim,\n            data: {\n                topic: row,\n                action: 'edit',\n            }\n        });\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.set();\n            }\n        });\n    }\n\n    delete(row): void {\n        const dialogRef = this.dialog.open(DeleteComponent, {});\n        this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\n            if (result === 1) {\n                this.service.deleteTopic(row.id).subscribe(\n                    res => this.success(row.id),\n                    (err: HttpErrorResponse)=>this.error(err)\n                );\n                this.set();\n            }\n        });\n    }\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row clearfix\">\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <div class=\"ngxTableHeader\">\n                                    <ul class=\"header-buttons-left ms-0 mb-0\">\n                                        <li class=\"dropdown\"><h2><strong>{{'training.configuration.list.topic' | translate}}</strong></h2></li>\n                                        <li class=\"dropdown m-l-20\">\n                                            <label><i class=\"material-icons search-icon\">search</i></label>\n                                            <input placeholder=\"{{'Search' | translate}}\" type=\"text\" class=\"browser-default search-field\" (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                        </li>\n                                    </ul>\n                                    <ul class=\"header-buttons\">\n                                        <li>\n                                            <button mat-mini-fab color=\"primary\" (click)=\"add()\">\n                                                <mat-icon class=\"col-white\">add</mat-icon>\n                                            </button>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <ngx-datatable #table class=\"material\" [rows]=\"data\" [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"'auto'\" [limit]=\"10\">\n                                    <ngx-datatable-column name=\"{{'Title' | translate}}\" sortable=\"true\" prop=\"title\" [width]=\"280\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value}}</ng-template></ngx-datatable-column>\n                                    <ngx-datatable-column name=\"{{'Theme' | translate}}\" sortable=\"true\" prop=\"theme\" [width]=\"280\">\n                                        <ng-template let-row=\"data\" let-value=\"value\" let-i=\"index\" ngx-datatable-cell-template>{{value?.title}}</ng-template></ngx-datatable-column>\n\n                                    <ngx-datatable-column name=\"Actions\" sortable=\"false\" [maxWidth]=\"105\">\n                                        <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\" ngx-datatable-cell-template>\n                                         <span>\n                                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"edit(row)\">\n                                                <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\n                                            </button>\n                                            <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"delete(row)\">\n                                                <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\n                                            </button>\n                                        </span>\n                                        </ng-template>\n                                    </ngx-datatable-column>\n                                </ngx-datatable>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {TopicPageComponent} from \"./page/topic.page.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'page',\r\n        component: TopicPageComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TopicRoutingModule {}\r\n","import {Person} from \"../../core/models/security/person\";\n\nexport class Topic {\n    id: number;\n    title: string;\n    theme?: Topic;\n\n\n    constructor(topic) {\n        {\n            this.id = topic.id;\n            this.title = topic.title;\n            this.theme = topic.parent || null;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {TopicService} from \"./topic.service\";\r\nimport {TopicRoutingModule} from \"./topic-routing.module\";\r\nimport {TopicPageComponent} from \"./page/topic.page.component\";\r\nimport {TopicFormComponent} from \"./form/topic.form.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TopicPageComponent,\r\n        TopicFormComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        NgxDatatableModule,\r\n        MatAutocompleteModule,\r\n        TopicRoutingModule,\r\n    ],\r\n    providers: [TopicService]\r\n})\r\n\r\nexport class TopicModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {UnsubscribeOnDestroyAdapter} from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\nimport {environment} from \"../../../environments/environment\";\r\nimport {Topic} from \"./topic.model\";\r\n\r\n@Injectable()\r\nexport class TopicService extends UnsubscribeOnDestroyAdapter {\r\n\r\n    api = `${environment.api}/topic`;\r\n\r\n    constructor(private http: HttpClient) {\r\n        super();\r\n    }\r\n\r\n    getAllTopics(){\r\n        return this.http.get<Topic[]>(this.api);\r\n    }\r\n\r\n    getTopics(criteria:string){\r\n        return this.http.get<Topic[]>(`${this.api}/${criteria}`);\r\n    }\r\n\r\n    deleteTopic(id:number){\r\n        return this.http.delete(`${this.api}/${id}`);\r\n    }\r\n\r\n    addTopic(topic: Topic){\r\n        return this.http.post(this.api, topic);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}