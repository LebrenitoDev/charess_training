{"version":3,"sources":["webpack:///src/app/organisation/demands/demands-routing.module.ts","webpack:///src/app/organisation/demands/demands.module.ts","webpack:///src/app/organisation/demands/page/demands.page.component.html","webpack:///src/app/organisation/demands/page/demands.page.component.ts"],"names":["routes","path","component","DemandsPageComponent","DemandsRoutingModule","RouterModule","DemandsModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MaterialFileInputModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","NgxDatatableModule","MatTooltipModule","MatAutocompleteModule","PerfectScrollbarModule","NgbModule","$event","stopPropagation","selection","http","displayedColumns","SelectionModel","contextMenuPosition","x","y","database","TrainingService","datasource","Source","paginator","sort","subs","sink","fromEvent","filter","nativeElement","subscribe","value","load","o","numSelected","selected","length","numRows","renderedData","isAllSelected","clear","forEach","row","select","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","MatMenuTrigger","service","ms","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","dataChange","sortChange","page","getTrainings","merge","pipe","map","data","slice","t","search","topic","title","toLowerCase","indexOf","sortedData","sortData","startIndex","pageSize","splice","active","direction","a","b","propertyA","propertyB","id","valueA","isNaN","valueB","DataSource"],"mappings":"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","file":"src_app_organisation_demands_demands_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {DemandsPageComponent} from \"./page/demands.page.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DemandsPageComponent,\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\n\r\nexport class DemandsRoutingModule {}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MaterialFileInputModule} from 'ngx-material-file-input';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {TranslateModule} from \"@ngx-translate/core\";\r\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\r\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\r\nimport {DemandsRoutingModule} from \"./demands-routing.module\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {PerfectScrollbarModule} from \"ngx-perfect-scrollbar\";\r\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {DemandsPageComponent} from \"./page/demands.page.component\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DemandsPageComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatSelectModule,\r\n        MatDatepickerModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        MaterialFileInputModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule,\r\n        TranslateModule,\r\n        NgxDatatableModule,\r\n        MatTooltipModule,\r\n        MatAutocompleteModule,\r\n        PerfectScrollbarModule,\r\n        NgbModule,\r\n        DemandsRoutingModule\r\n    ],\r\n    providers: []\r\n})\r\n\r\nexport class DemandsModule {}\r\n","\n<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive\">\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ml-0\">\n                                                <li class=\"dropdown\"><h2><strong>{{'training.partnership.demands' | translate}}</strong></h2></li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label><i class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Search\" size=\"100\" type=\"text\" #filter class=\"browser-default search-field\" aria-label=\"Search box\">\n                                                </li>\n                                            </ul>\n                                        </div>\n                                        <!--<div class=\"col-4\">-->\n                                            <!--<ul class=\"header-buttons\">-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=!selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab (click)=\"update('password', 'password')\" matTooltip=\"Réinitialiser mot de passe\">-->\n                                                            <!--<mat-icon class=\"col-white\">restart_alt</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li ngbDropdown [hidden]=!selection.hasValue()>-->\n                                                    <!--<div class=\"icon-button-demo nav-notification-icons pt-0\" ngbDropdownToggle>-->\n                                                        <!--<button mat-mini-fab color=\"white\" matTooltip=\"Profile d'utilisateur\">-->\n                                                            <!--<mat-icon>format_list_bulleted</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                    <!--<div ngbDropdownMenu class=\"downlist\">-->\n                                                        <!--<ul class=\"menu\">-->\n                                                            <!--<li class=\"body\"><a href=\"#\" *ngFor=\"let p of profiles\" (click)=\"update(p, 'profile')\">{{p.name}}</a></li>-->\n                                                        <!--</ul>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=!selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab color=\"primary\" (click)=\"update('USER_ACTIVE', 'status')\" matTooltip=\"Activer\">-->\n                                                            <!--<mat-icon class=\"col-white\">notifications</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=!selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab color=\"warn\" (click)=\"update('USER_INACTIVE', 'status')\" matTooltip=\"Désactiver\">-->\n                                                            <!--<mat-icon class=\"col-white\">notifications_off</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=\"selection.selected.length !== 1\">-->\n                                                        <!--<button mat-mini-fab color=\"primary\" (click)=\"edit()\" matTooltip=\"Editer\">-->\n                                                            <!--<mat-icon class=\"col-white\">edit</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                                <!--<li>-->\n                                                    <!--<div class=\"icon-button-demo\" [hidden]=selection.hasValue()>-->\n                                                        <!--<button mat-mini-fab color=\"primary\" (click)=\"add()\" matTooltip=\"Ajouter\">-->\n                                                            <!--<mat-icon class=\"col-white\">add</mat-icon>-->\n                                                        <!--</button>-->\n                                                    <!--</div>-->\n                                                <!--</li>-->\n                                            <!--</ul>-->\n                                        <!--</div>-->\n                                    </div>\n                                </div>\n                                <mat-table #table [dataSource]=\"datasource\" matSort class=\"mat-cell\">\n                                    <ng-container matColumnDef=\"select\">\n                                        <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\n                                            <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                                                          [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\n                                            </mat-checkbox>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"topic\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Topic'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.topic?.title}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"attendee\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Number of attendees'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.numberOfAttendees}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"startDate\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Start Date'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.startDate | date:'mediumDate'}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"endDate\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'End Date'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.endDate | date:'mediumDate'}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"place\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Institution'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.requester.name }}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"creator\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Creator'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.creator.person.fullname }}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"created\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Created'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{row.created | date:'medium'}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"status\" >\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Status'|translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">{{format(row.status)}}</mat-cell>\n                                    </ng-container>\n\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple> </mat-row>\n                                </mat-table>\n                                <mat-paginator #paginator [length]=\"datasource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DataSource } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MatMenuTrigger } from '@angular/material/menu';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\nimport {Training} from \"../../../core/models/training/training\";\nimport {TrainingService} from \"../../../core/service/training.service\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './demands.page.component.html',\n    styleUrls: ['./demands.page.component.css'],\n})\n\nexport class DemandsPageComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    displayedColumns = [\n        'select',\n        'title',\n        'attendee',\n        'startDate',\n        'endDate',\n        'place',\n        'status',\n        'creator',\n        'created'\n    ];\n\n    database: TrainingService | null;\n    datasource: Source | null;\n    selection = new SelectionModel<Training>(true, []);\n    training: Training | null;\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild('filter', { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = {x:'0px', y:'0px'};\n\n    constructor(private http: HttpClient){\n        super();\n    }\n\n    private load(){\n        this.database = new TrainingService(this.http);\n        this.datasource = new Source(this.database, this.paginator, this.sort);\n        this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(() => {\n            if(!this.datasource)\n                return;\n            this.datasource.filter = this.filter.nativeElement.value;\n        });\n    }\n\n    ngOnInit(){\n        this.load();\n    }\n\n    format(o){\n        switch (o) {\n            case 'TRAINING_REQUESTED': return 'Demandée';\n            case 'TRAINING_VALIDATED': return 'Validée';\n            case 'TRAINING_REJECTED': return 'Rejetée';\n            case 'TRAINING_PENDING': return 'En cours';\n            case 'TRAINING_COMPLETED': return 'Complétée';\n            case 'TRAINING_UNCOMPLETED': return 'Inachevée';\n        }\n    }\n\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.datasource.renderedData.length;\n        return numSelected === numRows;\n    }\n\n    masterToggle() {\n        this.isAllSelected()? this.selection.clear(): this.datasource.renderedData.forEach((row) => this.selection.select(row));\n    }\n\n}\n\nexport class Source extends DataSource<Training> {\n\n    filterChange = new BehaviorSubject('');\n\n    get filter(): string {\n        return this.filterChange.value;\n    }\n\n    set filter(filter: string) {\n        this.filterChange.next(filter);\n    }\n\n    filteredData: Training[] = [];\n    renderedData: Training[] = [];\n\n    constructor(public service: TrainingService, public paginator: MatPaginator, public ms: MatSort){\n        super();\n        this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n\n    connect(): Observable<Training[]>{\n        const displayDataChanges = [\n            this.service.dataChange,\n            this.ms.sortChange,\n            this.filterChange,\n            this.paginator.page,\n        ];\n        this.service.getTrainings();\n        return merge(...displayDataChanges).pipe(\n            map(() => {\n                this.filteredData = this.service.data\n                    .slice()\n                    .filter((t: Training) => {\n                        const search = (\n                            t?.topic.title\n                        ).toLowerCase();\n                        return search.indexOf(this.filter.toLowerCase()) !== -1;\n                    });\n                const sortedData = this.sortData(this.filteredData.slice());\n                const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n                this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n                return this.renderedData;\n            })\n        );\n    }\n\n    disconnect() {}\n\n    sortData(data: Training[]): Training[] {\n        if (!this.ms.active || this.ms.direction === '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n            switch (this.ms.active) {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n            }\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (\n                (valueA < valueB ? -1 : 1) * (this.ms.direction === 'asc' ? 1 : -1)\n            );\n        });\n    }\n\n}\n"]}