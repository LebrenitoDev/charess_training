{"version":3,"sources":["webpack:///src/app/core/models/training/partner.training.participants.ts","webpack:///src/app/partnership/participants/participants.module.ts","webpack:///src/app/partnership/participants/participants.routing.module.ts","webpack:///src/app/partnership/participants/submission/submission.participants.component.html","webpack:///src/app/partnership/participants/submission/submission.participants.component.ts","webpack:///src/app/partnership/participants/training/participants.training.component.html","webpack:///src/app/partnership/participants/training/participants.training.component.ts"],"names":["PartnerTrainingParticipants","t","id","training","partner","participants","ParticipantsModule","TrainingService","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MatTabsModule","MaterialFileInputModule","MatMenuModule","MatProgressSpinnerModule","TranslateModule","NgxDatatableModule","MatTooltipModule","MatAutocompleteModule","PerfectScrollbarModule","NgbModule","NgxMaskModule","ParticipantsRoutingModule","ParticipantsTrainingComponent","SubmissionParticipantsComponent","routes","path","component","RouterModule","fb","router","service","snack","isEmailDuplicated","isIdentifierDuplicated","unchanged","state","getCurrentNavigation","extras","trainingPartner","JSON","parse","localStorage","getItem","status","startDate","Date","endDate","console","log","partnerTrainingParticpants","array","group","Person","map","p","fg","get","color","text","open","duration","verticalPosition","horizontalPosition","panelClass","toast","back","err","error","ob","getRawValue","participate","subscribe","res","success","navigate","controls","unshift","index","length","removeAt","email","trim","i","msg","getPersonByEmail","pull","identifier","getPersonByIdentifier","submit","http","dialog","factory","auth","displayedColumns","profiles","dim","width","height","contextMenuPosition","x","y","currentUserValue","institution","database","datasource","Source","paginator","sort","subs","sink","fromEvent","filter","nativeElement","value","load","row","setItem","stringify","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","MatMenuTrigger","ms","filterChange","BehaviorSubject","filteredData","renderedData","pageIndex","next","displayDataChanges","dataPartnerChange","sortChange","page","getTrainingsForAPartner","merge","pipe","partnerData","slice","tp","search","topic","title","toLowerCase","indexOf","sortedData","sortData","startIndex","pageSize","splice","data","active","direction","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource"],"mappings":"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","file":"src_app_partnership_participants_participants_module_ts-es5.js","sourcesContent":["import {Institution} from \"../security/institution\";\nimport {Training} from \"./training\";\n\nexport class PartnerTrainingParticipants {\n    id: number;\n    training: Training;\n    partner: Institution;\n    participants: [{Person}];\n\n    constructor(t) {\n        {\n            this.id = t.id;\n            this.training = t.training;\n            this.partner = t.partner;\n            this.participants = t.participants;\n        }\n    }\n}\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MaterialFileInputModule} from 'ngx-material-file-input';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {MatAutocompleteModule} from \"@angular/material/autocomplete\";\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\nimport {PerfectScrollbarModule} from \"ngx-perfect-scrollbar\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ParticipantsRoutingModule} from \"./participants.routing.module\";\nimport {ParticipantsTrainingComponent} from \"./training/participants.training.component\";\nimport {TrainingService} from \"../../organisation/training/training.service\";\nimport {SubmissionParticipantsComponent} from \"./submission/submission.participants.component\";\nimport {NgxMaskModule} from \"ngx-mask\";\n\n@NgModule({\n    declarations: [\n        ParticipantsTrainingComponent,\n        SubmissionParticipantsComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSnackBarModule,\n        MatButtonModule,\n        MatIconModule,\n        MatDialogModule,\n        MatSortModule,\n        MatToolbarModule,\n        MatSelectModule,\n        MatDatepickerModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        MaterialFileInputModule,\n        MatMenuModule,\n        MatProgressSpinnerModule,\n        TranslateModule,\n        NgxDatatableModule,\n        MatTooltipModule,\n        MatAutocompleteModule,\n        PerfectScrollbarModule,\n        NgbModule,\n        NgxMaskModule.forRoot(),\n        ParticipantsRoutingModule\n    ],\n    providers: [TrainingService]\n})\n\nexport class ParticipantsModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ParticipantsTrainingComponent} from \"./training/participants.training.component\";\nimport {SubmissionParticipantsComponent} from \"./submission/submission.participants.component\";\n\nconst routes: Routes = [\n    {\n        path: 'submission',\n        component: SubmissionParticipantsComponent,\n    },\n    {\n        path: '',\n        component: ParticipantsTrainingComponent,\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\n\nexport class ParticipantsRoutingModule {}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"block-header\">\n            <div class=\"row\">\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h4 class=\"page-title\">{{partner?partner.name:''}}: {{'Participants Submission' | translate}}</h4>\n                    <br/>\n                </div>\n            </div>\n        </div>\n        <div class=\"row clearfix\">\n            <div>\n                <div class=\"card\">\n                    <div class=\"body\">\n                        <form [formGroup]=\"fg\" (submit)=\"submit(fg.value)\">\n                            <div class=\"row\">\n                                <div class=\"col-1\">\n                                    <i [ngClass]=\"['material-icons-two-tone', 'icon', status]\">subject</i>\n                                </div>\n                                <div class=\"col-11\">\n                                    <div class=\"row title\">{{training?.topic?.fullname}}</div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">Nombre maximum de participants: <span class=\"corps\">{{training?.capacity}}</span></div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            Date de début: <span class=\"corps\">{{startDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            Date de fin: <span class=\"corps\">{{endDate.toLocaleString('fr-FR', {weekday:\"long\", year:\"numeric\", month:\"long\", day:\"numeric\"})}}</span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">Catégorie de professionels attendue:\n                                            <span class=\"corps\" *ngFor=\"let category of training?.categories; index as i\">\n                                            {{i===0?category.name: (i===training.categories.length-1?' et ' + category.name: ' , ' + category.name)}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"inline\">\n                                            Lieu de formation: <span class=\"corps\">{{training?.location.fullname}}</span> se trouvant (au/à/aux) <span class=\"corps\">{{training?.location.address}}</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <br/>\n                            <fieldset>\n                                <div class=\"row\">\n                                    <legend>{{\"Participants\" | translate}}</legend>\n                                    <ng-container formArrayName=\"participants\" *ngFor=\"let person of participants.controls; index as i\">\n                                        <ng-container [formGroupName]=\"i\">\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-2\">\n                                                    <mat-label>{{\"Numéro d'Identifiant Fiscal\" | translate}}</mat-label>\n                                                    <input matInput mask=\"000-000-000-0\" placeholder=\"000-000-000-0\" formControlName=\"identifier\" required (blur)=\"checkIdentifier(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\">\n                                                <mat-form-field class=\"example-full-width mb-2\">\n                                                    <mat-label>{{\"Phone\"| translate}}</mat-label>\n                                                    <input matInput matInput mask=\"0000-0000\" placeholder=\"0000-0000\" formControlName=\"phone\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"Email\"| translate}}</mat-label>\n                                                    <input matInput formControlName=\"email\" [showMaskTyped]=\"true\" required (blur)=\"checkEmail(i)\"/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-3\">\n                                                <mat-form-field class=\"example-full-width mb-3\">\n                                                    <mat-label>{{\"FirstName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"firstName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-2\">\n                                                <mat-form-field class=\"example-full-width mb-2\">\n                                                    <mat-label>{{\"LastName\" | translate}}</mat-label>\n                                                    <input matInput formControlName=\"lastName\" [showMaskTyped]=\"true\" required/>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"!unchanged && (participants['controls'][i].status == 'VALID' && i===0 && participants['controls'].length < training.capacity)\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"primary\" type=\"button\" (click)=\"push()\"><mat-icon class=\"col-white\">add</mat-icon></button>\n                                                </div>\n                                            </div>\n                                            <div class=\"col-1\" *ngIf=\"!unchanged && (participants['controls'].length > 1 && (i>0 || participants['controls'][i].status != 'VALID') || participants['controls'].length >= training.capacity)\">\n                                                <div class=\"example-button-row\" >\n                                                    <button mat-mini-fab color=\"warn\" (click)=\"pull(i)\"><mat-icon class=\"col-white\">delete </mat-icon></button>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </ng-container>\n                                </div>\n                            </fieldset>\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                    <div class=\"example-button-row\">\n                                        <div class=\"example-button-row\">\n                                            <!--<button mat-raised-button color=\"primary\" [type]=\"submit\">{{\"Save\" | translate}}</button>-->\n                                            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"unchanged\">{{\"Save\" | translate}}</button>\n                                            <button mat-raised-button color=\"warn\" (click)=\"back()\" tabindex=\"-1\">{{\"Cancel\" | translate}}</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import {Component, OnInit} from \"@angular/core\";\nimport {\n    FormArray,\n    FormBuilder,\n    FormControl,\n    FormGroup\n} from \"@angular/forms\";\nimport {Observable, map} from \"rxjs\";\nimport {startWith} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {TrainingService} from \"../../../organisation/training/training.service\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {Training} from \"../../../core/models/training/training\";\nimport {PartnerTrainingParticipants} from \"../../../core/models/training/partner.training.participants\";\nimport {Person} from \"../../../core/models/security/person\";\n\n@Component({\n    selector: 'app-form',\n    templateUrl: './submission.participants.component.html',\n    styleUrls: ['./submission.participants.component.scss']\n})\n\nexport class SubmissionParticipantsComponent implements OnInit {\n\n    fg: FormGroup;\n    partner: Institution;\n    training: Training;\n    status: String;\n    startDate: Date;\n    endDate: Date;\n    msg: string;\n    isEmailDuplicated = [];\n    isIdentifierDuplicated = [];\n    unchanged = false;\n\n\n    constructor(private fb: FormBuilder, private router: Router, private service: TrainingService, private snack: MatSnackBar){\n        const state = this.router.getCurrentNavigation().extras.state;\n        const trainingPartner = state?state.trainingPartner:JSON.parse(localStorage.getItem(\"trainingPartner\"));\n\n        this.partner = trainingPartner.partner;\n        this.training = trainingPartner.training;\n        this.status = trainingPartner.status;\n        this.startDate = new Date(this.training?.startDate);\n        this.endDate = new Date(this.training?.endDate);\n\n        this.unchanged = this.status === 'completed' || this.status === 'deprecated';\n\n        console.log(this.unchanged);\n\n        const partnerTrainingParticpants = new PartnerTrainingParticipants(\n            {'partner': this.partner,\n                'training': this.training,\n                'participants': this.fb.array(trainingPartner.participants==null?[this.fb.group(new Person({}))]:trainingPartner.participants.map(p=>this.fb.group(p)))\n            });\n\n        this.fg = this.fb.group(partnerTrainingParticpants);\n    }\n\n    ngOnInit(){\n    }\n\n    get participants(): FormArray {\n        return this.fg.get('participants') as FormArray;\n    }\n\n    private toast(color, text) {\n        this.snack.open(text, '', {\n            duration: 2000, verticalPosition: 'top', horizontalPosition: 'right', panelClass: color,\n        });\n    }\n\n    private success(){\n        this.toast('bg-green','The usr has been successfully created');\n        this.back();\n    }\n\n    private error(err: HttpErrorResponse){\n        this.toast('bg-red','Something went wrong the usr has not been created. Please, try again!');\n        console.error(err);\n    }\n\n    submit(ob: any): void {\n        ob.participants = this.participants.getRawValue();\n        this.service.participate(ob).subscribe(\n            (res) => this.success(),\n            (err) => this.error(err)\n        );\n    }\n\n    back(){\n        this.router.navigate(['partnership/participants']);\n    }\n\n    push(){\n        this.participants.controls.unshift(this.fb.group(new Person({})));\n    }\n\n    pull(index: number): void {\n        if (this.participants.length > 1)\n            this.participants.removeAt(index);\n    }\n\n    checkEmail(index){\n        const participants = this.participants.getRawValue();\n        const email = participants[index].email;\n        if(email?.trim().length < 1)\n            return;\n        if(participants.length > 1){\n            for(let i=0; i< participants.length; i++){\n                if(index != i){\n                    if(email === participants[i].email){\n                        this.isEmailDuplicated[index] = true;\n                        this.msg = ' (existed in present pool)';\n                        return;\n                    }\n                }\n            }\n        }\n        this.service.getPersonByEmail(email).subscribe(res => {\n            if(res != null){\n                this.participants.controls.unshift(this.fb.group(res));\n                this.pull(index+1);\n            }\n        });\n    }\n\n    checkIdentifier(index){\n        const participants = this.participants.getRawValue();\n        const identifier = participants[index].identifier;\n        if(identifier?.trim().length < 1)\n            return;\n        if(participants.length > 1){\n            for(let i=0; i< participants.length; i++){\n                if(index != i){\n                    if(identifier === participants[i].email){\n                        this.isIdentifierDuplicated[index] = true;\n                        this.msg = ' (existed in present pool)';\n                        return;\n                    }\n                }\n            }\n        }\n        this.service.getPersonByIdentifier(identifier).subscribe(res => {\n            if(res != null){\n                this.participants.controls.unshift(this.fb.group(res));\n                this.pull(index+1);\n            }\n        });\n    }\n\n}\n","<section class=\"content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                    <div class=\"card\">\n                        <div class=\"body\">\n                            <div class=\"table-responsive\">\n                                <div class=\"materialTableHeader\">\n                                    <div class=\"row\">\n                                        <div class=\"col-8\">\n                                            <ul class=\"header-buttons-left ml-0\">\n                                                <li class=\"dropdown\"><h2><strong>{{partner?partner.name:''}}: {{'training.page' | translate}}</strong></h2></li>\n                                                <li class=\"dropdown m-l-20\">\n                                                    <label><i class=\"material-icons search-icon\">search</i></label>\n                                                    <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\" aria-label=\"Search box\">\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div>&nbsp;</div>\n                                <div>\n                                    <div style=\"font-weight: bold\">{{'Legend' | translate}}:</div>\n                                    <div>\n                                        {{'New' | translate}}: <button mat-icon-button class=\"btn-tbl-edit new\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Pending' | translate}}: <button mat-icon-button class=\"btn-tbl-edit pending\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Filled' | translate}}: <button mat-icon-button class=\"btn-tbl-edit set\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'In Progress' | translate}}: <button mat-icon-button class=\"btn-tbl-edit ongoing\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Completed' | translate}}: <button mat-icon-button class=\"btn-tbl-edit completed\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                        {{'Uncompleted' | translate}}: <button mat-icon-button class=\"btn-tbl-edit deprecated\"><mat-icon></mat-icon></button> &nbsp;&nbsp;&nbsp;\n                                    </div>\n                                </div>\n\n                                <mat-table #table [dataSource]=\"datasource\" matSort class=\"mat-cell\">\n                                    <ng-container matColumnDef=\"status\">\n                                        <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">\n                                            <span>\n                                                <button mat-icon-button class=\"btn-tbl-edit {{row.status}}\">\n                                                    <mat-icon></mat-icon>\n                                                </button>\n                                            </span>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"topic\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Theme'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.training.topic.fullname}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"startDate\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Start Date'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.training.startDate}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"endDate\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'End Date'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.training.endDate}}</mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"capacity\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'# Participants'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.participantsQuantity}}/<span style=\"font-weight: bold\">{{row.training.capacity}}</span></mat-cell>\n                                    </ng-container>\n                                    <ng-container matColumnDef=\"categories\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>{{'Professionals Category'| translate}}</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">\n                                            <span *ngFor=\"let c of row.training.categories; index as i\">{{i===0?c.name: (i===row.training.categories.length-1? ', et ' + c.name: ', ' + c.name)}}</span>\n                                        </mat-cell>\n                                    </ng-container>\n                                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"submitParticipants(row)\" [style.cursor]=\"'pointer'\" matRipple> </mat-row>\n                                </mat-table>\n                                <mat-paginator #paginator [length]=\"datasource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","import {Component, ElementRef, OnInit, ViewChild} from \"@angular/core\";\nimport {UnsubscribeOnDestroyAdapter} from \"../../../shared/UnsubscribeOnDestroyAdapter\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {TrainingService} from \"../../../organisation/training/training.service\";\nimport {Router} from \"@angular/router\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {MatSort} from \"@angular/material/sort\";\nimport {MatMenuTrigger} from \"@angular/material/menu\";\nimport {DataSource, SelectionModel} from \"@angular/cdk/collections\";\nimport {BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport {AuthService} from \"../../../core/service/auth.service\";\nimport {Institution} from \"../../../core/models/security/institution\";\nimport {map} from \"rxjs/operators\";\nimport {TrainingPartner} from \"../../../core/models/training/training.partner\";\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './participants.training.component.html',\n    styleUrls: ['./participants.training.component.scss']\n})\n\nexport class ParticipantsTrainingComponent extends UnsubscribeOnDestroyAdapter implements OnInit {\n\n    displayedColumns = [\n        'status',\n        'topic',\n        'startDate',\n        'endDate',\n        'categories',\n        'capacity'\n    ];\n\n    database: TrainingService | null;\n    datasource: Source | null;\n    profiles=[];\n    dim = {\n        width: '1200px',\n        height: '420px'\n    };\n\n    partner: Institution;\n\n    constructor(public http: HttpClient, public dialog: MatDialog, private snack: MatSnackBar, private factory: TrainingService, private router: Router, private auth: AuthService){\n        super();\n        this.partner = auth.currentUserValue?.institution;\n    }\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild(MatSort, { static: true }) sort: MatSort;\n    @ViewChild('filter', { static: true }) filter: ElementRef;\n    @ViewChild(MatMenuTrigger)\n    contextMenu: MatMenuTrigger;\n    contextMenuPosition = { x: '0px', y: '0px' };\n\n    public load() {\n        this.database = new TrainingService(this.http);\n        this.datasource = new Source(this.database, this.paginator, this.sort, this.partner);\n        this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\n            () => {\n                if (!this.datasource) {\n                    return;\n                }\n                this.datasource.filter = this.filter.nativeElement.value;\n            }\n        );\n    }\n\n    ngOnInit() {\n        this.load();\n    }\n\n    submitParticipants(row){\n        localStorage.setItem(\"trainingPartner\", JSON.stringify(row));\n        this.router.navigate(['partnership/participants/submission'],{state:{trainingPartner: row}});\n    }\n}\n\n\nexport class Source extends DataSource<TrainingPartner> {\n\n    filterChange = new BehaviorSubject('');\n\n    get filter(): string {\n        return this.filterChange.value;\n    }\n\n    set filter(filter: string) {\n        this.filterChange.next(filter);\n    }\n\n    filteredData: TrainingPartner[] = [];\n    renderedData: TrainingPartner[] = [];\n\n    constructor(public service: TrainingService, public paginator: MatPaginator, public ms: MatSort, public partner: Institution){\n        super();\n        this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\n    }\n\n    connect(): Observable<TrainingPartner[]>{\n        const displayDataChanges = [\n            this.service.dataPartnerChange,\n            this.ms.sortChange,\n            this.filterChange,\n            this.paginator.page,\n        ];\n\n        this.service.getTrainingsForAPartner(this.partner?.id);\n        return merge(...displayDataChanges).pipe(\n            map(() => {\n                this.filteredData = this.service.partnerData\n                    .slice()\n                    .filter((tp: TrainingPartner) => {\n                        const search = (\n                            tp.training.topic.title\n                        ).toLowerCase();\n                        return search.indexOf(this.filter.toLowerCase()) !== -1;\n                    });\n                const sortedData = this.sortData(this.filteredData.slice());\n                const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n                this.renderedData = sortedData.splice(startIndex, this.paginator.pageSize);\n                return this.renderedData;\n            })\n        );\n    }\n\n    disconnect() {}\n\n    sortData(data: TrainingPartner[]): TrainingPartner[] {\n        if (!this.ms.active || this.ms.direction === '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let propertyA: number | string = '';\n            let propertyB: number | string = '';\n            switch (this.ms.active) {\n                case 'id':\n                    [propertyA, propertyB] = [a.id, b.id];\n                    break;\n                case 'title':\n                    [propertyA, propertyB] = [a.training.topic.title, b.training.topic.title];\n                    break;\n\n            }\n            const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n            const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n            return (\n                (valueA < valueB ? -1 : 1) * (this.ms.direction === 'asc' ? 1 : -1)\n            );\n        });\n    }\n}\n"]}