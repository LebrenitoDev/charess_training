{"version":3,"sources":["webpack:///src/app/admin/fees/add-fees/add-fees.component.html","webpack:///src/app/admin/fees/add-fees/add-fees.component.ts","webpack:///src/app/admin/fees/all-fees/all-fees.component.html","webpack:///src/app/admin/fees/all-fees/all-fees.component.ts","webpack:///src/app/admin/fees/all-fees/dialogs/delete/delete.component.ts","webpack:///src/app/admin/fees/all-fees/dialogs/delete/delete.component.html","webpack:///src/app/admin/fees/all-fees/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/admin/fees/all-fees/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/admin/fees/all-fees/fees.model.ts","webpack:///src/app/admin/fees/all-fees/fees.service.ts","webpack:///src/app/admin/fees/edit-fees/edit-fees.component.html","webpack:///src/app/admin/fees/edit-fees/edit-fees.component.ts","webpack:///src/app/admin/fees/fee-receipt/fee-receipt.component.ts","webpack:///src/app/admin/fees/fee-receipt/fee-receipt.component.html","webpack:///src/app/admin/fees/fees-routing.module.ts","webpack:///src/app/admin/fees/fees.module.ts"],"names":["AddFeesComponent","fb","feesForm","group","rollNo","Validators","sName","fType","department","date","invoiceNo","pType","status","amount","duration","details","console","log","value","onSubmit","$event","stopPropagation","selection","AllFeesComponent","httpClient","dialog","feesService","snackBar","displayedColumns","SelectionModel","contextMenuPosition","x","y","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","fees","action","direction","subs","sink","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","FeesService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","MatMenuTrigger","removeSelectedRows","addNew","refresh","_sort","filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllFeess","merge","pipe","map","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","close","deleteFees","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Fees","createContactForm","hasError","formatDate","addFees","getRawValue","provide","MAT_DATE_LOCALE","useValue","confirmAdd","getRandomID","Date","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","name","message","EditFeesComponent","formdata","FeeReceiptComponent","routes","path","component","FeesRoutingModule","RouterModule","FeesModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatCheckboxModule","MatTabsModule","MatSelectModule","MaterialFileInputModule","MatDatepickerModule","MatMenuModule","MatRadioModule","MatProgressSpinnerModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCoB;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAsBA;;AACE;;AACF;;;;;;AA0BA;;AACE;;AACF;;;;;;AAYE;;AACE;;AACF;;;;;;AAYF;;AACE;;AACF;;;;;;AAuBA;;AACE;;AACF;;;;;;AAUA;;AACE;;AACF;;;;;;AAiBA;;AACE;;AACF;;;;;;AAUA;;AACE;;AACF;;;;UC5LPA,iB;AAEX,mCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAClB,eAAKC,QAAL,GAAgB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC5BC,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAC,UAAA,SAAD,CAAL,CADoB;AAE5BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAD,UAAA,SAAD,CAAL,CAFqB;AAG5BE,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAF,UAAA,SAAD,CAAL,CAHqB;AAI5BG,sBAAU,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAH,UAAA,SAAD,CAAL,CAJgB;AAK5BI,gBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAJ,UAAA,SAAD,CAAL,CALsB;AAM5BK,qBAAS,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAL,UAAA,SAAD,CAAL,CANiB;AAO5BM,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAN,UAAA,SAAD,CAAL,CAPqB;AAQ5BO,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAP,UAAA,SAAD,CAAL,CARoB;AAS5BQ,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAR,UAAA,SAAD,CAAL,CAToB;AAU5BS,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAT,UAAA,SAAD,CAAL,CAVkB;AAW5BU,mBAAO,EAAE,CAAC,EAAD;AAXmB,WAAd,CAAhB;AAaD;;;;iBACD,oBAAW;AACTC,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKf,QAAL,CAAcgB,KAAxC;AACD;;;;;;;yBAnBUlB,iB,EAAgB,wH;AAAA,O;;;cAAhBA,iB;AAAgB,qC;AAAA,kB;AAAA,gB;AAAA,24D;AAAA;AAAA;ADR7B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAI;;AAC7B;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAI;;AAC1C;;AACA;;AAAmC;;AAAgB;;AACrD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAgB;;AAEtB;;AACA;;AACE;;AAAuD;AAAA,qBAAY,IAAAmB,QAAA,EAAZ;AAAsB,aAAtB;;AACrD;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAAoB;;AAAK;;AACzB;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AAAoB;;AAAc;;AAClC;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAS;;AAClC;;AACE;;AAAkC;;AAAO;;AACzC;;AAAiC;;AAAM;;AACvC;;AAAkC;;AAAO;;AACzC;;AAGF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAe;;AAC1B;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;A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AA,24D;AAAA;AAAA;ADR9B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAI;;AAC7B;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAI;;AAC1C;;AACA;;AAAmC;;AAAiB;;AACtD;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAiB;;AAEvB;;AACA;;AACE;;AAAuD;AAAA,qBAAY,IAAArJ,QAAA,EAAZ;AAAsB,aAAtB;;AACrD;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACA;;AAAoB;;AAAK;;AACzB;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACA;;AAAoB;;AAAc;;AAClC;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAyB;;AAAS;;AAClC;;AACE;;AAAkC;;AAAO;;AACzC;;AAAiC;;AAAM;;AACvC;;AAAkC;;AAAO;;AACzC;;AAGF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAe;;AAC1B;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAc;;AACzB;;AACA;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","file":"src_app_admin_fees_fees_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Fees</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add Fees Details</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Add Fees Details</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Roll No</mat-label>\r\n                    <input matInput formControlName=\"rollNo\" required>\r\n                    <mat-icon matSuffix>label</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                      Please enter roll no\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Student Name</mat-label>\r\n                    <input matInput formControlName=\"sName\" required>\r\n                    <mat-icon matSuffix>account_circle</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                      Please enter student name\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Select Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'mechanical'\">\r\n                        Mechanical\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'science'\">\r\n                        Science\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'mathematics'\">\r\n                        Mathematics\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'computer'\">\r\n                        Computer\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                    <mat-label>Fees Type</mat-label>\r\n                    <mat-select formControlName=\"fType\" required>\r\n                      <mat-option [value]=\"'annual'\">\r\n                        Annual\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'tution'\">\r\n                        Tution\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'transport'\">\r\n                        Transport\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'exam'\">\r\n                        Exam\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'library'\">\r\n                        Library\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                      Select Fees Type\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <div class=\"m-b-20\">\r\n                    <mat-label class=\"msr-3\">Duration:</mat-label>\r\n                    <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\" required>\r\n                      <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\r\n                      <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\r\n                      <mat-radio-button value=\"session\">Session</mat-radio-button>\r\n                      <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\r\n                        Select Duration\r\n                      </mat-error>\r\n                    </mat-radio-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Collection Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Payment Type</mat-label>\r\n                    <mat-select formControlName=\"pType\" required>\r\n                      <mat-option [value]=\"'cash'\">\r\n                        Cash\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'cheque'\">\r\n                        Cheque\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'online transfer'\">\r\n                        Online Transfer\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'credit card'\">\r\n                        Draft\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                      Select Status\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Invoice Number</mat-label>\r\n                    <input matInput formControlName=\"invoiceNo\" required>\r\n                    <mat-icon matSuffix>receipt</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                      Enter Invoice Number\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Status</mat-label>\r\n                    <mat-select formControlName=\"status\" required>\r\n                      <mat-option [value]=\"'paid'\">\r\n                        Paid\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'unpaid'\">\r\n                        Unpaid\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'pending'\">\r\n                        Pending\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                      Select Status\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput formControlName=\"amount\" required>\r\n                    <mat-icon matSuffix>monetization_on</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                      Enter amount\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Details</mat-label>\r\n                    <textarea matInput formControlName=\"details\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <div class=\"example-button-row\">\r\n                    <button class=\"btn-space\" [disabled]=\"!feesForm.valid \" mat-raised-button\r\n                      color=\"primary\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-fees',\r\n  templateUrl: './add-fees.component.html',\r\n  styleUrls: ['./add-fees.component.sass']\r\n})\r\nexport class AddFeesComponent {\r\n  feesForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.feesForm = this.fb.group({\r\n      rollNo: ['', [Validators.required]],\r\n      sName: ['', [Validators.required]],\r\n      fType: ['', [Validators.required]],\r\n      department: ['', [Validators.required]],\r\n      date: ['', [Validators.required]],\r\n      invoiceNo: ['', [Validators.required]],\r\n      pType: ['', [Validators.required]],\r\n      status: ['', [Validators.required]],\r\n      amount: ['', [Validators.required]],\r\n      duration: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.feesForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Feess</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Feess</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Fees</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"rollNo\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Roll No</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.rollNo}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.sName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"fType\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Fees Type</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.fType }}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"invoiceNo\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Invoice No</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.invoiceNo}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"pType\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Payment Type</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.pType}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.status}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"amount\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Amount\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.amount}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FeesService } from './fees.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Fees } from './fees.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { DateAdapter, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-all-fees',\r\n  templateUrl: './all-fees.component.html',\r\n  styleUrls: ['./all-fees.component.sass'],\r\n})\r\nexport class AllFeesComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'select',\r\n    'rollNo',\r\n    'sName',\r\n    'fType',\r\n    'date',\r\n    'invoiceNo',\r\n    'pType',\r\n    'status',\r\n    'amount',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: FeesService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Fees>(true, []);\r\n  id: number;\r\n  fees: Fees | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public feesService: FeesService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        fees: this.fees,\r\n        action: 'add',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.feesService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        fees: row,\r\n        action: 'edit',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.feesService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Fees>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new FeesService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Fees) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Fees> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Fees[] = [];\r\n  renderedData: Fees[] = [];\r\n  constructor(\r\n    public exampleDatabase: FeesService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Fees[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllFeess();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((fees: Fees) => {\r\n            const searchStr = (\r\n              fees.rollNo +\r\n              fees.sName +\r\n              fees.fType +\r\n              fees.date +\r\n              fees.invoiceNo +\r\n              fees.pType +\r\n              fees.status\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Fees[]): Fees[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'rollNo':\r\n          [propertyA, propertyB] = [a.rollNo, b.rollNo];\r\n          break;\r\n        case 'sName':\r\n          [propertyA, propertyB] = [a.sName, b.sName];\r\n          break;\r\n        // case 'date': [propertyA, propertyB] = [a.date, b.date]; break;\r\n        case 'fType':\r\n          [propertyA, propertyB] = [a.fType, b.fType];\r\n          break;\r\n        case 'invoiceNo':\r\n          [propertyA, propertyB] = [a.invoiceNo, b.invoiceNo];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FeesService } from '../../fees.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public feesService: FeesService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.feesService.deleteFees(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <h3 mat-dialog-title>Are you sure?</h3>\r\n    <div mat-dialog-content>\r\n        <ul class=\"clearfix\">\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Roll No: </span>{{data.rollNo}}</p>\r\n            </li>\r\n            <li>\r\n                <p><span class=\"font-weight-bold\"> Name: </span>{{ data.sName }}</p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Date: </span>{{data.date | date: 'MM/dd/yyyy'}}\r\n                </p>\r\n            </li>\r\n            <li>\r\n                <p>\r\n                    <span class=\"font-weight-bold\">Invoice No: </span>{{data.invoiceNo}}\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div mat-dialog-actions class=\"mb-1\">\r\n        <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n            Delete\r\n        </button>\r\n        <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n    </div>\r\n</div>","<div class=\"addContainer\">\r\n    <div class=\"modalHeader\">\r\n        <div class=\"editRowModal\">\r\n            <div class=\"modalHeader clearfix\">\r\n                <div class=\"modal-about\">\r\n                    <div class=\"font-weight-bold p-t-5 font-17\">\r\n                        {{dialogTitle}}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n    <div mat-dialog-content>\r\n        <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"submit\">\r\n            <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Roll No</mat-label>\r\n                        <input matInput formControlName=\"rollNo\" required>\r\n                        <mat-icon matSuffix>label</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                            Please enter roll no\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Student Name</mat-label>\r\n                        <input matInput formControlName=\"sName\" required>\r\n                        <mat-icon matSuffix>account_circle</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                            Please enter student name\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                        <mat-label>Fees Type</mat-label>\r\n                        <mat-select formControlName=\"fType\" required>\r\n                            <mat-option [value]=\"'annual'\">\r\n                                Annual\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'tution'\">\r\n                                Tution\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'transport'\">\r\n                                Transport\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'exam'\">\r\n                                Exam\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'library'\">\r\n                                Library\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'other'\">\r\n                                Other\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                            Select Fees Type\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Date</mat-label>\r\n                        <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                        <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                        <mat-datepicker #picker1></mat-datepicker>\r\n                        <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                            Please select date\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Invoice Number</mat-label>\r\n                        <input matInput formControlName=\"invoiceNo\" required>\r\n                        <mat-icon matSuffix>receipt</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                            Enter Invoice Number\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Payment Type</mat-label>\r\n                        <mat-select formControlName=\"pType\" required>\r\n                            <mat-option [value]=\"'cash'\">\r\n                                Cash\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'cheque'\">\r\n                                Cheque\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'online transfer'\">\r\n                                Online Transfer\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'credit card'\">\r\n                                Draft\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'other'\">\r\n                                Other\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                            Select Payment Type\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                        <mat-label>Status</mat-label>\r\n                        <mat-select formControlName=\"status\" required>\r\n                            <mat-option [value]=\"'paid'\">\r\n                                Paid\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'unpaid'\">\r\n                                Unpaid\r\n                            </mat-option>\r\n                            <mat-option [value]=\"'pending'\">\r\n                                Pending\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                            Select Status\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                        <mat-label>Amount</mat-label>\r\n                        <input matInput formControlName=\"amount\" required>\r\n                        <mat-icon matSuffix>monetization_on</mat-icon>\r\n                        <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                            Enter amount\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                    <div class=\"example-button-row\">\r\n                        <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!feesForm.valid\"\r\n                            [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n                        <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { FeesService } from '../../fees.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Fees } from '../../fees.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  feesForm: FormGroup;\r\n  fees: Fees;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public feesService: FeesService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      console.log(data.fees.date);\r\n      this.dialogTitle = data.fees.sName;\r\n      this.fees = data.fees;\r\n    } else {\r\n      this.dialogTitle = 'New Fees';\r\n      this.fees = new Fees({});\r\n    }\r\n    this.feesForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.fees.id],\r\n      rollNo: [this.fees.rollNo, [Validators.required]],\r\n      sName: [this.fees.sName, [Validators.required]],\r\n      fType: [this.fees.fType, [Validators.required]],\r\n      date: [\r\n        formatDate(this.fees.date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required]\r\n      ],\r\n      invoiceNo: [this.fees.invoiceNo, [Validators.required]],\r\n      pType: [this.fees.pType, [Validators.required]],\r\n      status: [this.fees.status, [Validators.required]],\r\n      amount: [this.fees.amount, [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.feesService.addFees(this.feesForm.getRawValue());\r\n  }\r\n}\r\n","import { formatDate } from '@angular/common';\r\nexport class Fees {\r\n  id: number;\r\n  rollNo: string;\r\n  sName: string;\r\n  fType: string;\r\n  date: string;\r\n  invoiceNo: string;\r\n  pType: string;\r\n  status: string;\r\n  amount: string;\r\n  department: string;\r\n  duration: string;\r\n  details: string;\r\n  constructor(fees) {\r\n    {\r\n      this.id = fees.id || this.getRandomID();\r\n      this.rollNo = fees.rollNo || '';\r\n      this.sName = fees.sName || '';\r\n      this.fType = fees.fType || '';\r\n      this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.invoiceNo = fees.invoiceNo || '';\r\n      this.pType = fees.pType || '';\r\n      this.status = fees.status || '';\r\n      this.amount = fees.amount || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Fees } from './fees.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class FeesService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/fees.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Fees[]> = new BehaviorSubject<Fees[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Fees[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllFeess(): void {\r\n    this.subs.sink = this.httpClient.get<Fees[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addFees(fees: Fees): void {\r\n    this.dialogData = fees;\r\n\r\n    /*  this.httpClient.post(this.API_URL, fees).subscribe(data => {\r\n      this.dialogData = fees;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateFees(fees: Fees): void {\r\n    this.dialogData = fees;\r\n\r\n    /* this.httpClient.put(this.API_URL + fees.id, fees).subscribe(data => {\r\n      this.dialogData = fees;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteFees(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Fees</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/admin/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit Fees Details</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Fees Details</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"register-form m-4\" [formGroup]=\"feesForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Roll No</mat-label>\r\n                    <input matInput formControlName=\"rollNo\" required>\r\n                    <mat-icon matSuffix>label</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('rollNo').hasError('required')\">\r\n                      Please enter roll no\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-3\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Student Name</mat-label>\r\n                    <input matInput formControlName=\"sName\" required>\r\n                    <mat-icon matSuffix>account_circle</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('sName').hasError('required')\">\r\n                      Please enter student name\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Select Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'mechanical'\">\r\n                        Mechanical\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'science'\">\r\n                        Science\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'mathematics'\">\r\n                        Mathematics\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'computer'\">\r\n                        Computer\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width \" appearance=\"outline\">\r\n                    <mat-label>Fees Type</mat-label>\r\n                    <mat-select formControlName=\"fType\" required>\r\n                      <mat-option [value]=\"'annual'\">\r\n                        Annual\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'tution'\">\r\n                        Tution\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'transport'\">\r\n                        Transport\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'exam'\">\r\n                        Exam\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'library'\">\r\n                        Library\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('fType').hasError('required')\">\r\n                      Select Fees Type\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <div class=\"m-b-20\">\r\n                    <mat-label class=\"msr-3\">Duration:</mat-label>\r\n                    <mat-radio-group aria-label=\"Select duration\" formControlName=\"duration\" required>\r\n                      <mat-radio-button value=\"monthly\">Monthly</mat-radio-button>\r\n                      <mat-radio-button value=\"yearly\">Yearly</mat-radio-button>\r\n                      <mat-radio-button value=\"session\">Session</mat-radio-button>\r\n                      <mat-error *ngIf=\"feesForm.get('duration').hasError('required')\">\r\n                        Select Duration\r\n                      </mat-error>\r\n                    </mat-radio-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Collection Date</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker1\" formControlName=\"date\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker1></mat-datepicker>\r\n                    <mat-error *ngIf=\"feesForm.get('date').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Payment Type</mat-label>\r\n                    <mat-select formControlName=\"pType\" required>\r\n                      <mat-option [value]=\"'cash'\">\r\n                        Cash\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'cheque'\">\r\n                        Cheque\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'online transfer'\">\r\n                        Online Transfer\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'credit card'\">\r\n                        Draft\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('pType').hasError('required')\">\r\n                      Select Status\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Invoice Number</mat-label>\r\n                    <input matInput formControlName=\"invoiceNo\" required>\r\n                    <mat-icon matSuffix>receipt</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('invoiceNo').hasError('required')\">\r\n                      Enter Invoice Number\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Status</mat-label>\r\n                    <mat-select formControlName=\"status\" required>\r\n                      <mat-option [value]=\"'paid'\">\r\n                        Paid\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'unpaid'\">\r\n                        Unpaid\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'pending'\">\r\n                        Pending\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"feesForm.get('status').hasError('required')\">\r\n                      Select Status\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Amount</mat-label>\r\n                    <input matInput formControlName=\"amount\" required>\r\n                    <mat-icon matSuffix>monetization_on</mat-icon>\r\n                    <mat-error *ngIf=\"feesForm.get('amount').hasError('required')\">\r\n                      Enter amount\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Details</mat-label>\r\n                    <textarea matInput formControlName=\"details\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <div class=\"example-button-row\">\r\n                    <button class=\"btn-space\" [disabled]=\"!feesForm.valid \" mat-raised-button\r\n                      color=\"primary\">Submit</button>\r\n                    <button mat-raised-button color=\"warn\" tabindex=\"-1\">Cancel</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-fees',\r\n  templateUrl: './edit-fees.component.html',\r\n  styleUrls: ['./edit-fees.component.sass']\r\n})\r\nexport class EditFeesComponent {\r\n  feesForm: FormGroup;\r\n  formdata = {\r\n    rollNo: '99',\r\n    sName: 'Jenish Shah\t',\r\n    fType: 'annual',\r\n    department: 'mathematics',\r\n    date: '2020-01-04T14:22:18Z',\r\n    invoiceNo: 'IN-434454',\r\n    pType: 'cheque',\r\n    status: 'paid',\r\n    amount: '320$',\r\n    duration: 'yearly',\r\n    details: 'Annual Tution Fees'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.feesForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.feesForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      rollNo: [this.formdata.rollNo, [Validators.required]],\r\n      sName: [this.formdata.sName, [Validators.required]],\r\n      fType: [this.formdata.fType, [Validators.required]],\r\n      department: [this.formdata.department, [Validators.required]],\r\n      date: [this.formdata.date, [Validators.required]],\r\n      invoiceNo: [this.formdata.invoiceNo, [Validators.required]],\r\n      pType: [this.formdata.pType, [Validators.required]],\r\n      status: [this.formdata.status, [Validators.required]],\r\n      amount: [this.formdata.amount, [Validators.required]],\r\n      duration: [this.formdata.duration, [Validators.required]],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fee-receipt',\r\n  templateUrl: './fee-receipt.component.html',\r\n  styleUrls: ['./fee-receipt.component.sass']\r\n})\r\nexport class FeeReceiptComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"block-header\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                    <ul class=\"breadcrumb breadcrumb-style \">\r\n                        <li class=\"breadcrumb-item\">\r\n                            <h4 class=\"page-title\">Receipt</h4>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-1\">\r\n                            <a routerLink=\"/admin/dashboard/main\">\r\n                                <i class=\"fas fa-home\"></i> Home</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item bcrumb-2\">\r\n                            <a href=\"#\" onClick=\"return false;\">Fees</a>\r\n                        </li>\r\n                        <li class=\"breadcrumb-item active\">Receipt</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row clearfix\">\r\n            <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"white-box\">\r\n                                    <h3>\r\n                                        <b>RECEIPT</b>\r\n                                        <span class=\"float-end\">#345766</span>\r\n                                    </h3>\r\n                                    <hr>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"float-start\">\r\n                                                <address>\r\n                                                    <p class=\"font-bold\">BILL FROM :</p>\r\n                                                    <img src=\"assets/images/invoice_logo.png\" alt=\"logo\"\r\n                                                        class=\"logo-default\" />\r\n                                                    <p class=\"text-muted m-l-5\">\r\n                                                        Aditya University, <br> Opp. Town Hall, <br>\r\n                                                        Sardar Patel Road, <br> Ahmedabad - 380015\r\n                                                    </p>\r\n                                                </address>\r\n                                            </div>\r\n                                            <div class=\"float-end text-end\">\r\n                                                <address>\r\n                                                    <p class=\"addr-font-h3 font-bold\">BILL TO :</p>\r\n                                                    <p class=\"font-bold addr-font-h4\">Jayesh Patel</p>\r\n                                                    <p class=\"text-muted m-l-30\">\r\n                                                        207, Prem Sagar Appt.,\r\n                                                        <br> Near Income Tax Office,\r\n                                                        <br> Ashram Road,\r\n                                                        <br> Ahmedabad - 380057\r\n                                                    </p>\r\n                                                    <p class=\"m-t-30\">\r\n                                                        <b>Invoice Date :</b>\r\n                                                        <i class=\"ml-2 fa fa-calendar\"></i> 14th July 2019\r\n                                                    </p>\r\n                                                    <p>\r\n                                                        <b>Status :</b>\r\n                                                        <span class=\"label col-green font-weight-bold\">paid</span>\r\n                                                    </p>\r\n                                                </address>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"table-responsive m-t-40\">\r\n                                                <table class=\"table table-hover\">\r\n                                                    <thead>\r\n                                                        <tr>\r\n                                                            <th class=\"text-center\">#</th>\r\n                                                            <th class=\"text-end\">Fees Type</th>\r\n                                                            <th class=\"text-end\">Frequency</th>\r\n                                                            <th class=\"text-end\">Date</th>\r\n                                                            <th class=\"text-end\">Invoice number</th>\r\n                                                            <th class=\"text-end\">Amount</th>\r\n                                                        </tr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <td class=\"text-center\">1</td>\r\n                                                            <td class=\"text-end\">Annual Fees</td>\r\n                                                            <td class=\"text-end\">Yearly</td>\r\n                                                            <td class=\"text-end\">2016-11-19</td>\r\n                                                            <td class=\"text-end\">#IN-345609865</td>\r\n                                                            <td class=\"text-end\">$100</td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                            <td class=\"text-center\">2</td>\r\n                                                            <td class=\"text-end\">Tuition Fees</td>\r\n                                                            <td class=\"text-end\">Monthly</td>\r\n                                                            <td class=\"text-end\">2016-11-19</td>\r\n                                                            <td class=\"text-end\">#IN-345604565</td>\r\n                                                            <td class=\"text-end\">$50</td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"float-end m-t-30 text-end\">\r\n                                                <p>Sub - Total amount: $150</p>\r\n                                                <p>Discount : $10 </p>\r\n                                                <p>Tax (10%) : $14 </p>\r\n                                                <hr>\r\n                                                <h3><b>Total :</b> $164</h3>\r\n                                            </div>\r\n                                            <div class=\"clearfix\"></div>\r\n                                            <hr>\r\n                                            <div class=\"text-end\">\r\n                                                <button mat-raised-button color=\"primary\"> Proceed to payment\r\n                                                </button>\r\n                                                <button onclick=\"javascript:window.print();\"\r\n                                                    class=\"btn btn-default btn-outline\" type=\"button\"> <span><i\r\n                                                            class=\"fa fa-print\"></i> Print</span> </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllFeesComponent } from './all-fees/all-fees.component';\r\nimport { AddFeesComponent } from './add-fees/add-fees.component';\r\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\r\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-fees',\r\n    component: AllFeesComponent\r\n  },\r\n  {\r\n    path: 'add-fees',\r\n    component: AddFeesComponent\r\n  },\r\n  {\r\n    path: 'edit-fees',\r\n    component: EditFeesComponent\r\n  },\r\n  {\r\n    path: 'fee-receipt',\r\n    component: FeeReceiptComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FeesRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { FeesRoutingModule } from './fees-routing.module';\r\nimport { AllFeesComponent } from './all-fees/all-fees.component';\r\nimport { AddFeesComponent } from './add-fees/add-fees.component';\r\nimport { EditFeesComponent } from './edit-fees/edit-fees.component';\r\nimport { FeeReceiptComponent } from './fee-receipt/fee-receipt.component';\r\nimport { DeleteDialogComponent } from './all-fees/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-fees/dialogs/form-dialog/form-dialog.component';\r\nimport { FeesService } from './all-fees/fees.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllFeesComponent,\r\n    AddFeesComponent,\r\n    EditFeesComponent,\r\n    FeeReceiptComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FeesRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  providers: [FeesService],\r\n})\r\nexport class FeesModule {}\r\n"]}