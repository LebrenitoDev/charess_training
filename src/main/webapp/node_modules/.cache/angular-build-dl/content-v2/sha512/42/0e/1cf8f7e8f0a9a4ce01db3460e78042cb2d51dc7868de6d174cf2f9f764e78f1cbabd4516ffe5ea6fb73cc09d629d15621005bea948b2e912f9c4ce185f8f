{"version":3,"sources":["webpack:///src/app/teacher/exam-schedule/exam-schedule.component.html","webpack:///src/app/teacher/exam-schedule/exam-schedule.component.ts","webpack:///src/app/teacher/exam-schedule/exam-schedule.service.ts","webpack:///src/app/teacher/leave-request/leave-request.component.html","webpack:///src/app/teacher/leave-request/leave-request.component.ts","webpack:///src/app/teacher/leave-request/leave-request.service.ts","webpack:///src/app/teacher/lectures/dialogs/delete/delete.component.ts","webpack:///src/app/teacher/lectures/dialogs/delete/delete.component.html","webpack:///src/app/teacher/lectures/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/teacher/lectures/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/teacher/lectures/lectures.component.html","webpack:///src/app/teacher/lectures/lectures.component.ts","webpack:///src/app/teacher/lectures/lectures.model.ts","webpack:///src/app/teacher/lectures/lectures.service.ts","webpack:///src/app/teacher/settings/settings.component.ts","webpack:///src/app/teacher/settings/settings.component.html","webpack:///src/app/teacher/teacher-routing.module.ts","webpack:///src/app/teacher/teacher.module.ts"],"names":["ExamScheduleComponent","httpClient","examScheduleService","displayedColumns","selection","SelectionModel","loadData","exampleDatabase","ExamScheduleService","dataSource","ExampleDataSource","paginator","sort","subs","sink","fromEvent","filter","nativeElement","subscribe","value","UnsubscribeOnDestroyAdapter","MatPaginator","MatSort","_sort","filterChange","BehaviorSubject","filteredData","renderedData","pageIndex","next","displayDataChanges","dataChange","sortChange","page","getAllExamSchedule","merge","pipe","map","data","slice","examSchedule","searchStr","subject","date","time","duration","totalMarks","toLowerCase","indexOf","sortedData","sortData","startIndex","pageSize","splice","active","direction","a","b","propertyA","propertyB","id","valueA","isNaN","valueB","DataSource","API_URL","isTblLoading","dialogData","get","error","console","log","name","message","$event","stopPropagation","LeaveRequestComponent","leaveRequestService","snackBar","numSelected","selected","length","numRows","isAllSelected","clear","forEach","row","select","totalSelect","item","index","findIndex","d","refreshTable","showNotification","_changePageSize","LeaveRequestService","colorName","text","placementFrom","placementAlign","open","verticalPosition","horizontalPosition","panelClass","provide","MAT_DATE_LOCALE","useValue","removeSelectedRows","getAllLeaveRequest","leaveRequest","rNo","fromDate","toDate","status","reason","DeleteDialogComponent","dialogRef","lecturesService","close","deleteLectures","MAT_DIALOG_DATA","confirmDelete","onNoClick","FormDialogComponent","fb","formControl","FormControl","Validators","action","dialogTitle","lectures","sName","Lectures","lecturesForm","createContactForm","hasError","group","addLectures","getRawValue","confirmAdd","LecturesComponent","dialog","contextMenuPosition","x","y","tempDirection","localStorage","getItem","afterClosed","result","unshift","getDialogData","foundIndex","LecturesService","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","MatMenuTrigger","addNew","refresh","getAllLecturess","getRandomID","dName","hod","phone","email","sYear","S4","Math","random","toString","substring","SettingsComponent","routes","path","component","DashboardComponent","Page404Component","TeacherRoutingModule","RouterModule","TeacherModule","CommonModule","NgxEchartsModule","echarts","FormsModule","ReactiveFormsModule","PerfectScrollbarModule","MatIconModule","MatButtonModule","NgApexchartsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatSelectModule","MatRadioModule","MatDatepickerModule","MatDialogModule","MatMenuModule","MatSortModule","MatCheckboxModule","MatTooltipModule","MatProgressSpinnerModule","OwlDateTimeModule","OwlNativeDateTimeModule"],"mappings":"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","file":"src_app_teacher_teacher_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Exam Schedule</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/patient/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Exam Schedule</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Exam Schedule</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"subject\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>subject\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.subject}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"class\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Class Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.class}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Start Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.date | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"time\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.time }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"duration\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Duration</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.duration}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"roomNo\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Room No\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap\"> {{row.roomNo}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"totalMarks\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Total Marks</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.totalMarks}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"reqMarks\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Require Marks</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.reqMarks}}</mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { ExamScheduleService } from './exam-schedule.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ExamSchedule } from './exam-schedule.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-exam-schedule',\r\n  templateUrl: './exam-schedule.component.html',\r\n  styleUrls: ['./exam-schedule.component.sass'],\r\n})\r\nexport class ExamScheduleComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'subject',\r\n    'class',\r\n    'date',\r\n    'time',\r\n    'duration',\r\n    'roomNo',\r\n    'totalMarks',\r\n    'reqMarks',\r\n  ];\r\n  exampleDatabase: ExamScheduleService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<ExamSchedule>(true, []);\r\n  index: number;\r\n  id: number;\r\n  examSchedule: ExamSchedule | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public examScheduleService: ExamScheduleService\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  public loadData() {\r\n    this.exampleDatabase = new ExamScheduleService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<ExamSchedule> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: ExamSchedule[] = [];\r\n  renderedData: ExamSchedule[] = [];\r\n  constructor(\r\n    public exampleDatabase: ExamScheduleService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<ExamSchedule[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllExamSchedule();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((examSchedule: ExamSchedule) => {\r\n            const searchStr = (\r\n              examSchedule.subject +\r\n              examSchedule.class +\r\n              examSchedule.date +\r\n              examSchedule.time +\r\n              examSchedule.duration +\r\n              examSchedule.totalMarks\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: ExamSchedule[]): ExamSchedule[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'subject':\r\n          [propertyA, propertyB] = [a.subject, b.subject];\r\n          break;\r\n        case 'class':\r\n          [propertyA, propertyB] = [a.class, b.class];\r\n          break;\r\n        case 'date':\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { ExamSchedule } from './exam-schedule.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class ExamScheduleService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/examSchedule.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<ExamSchedule[]> = new BehaviorSubject<\r\n    ExamSchedule[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): ExamSchedule[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllExamSchedule(): void {\r\n    this.subs.sink = this.httpClient\r\n      .get<ExamSchedule[]>(this.API_URL)\r\n      .subscribe(\r\n        (data) => {\r\n          this.isTblLoading = false;\r\n          this.dataChange.next(data);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.isTblLoading = false;\r\n          console.log(error.name + ' ' + error.message);\r\n        }\r\n      );\r\n  }\r\n  addExamSchedule(examSchedule: ExamSchedule): void {\r\n    this.dialogData = examSchedule;\r\n\r\n    /*  this.httpClient.post(this.API_URL, examSchedule).subscribe(data => {\r\n      this.dialogData = examSchedule;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateExamSchedule(examSchedule: ExamSchedule): void {\r\n    this.dialogData = examSchedule;\r\n\r\n    /* this.httpClient.put(this.API_URL + examSchedule.id, examSchedule).subscribe(data => {\r\n      this.dialogData = examSchedule;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteExamSchedule(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Leave Request</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/patient/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Leave Request</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Leave Request</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-5'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-5\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"rNo\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header class=\"psl-3 tbl-col-width-per-8\">Roll No\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" class=\"psl-3 tbl-col-width-per-8\"> {{row.rNo}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Student Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"fromDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>From Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.fromDate | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"toDate\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>To Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.toDate | date: 'MM/dd/yyyy' }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\"> {{row.status}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"reason\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Reason\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" class=\"column-nowrap\"> {{row.reason}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"psl-3 tbl-col-width-per-10\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"psl-3 tbl-col-width-per-10\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" matTooltip=\"Approve\"\r\n                      (click)=\"$event.stopPropagation()\">\r\n                      <mat-icon aria-label=\"Approve\" class=\"col-white\">check</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" matTooltip=\"Reject\"\r\n                      (click)=\"$event.stopPropagation()\">\r\n                      <mat-icon aria-label=\"Reject\" class=\"col-white\">clear</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { LeaveRequestService } from './leave-request.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { LeaveRequest } from './leave-request.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-leave-request',\r\n  templateUrl: './leave-request.component.html',\r\n  styleUrls: ['./leave-request.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\r\n})\r\nexport class LeaveRequestComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'select',\r\n    'img',\r\n    'rNo',\r\n    'name',\r\n    'fromDate',\r\n    'toDate',\r\n    'status',\r\n    'reason',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: LeaveRequestService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<LeaveRequest>(true, []);\r\n  index: number;\r\n  id: number;\r\n  leaveRequest: LeaveRequest | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public leaveRequestService: LeaveRequestService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<LeaveRequest>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new LeaveRequestService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<LeaveRequest> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: LeaveRequest[] = [];\r\n  renderedData: LeaveRequest[] = [];\r\n  constructor(\r\n    public exampleDatabase: LeaveRequestService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<LeaveRequest[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllLeaveRequest();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((leaveRequest: LeaveRequest) => {\r\n            const searchStr = (\r\n              leaveRequest.rNo +\r\n              leaveRequest.name +\r\n              leaveRequest.fromDate +\r\n              leaveRequest.toDate +\r\n              leaveRequest.status +\r\n              leaveRequest.reason\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: LeaveRequest[]): LeaveRequest[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'rNo':\r\n          [propertyA, propertyB] = [a.rNo, b.rNo];\r\n          break;\r\n        case 'name':\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case 'fromDate':\r\n          [propertyA, propertyB] = [a.fromDate, b.fromDate];\r\n          break;\r\n        case 'toDate':\r\n          [propertyA, propertyB] = [a.toDate, b.toDate];\r\n          break;\r\n        case 'status':\r\n          [propertyA, propertyB] = [a.status, b.status];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LeaveRequest } from './leave-request.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class LeaveRequestService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/leaveRequest.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<LeaveRequest[]> = new BehaviorSubject<\r\n    LeaveRequest[]\r\n  >([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): LeaveRequest[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllLeaveRequest(): void {\r\n    this.subs.sink = this.httpClient\r\n      .get<LeaveRequest[]>(this.API_URL)\r\n      .subscribe(\r\n        (data) => {\r\n          this.isTblLoading = false;\r\n          this.dataChange.next(data);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          this.isTblLoading = false;\r\n          console.log(error.name + ' ' + error.message);\r\n        }\r\n      );\r\n  }\r\n  addLeaveRequest(leaveRequest: LeaveRequest): void {\r\n    this.dialogData = leaveRequest;\r\n\r\n    /*  this.httpClient.post(this.API_URL, leaveRequest).subscribe(data => {\r\n      this.dialogData = leaveRequest;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateLeaveRequest(leaveRequest: LeaveRequest): void {\r\n    this.dialogData = leaveRequest;\r\n\r\n    /* this.httpClient.put(this.API_URL + leaveRequest.id, leaveRequest).subscribe(data => {\r\n      this.dialogData = leaveRequest;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteLeaveRequest(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { LecturesService } from '../../lectures.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass'],\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public lecturesService: LecturesService\r\n  ) {}\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.lecturesService.deleteLectures(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Subject Name: </span>{{data.sName}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"font-weight-bold\"> Class: </span>{{ data.class }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"font-weight-bold\">Date: </span>{{data.date | date: 'MM/dd/yyyy'}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"font-weight-bold p-t-5 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"lecturesForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Subject Name</mat-label>\r\n            <mat-select formControlName=\"sName\" required>\r\n              <mat-option [value]=\"'Mathematics'\">\r\n                Mathematics\r\n              </mat-option>\r\n              <mat-option [value]=\"'Chemistry'\">\r\n                Chemistry\r\n              </mat-option>\r\n              <mat-option [value]=\"'Physics'\">\r\n                Physics\r\n              </mat-option>\r\n              <mat-option [value]=\"'Biology'\">\r\n                Biology\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"lecturesForm.get('sName').hasError('required')\">\r\n              Select Any Subject\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Class Name</mat-label>\r\n            <input matInput formControlName=\"class\" required>\r\n            <mat-icon matSuffix>person</mat-icon>\r\n            <mat-error *ngIf=\"lecturesForm.get('class').hasError('required')\">\r\n              Class name required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Choose a date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\" required>\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"lecturesForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Time</mat-label>\r\n            <input matInput formControlName=\"time\" required>\r\n            <mat-icon matSuffix>schedule</mat-icon>\r\n            <mat-error *ngIf=\"lecturesForm.get('time').hasError('required')\">\r\n              Please enter a valid time\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Status</mat-label>\r\n            <mat-select formControlName=\"status\" required>\r\n              <mat-option [value]=\"'Confirm'\">\r\n                Confirm\r\n              </mat-option>\r\n              <mat-option [value]=\"'Cancelled'\">\r\n                Cancelled\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"lecturesForm.get('status').hasError('required')\">\r\n              Select Status\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!lecturesForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { LecturesService } from '../../lectures.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { Lectures } from '../../lectures.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  lecturesForm: FormGroup;\r\n  lectures: Lectures;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public lecturesService: LecturesService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.lectures.sName;\r\n      this.lectures = data.lectures;\r\n    } else {\r\n      this.dialogTitle = 'New Lectures';\r\n      this.lectures = new Lectures({});\r\n    }\r\n    this.lecturesForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.lectures.id],\r\n      sName: [this.lectures.sName, [Validators.required]],\r\n      class: [this.lectures.class, [Validators.required]],\r\n      date: [this.lectures.date, [Validators.required]],\r\n      time: [this.lectures.time, [Validators.required]],\r\n      status: [this.lectures.status, [Validators.required]],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.lecturesService.addLectures(this.lecturesForm.getRawValue());\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Lecturess</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/teacher/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Lecturess</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Lecturess</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"sName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Subject Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.sName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"class\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Class\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.class}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.date | date: 'MM/dd/yyyy'}}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"time\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Time</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.time}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"status\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.status}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div *ngIf=\"!exampleDatabase.isTblLoading\" class=\"no-results\"\r\n                [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { LecturesService } from './lectures.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Lectures } from './lectures.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n\r\n@Component({\r\n  selector: 'app-lectures',\r\n  templateUrl: './lectures.component.html',\r\n  styleUrls: ['./lectures.component.sass'],\r\n})\r\nexport class LecturesComponent\r\n  extends UnsubscribeOnDestroyAdapter\r\n  implements OnInit\r\n{\r\n  displayedColumns = [\r\n    'select',\r\n    'sName',\r\n    'class',\r\n    'date',\r\n    'time',\r\n    'status',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: LecturesService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Lectures>(true, []);\r\n  id: number;\r\n  lectures: Lectures | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public lecturesService: LecturesService,\r\n    private snackBar: MatSnackBar\r\n  ) {\r\n    super();\r\n  }\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        lectures: this.lectures,\r\n        action: 'add',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.lecturesService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        lectures: row,\r\n        action: 'edit',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.lecturesService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    this.subs.sink = dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Lectures>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new LecturesService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    this.subs.sink = fromEvent(this.filter.nativeElement, 'keyup').subscribe(\r\n      () => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      }\r\n    );\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Lectures) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Lectures> {\r\n  filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this.filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this.filterChange.next(filter);\r\n  }\r\n  filteredData: Lectures[] = [];\r\n  renderedData: Lectures[] = [];\r\n  constructor(\r\n    public exampleDatabase: LecturesService,\r\n    public paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this.filterChange.subscribe(() => (this.paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Lectures[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this.exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this.filterChange,\r\n      this.paginator.page,\r\n    ];\r\n    this.exampleDatabase.getAllLecturess();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this.exampleDatabase.data\r\n          .slice()\r\n          .filter((lectures: Lectures) => {\r\n            const searchStr = (\r\n              lectures.sName +\r\n              lectures.class +\r\n              lectures.date +\r\n              lectures.time\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this.paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Lectures[]): Lectures[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'sName':\r\n          [propertyA, propertyB] = [a.sName, b.sName];\r\n          break;\r\n        case 'class':\r\n          [propertyA, propertyB] = [a.class, b.class];\r\n          break;\r\n        case 'date':\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case 'time':\r\n          [propertyA, propertyB] = [a.time, b.time];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","export class Lectures {\r\n  id: number;\r\n  sName: string;\r\n  class: string;\r\n  date: string;\r\n  time: string;\r\n  status: string;\r\n  constructor(lectures) {\r\n    {\r\n      this.id = lectures.id || this.getRandomID();\r\n      this.sName = lectures.dName || '';\r\n      this.class = lectures.hod || '';\r\n      this.date = lectures.phone || '';\r\n      this.time = lectures.email || '';\r\n      this.status = lectures.sYear || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Lectures } from './lectures.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { UnsubscribeOnDestroyAdapter } from 'src/app/shared/UnsubscribeOnDestroyAdapter';\r\n@Injectable()\r\nexport class LecturesService extends UnsubscribeOnDestroyAdapter {\r\n  private readonly API_URL = 'assets/data/lectures.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Lectures[]> = new BehaviorSubject<Lectures[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {\r\n    super();\r\n  }\r\n  get data(): Lectures[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllLecturess(): void {\r\n    this.subs.sink = this.httpClient.get<Lectures[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  addLectures(lectures: Lectures): void {\r\n    this.dialogData = lectures;\r\n\r\n    /*  this.httpClient.post(this.API_URL, lectures).subscribe(data => {\r\n      this.dialogData = lectures;\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n     // error code here\r\n    });*/\r\n  }\r\n  updateLectures(lectures: Lectures): void {\r\n    this.dialogData = lectures;\r\n\r\n    /* this.httpClient.put(this.API_URL + lectures.id, lectures).subscribe(data => {\r\n      this.dialogData = lectures;\r\n    },\r\n    (err: HttpErrorResponse) => {\r\n      // error code here\r\n    }\r\n  );*/\r\n  }\r\n  deleteLectures(id: number): void {\r\n    console.log(id);\r\n\r\n    /*  this.httpClient.delete(this.API_URL + id).subscribe(data => {\r\n      console.log(id);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n         // error code here\r\n      }\r\n    );*/\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.sass']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Settings</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/doctor/dashboard\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Settings</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"header\">\r\n        <h2>Security Settings</h2>\r\n      </div>\r\n      <div class=\"body\">\r\n        <div class=\"example-container\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Username</mat-label>\r\n            <input matInput>\r\n          </mat-form-field>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Current Password</mat-label>\r\n            <input matInput type=\"password\">\r\n          </mat-form-field>\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>New Password</mat-label>\r\n            <input matInput type=\"password\">\r\n          </mat-form-field>\r\n        </div>\r\n        <button mat-raised-button color=\"primary\">Save</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"card\">\r\n      <div class=\"header\">\r\n        <h2>Account Settings</h2>\r\n      </div>\r\n      <div class=\"body\">\r\n        <div class=\"row clearfix\">\r\n          <div class=\"col-lg-6 col-md-12\">\r\n            <div class=\"form-group\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>First Name</mat-label>\r\n                <input matInput>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-6 col-md-12\">\r\n            <div class=\"form-group\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Last Name</mat-label>\r\n                <input matInput>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12\">\r\n            <div class=\"form-group\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>City</mat-label>\r\n                <input matInput>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12\">\r\n            <div class=\"form-group\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Email</mat-label>\r\n                <input matInput>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12\">\r\n            <div class=\"form-group\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Country</mat-label>\r\n                <input matInput>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"form-group\">\r\n              <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n                <mat-label>Address</mat-label>\r\n                <textarea matInput></textarea>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <button mat-raised-button color=\"primary\">Save Changes</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { ExamScheduleComponent } from './exam-schedule/exam-schedule.component';\r\nimport { LecturesComponent } from './lectures/lectures.component';\r\nimport { Page404Component } from './../authentication/page404/page404.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LeaveRequestComponent } from './leave-request/leave-request.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: DashboardComponent,\r\n  },\r\n  {\r\n    path: 'lectures',\r\n    component: LecturesComponent,\r\n  },\r\n  {\r\n    path: 'leave-request',\r\n    component: LeaveRequestComponent,\r\n  },\r\n  {\r\n    path: 'exam-schedule',\r\n    component: ExamScheduleComponent,\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: SettingsComponent,\r\n  },\r\n  { path: '**', component: Page404Component },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TeacherRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { ChartsModule as chartjsModule } from 'ng2-charts';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { TeacherRoutingModule } from './teacher-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { LecturesComponent } from './lectures/lectures.component';\r\nimport { DeleteDialogComponent } from './lectures/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './lectures/dialogs/form-dialog/form-dialog.component';\r\nimport { LeaveRequestComponent } from './leave-request/leave-request.component';\r\nimport { SettingsComponent } from './settings/settings.component';\r\nimport { ExamScheduleComponent } from './exam-schedule/exam-schedule.component';\r\nimport { LecturesService } from './lectures/lectures.service';\r\nimport { LeaveRequestService } from './leave-request/leave-request.service';\r\nimport { ExamScheduleService } from './exam-schedule/exam-schedule.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent,\r\n    LecturesComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    LeaveRequestComponent,\r\n    SettingsComponent,\r\n    ExamScheduleComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TeacherRoutingModule,\r\n    chartjsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    NgApexchartsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatMenuModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n  ],\r\n  providers: [LecturesService, LeaveRequestService, ExamScheduleService],\r\n})\r\nexport class TeacherModule {}\r\n"]}